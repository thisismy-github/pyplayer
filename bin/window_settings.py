# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bin\window_settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_settingsDialog(object):
    def setupUi(self, settingsDialog):
        settingsDialog.setObjectName("settingsDialog")
        settingsDialog.resize(353, 730)
        settingsDialog.setMinimumSize(QtCore.QSize(353, 353))
        self.gridLayout = QtWidgets.QGridLayout(settingsDialog)
        self.gridLayout.setContentsMargins(0, 0, 0, 8)
        self.gridLayout.setVerticalSpacing(8)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(5, 0, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 5, 2, 2, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(settingsDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 5, 1, 2, 1)
        self.scrollArea = QtWidgets.QScrollArea(settingsDialog)
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 344, 2754))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.tabWidget = QtWidgets.QTabWidget(self.scrollAreaWidgetContents)
        self.tabWidget.setObjectName("tabWidget")
        self.tabGeneral = QtWidgets.QWidget()
        self.tabGeneral.setObjectName("tabGeneral")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tabGeneral)
        self.verticalLayout_3.setSpacing(20)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setHorizontalSpacing(6)
        self.formLayout.setVerticalSpacing(3)
        self.formLayout.setObjectName("formLayout")
        self.label = QtWidgets.QLabel(self.tabGeneral)
        self.label.setToolTip("The currently applied theme. Themes are stored in your installation directory\'s \"themes\" folder as .json, .css, .qss, or .txt files.")
        self.label.setText("Theme")
        self.label.setObjectName("label")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboThemes = QtWidgets.QComboBox(self.tabGeneral)
        self.comboThemes.setToolTip("The currently applied theme. Themes are stored in your installation directory\'s \"themes\" folder as .json, .css, .qss, or .txt files.")
        self.comboThemes.setObjectName("comboThemes")
        self.comboThemes.addItem("")
        self.horizontalLayout.addWidget(self.comboThemes)
        self.buttonRefreshThemes = QtWidgets.QPushButton(self.tabGeneral)
        self.buttonRefreshThemes.setMaximumSize(QtCore.QSize(22, 22))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.buttonRefreshThemes.setFont(font)
        self.buttonRefreshThemes.setToolTip("Refresh theme list")
        self.buttonRefreshThemes.setStyleSheet("QPushButton { padding-bottom: 3px; }")
        self.buttonRefreshThemes.setText("‚ü≥")
        self.buttonRefreshThemes.setObjectName("buttonRefreshThemes")
        self.horizontalLayout.addWidget(self.buttonRefreshThemes)
        self.formLayout.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout)
        self.label_49 = QtWidgets.QLabel(self.tabGeneral)
        self.label_49.setObjectName("label_49")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_49)
        self.lineWindowTitleFormat = QtWidgets.QLineEdit(self.tabGeneral)
        self.lineWindowTitleFormat.setText("?paused ?name (?duration | ?fpsfps | ?size)")
        self.lineWindowTitleFormat.setObjectName("lineWindowTitleFormat")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.lineWindowTitleFormat)
        self.label_70 = QtWidgets.QLabel(self.tabGeneral)
        self.label_70.setObjectName("label_70")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_70)
        self.lineDateFormatShort = QtWidgets.QLineEdit(self.tabGeneral)
        self.lineDateFormatShort.setText("%-D %-I:%M%p")
        self.lineDateFormatShort.setObjectName("lineDateFormatShort")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lineDateFormatShort)
        self.label_71 = QtWidgets.QLabel(self.tabGeneral)
        self.label_71.setObjectName("label_71")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_71)
        self.lineDateFormatLong = QtWidgets.QLineEdit(self.tabGeneral)
        self.lineDateFormatLong.setText("%I:%M:%S %p | %a, %b %-e, %Y")
        self.lineDateFormatLong.setObjectName("lineDateFormatLong")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.lineDateFormatLong)
        self.label_58 = QtWidgets.QLabel(self.tabGeneral)
        self.label_58.setObjectName("label_58")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_58)
        self.spinRecentFiles = QtWidgets.QSpinBox(self.tabGeneral)
        self.spinRecentFiles.setMaximum(1000)
        self.spinRecentFiles.setProperty("value", 25)
        self.spinRecentFiles.setObjectName("spinRecentFiles")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinRecentFiles)
        self.label_50 = QtWidgets.QLabel(self.tabGeneral)
        self.label_50.setObjectName("label_50")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_50)
        self.comboDialogPosition = QtWidgets.QComboBox(self.tabGeneral)
        self.comboDialogPosition.setObjectName("comboDialogPosition")
        self.comboDialogPosition.addItem("")
        self.comboDialogPosition.addItem("")
        self.comboDialogPosition.addItem("")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.comboDialogPosition)
        self.checkHideIdleCursor = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkHideIdleCursor.setMinimumSize(QtCore.QSize(95, 0))
        self.checkHideIdleCursor.setChecked(True)
        self.checkHideIdleCursor.setObjectName("checkHideIdleCursor")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.checkHideIdleCursor)
        self.spinHideIdleCursorDuration = QtWidgets.QDoubleSpinBox(self.tabGeneral)
        self.spinHideIdleCursorDuration.setDecimals(1)
        self.spinHideIdleCursorDuration.setMinimum(0.1)
        self.spinHideIdleCursorDuration.setMaximum(9999999.0)
        self.spinHideIdleCursorDuration.setSingleStep(0.1)
        self.spinHideIdleCursorDuration.setProperty("value", 1.5)
        self.spinHideIdleCursorDuration.setObjectName("spinHideIdleCursorDuration")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.spinHideIdleCursorDuration)
        self.checkFFprobe = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkFFprobe.setChecked(True)
        self.checkFFprobe.setObjectName("checkFFprobe")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.checkFFprobe)
        self.checkHighPrecisionProgress = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkHighPrecisionProgress.setChecked(True)
        self.checkHighPrecisionProgress.setObjectName("checkHighPrecisionProgress")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.checkHighPrecisionProgress)
        self.checkStopOnFinish = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkStopOnFinish.setObjectName("checkStopOnFinish")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.SpanningRole, self.checkStopOnFinish)
        self.checkRecentFilesReorderFromMenu = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkRecentFilesReorderFromMenu.setObjectName("checkRecentFilesReorderFromMenu")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.checkRecentFilesReorderFromMenu)
        self.checkRememberDropFolder = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkRememberDropFolder.setChecked(True)
        self.checkRememberDropFolder.setObjectName("checkRememberDropFolder")
        self.formLayout.setWidget(11, QtWidgets.QFormLayout.SpanningRole, self.checkRememberDropFolder)
        self.checkAutoEnableSubtitles = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkAutoEnableSubtitles.setChecked(True)
        self.checkAutoEnableSubtitles.setObjectName("checkAutoEnableSubtitles")
        self.formLayout.setWidget(12, QtWidgets.QFormLayout.SpanningRole, self.checkAutoEnableSubtitles)
        self.checkRecycleBin = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkRecycleBin.setChecked(True)
        self.checkRecycleBin.setObjectName("checkRecycleBin")
        self.formLayout.setWidget(13, QtWidgets.QFormLayout.SpanningRole, self.checkRecycleBin)
        self.checkCopyEscapeBackslashes = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkCopyEscapeBackslashes.setChecked(True)
        self.checkCopyEscapeBackslashes.setObjectName("checkCopyEscapeBackslashes")
        self.formLayout.setWidget(14, QtWidgets.QFormLayout.SpanningRole, self.checkCopyEscapeBackslashes)
        self.checkContextShowSubmenus = QtWidgets.QCheckBox(self.tabGeneral)
        self.checkContextShowSubmenus.setTristate(True)
        self.checkContextShowSubmenus.setObjectName("checkContextShowSubmenus")
        self.formLayout.setWidget(15, QtWidgets.QFormLayout.SpanningRole, self.checkContextShowSubmenus)
        self.verticalLayout_3.addLayout(self.formLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(-1, 0, -1, 0)
        self.verticalLayout.setSpacing(3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_7.setContentsMargins(6, 5, 6, 6)
        self.verticalLayout_7.setSpacing(1)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.checkFocusAggressive = QtWidgets.QCheckBox(self.groupBox)
        self.checkFocusAggressive.setChecked(True)
        self.checkFocusAggressive.setObjectName("checkFocusAggressive")
        self.verticalLayout_7.addWidget(self.checkFocusAggressive)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setContentsMargins(8, 3, 8, 4)
        self.verticalLayout_8.setSpacing(7)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.groupBox_12 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_12.setObjectName("groupBox_12")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.groupBox_12)
        self.verticalLayout_11.setContentsMargins(12, 2, 0, 4)
        self.verticalLayout_11.setSpacing(1)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.checkFocusOnNormal = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnNormal.setChecked(True)
        self.checkFocusOnNormal.setObjectName("checkFocusOnNormal")
        self.verticalLayout_11.addWidget(self.checkFocusOnNormal)
        self.checkFocusOnMaximized = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnMaximized.setChecked(True)
        self.checkFocusOnMaximized.setObjectName("checkFocusOnMaximized")
        self.verticalLayout_11.addWidget(self.checkFocusOnMaximized)
        self.checkFocusOnFullscreen = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnFullscreen.setChecked(True)
        self.checkFocusOnFullscreen.setObjectName("checkFocusOnFullscreen")
        self.verticalLayout_11.addWidget(self.checkFocusOnFullscreen)
        self.checkFocusOnMinimizedTaskbar = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnMinimizedTaskbar.setChecked(True)
        self.checkFocusOnMinimizedTaskbar.setObjectName("checkFocusOnMinimizedTaskbar")
        self.verticalLayout_11.addWidget(self.checkFocusOnMinimizedTaskbar)
        self.checkFocusOnMinimizedTray = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnMinimizedTray.setChecked(True)
        self.checkFocusOnMinimizedTray.setObjectName("checkFocusOnMinimizedTray")
        self.verticalLayout_11.addWidget(self.checkFocusOnMinimizedTray)
        self.checkFocusOnDropNormal = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnDropNormal.setChecked(True)
        self.checkFocusOnDropNormal.setObjectName("checkFocusOnDropNormal")
        self.verticalLayout_11.addWidget(self.checkFocusOnDropNormal)
        self.checkFocusOnDropMaximized = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnDropMaximized.setObjectName("checkFocusOnDropMaximized")
        self.verticalLayout_11.addWidget(self.checkFocusOnDropMaximized)
        self.checkFocusOnDropFullscreen = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnDropFullscreen.setObjectName("checkFocusOnDropFullscreen")
        self.verticalLayout_11.addWidget(self.checkFocusOnDropFullscreen)
        self.checkFocusOnEdit = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkFocusOnEdit.setChecked(True)
        self.checkFocusOnEdit.setObjectName("checkFocusOnEdit")
        self.verticalLayout_11.addWidget(self.checkFocusOnEdit)
        self.verticalLayout_8.addWidget(self.groupBox_12)
        self.groupBox_13 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_13.setObjectName("groupBox_13")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.groupBox_13)
        self.verticalLayout_12.setContentsMargins(12, 2, 0, 4)
        self.verticalLayout_12.setSpacing(1)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.checkFocusIgnoreFullscreen = QtWidgets.QCheckBox(self.groupBox_13)
        self.checkFocusIgnoreFullscreen.setChecked(True)
        self.checkFocusIgnoreFullscreen.setObjectName("checkFocusIgnoreFullscreen")
        self.verticalLayout_12.addWidget(self.checkFocusIgnoreFullscreen)
        self.verticalLayout_21 = QtWidgets.QVBoxLayout()
        self.verticalLayout_21.setContentsMargins(20, -1, -1, -1)
        self.verticalLayout_21.setSpacing(0)
        self.verticalLayout_21.setObjectName("verticalLayout_21")
        self.checkFocusIgnoreFullscreenEditsOnly = QtWidgets.QCheckBox(self.groupBox_13)
        self.checkFocusIgnoreFullscreenEditsOnly.setChecked(True)
        self.checkFocusIgnoreFullscreenEditsOnly.setObjectName("checkFocusIgnoreFullscreenEditsOnly")
        self.verticalLayout_21.addWidget(self.checkFocusIgnoreFullscreenEditsOnly)
        self.verticalLayout_12.addLayout(self.verticalLayout_21)
        self.checkFocusIgnoreAutoplay = QtWidgets.QCheckBox(self.groupBox_13)
        self.checkFocusIgnoreAutoplay.setChecked(True)
        self.checkFocusIgnoreAutoplay.setObjectName("checkFocusIgnoreAutoplay")
        self.verticalLayout_12.addWidget(self.checkFocusIgnoreAutoplay)
        self.checkFocusIgnoreAudio = QtWidgets.QCheckBox(self.groupBox_13)
        self.checkFocusIgnoreAudio.setObjectName("checkFocusIgnoreAudio")
        self.verticalLayout_12.addWidget(self.checkFocusIgnoreAudio)
        self.verticalLayout_8.addWidget(self.groupBox_13)
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_9.setContentsMargins(-1, 2, 0, 4)
        self.verticalLayout_9.setSpacing(1)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setSpacing(8)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.checkSnapVideos = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapVideos.setMinimumSize(QtCore.QSize(55, 0))
        self.checkSnapVideos.setChecked(True)
        self.checkSnapVideos.setObjectName("checkSnapVideos")
        self.horizontalLayout_3.addWidget(self.checkSnapVideos)
        self.checkSnapGifs = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapGifs.setMinimumSize(QtCore.QSize(46, 0))
        self.checkSnapGifs.setChecked(True)
        self.checkSnapGifs.setObjectName("checkSnapGifs")
        self.horizontalLayout_3.addWidget(self.checkSnapGifs)
        self.checkSnapImages = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapImages.setMinimumSize(QtCore.QSize(56, 0))
        self.checkSnapImages.setObjectName("checkSnapImages")
        self.horizontalLayout_3.addWidget(self.checkSnapImages)
        self.checkSnapArt = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapArt.setMinimumSize(QtCore.QSize(68, 0))
        self.checkSnapArt.setObjectName("checkSnapArt")
        self.horizontalLayout_3.addWidget(self.checkSnapArt)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.verticalLayout_9.addLayout(self.horizontalLayout_3)
        self.checkResizeOnOpen = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkResizeOnOpen.setTristate(True)
        self.checkResizeOnOpen.setObjectName("checkResizeOnOpen")
        self.verticalLayout_9.addWidget(self.checkResizeOnOpen)
        self.checkSnapOnOpen = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapOnOpen.setTristate(True)
        self.checkSnapOnOpen.setObjectName("checkSnapOnOpen")
        self.verticalLayout_9.addWidget(self.checkSnapOnOpen)
        self.checkSnapOnResize = QtWidgets.QCheckBox(self.groupBox_2)
        self.checkSnapOnResize.setChecked(True)
        self.checkSnapOnResize.setTristate(True)
        self.checkSnapOnResize.setObjectName("checkSnapOnResize")
        self.verticalLayout_9.addWidget(self.checkSnapOnResize)
        self.verticalLayout_8.addWidget(self.groupBox_2)
        self.groupBox_14 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_14.setObjectName("groupBox_14")
        self.formLayout_14 = QtWidgets.QFormLayout(self.groupBox_14)
        self.formLayout_14.setContentsMargins(6, 2, 6, 4)
        self.formLayout_14.setHorizontalSpacing(5)
        self.formLayout_14.setVerticalSpacing(3)
        self.formLayout_14.setObjectName("formLayout_14")
        self.label_53 = QtWidgets.QLabel(self.groupBox_14)
        self.label_53.setObjectName("label_53")
        self.formLayout_14.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_53)
        self.comboScaleImages = QtWidgets.QComboBox(self.groupBox_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboScaleImages.sizePolicy().hasHeightForWidth())
        self.comboScaleImages.setSizePolicy(sizePolicy)
        self.comboScaleImages.setObjectName("comboScaleImages")
        self.comboScaleImages.addItem("")
        self.comboScaleImages.addItem("")
        self.comboScaleImages.addItem("")
        self.comboScaleImages.addItem("")
        self.formLayout_14.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboScaleImages)
        self.label_51 = QtWidgets.QLabel(self.groupBox_14)
        self.label_51.setObjectName("label_51")
        self.formLayout_14.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_51)
        self.comboScaleArt = QtWidgets.QComboBox(self.groupBox_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboScaleArt.sizePolicy().hasHeightForWidth())
        self.comboScaleArt.setSizePolicy(sizePolicy)
        self.comboScaleArt.setObjectName("comboScaleArt")
        self.comboScaleArt.addItem("")
        self.comboScaleArt.addItem("")
        self.comboScaleArt.addItem("")
        self.comboScaleArt.addItem("")
        self.formLayout_14.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboScaleArt)
        self.label_52 = QtWidgets.QLabel(self.groupBox_14)
        self.label_52.setObjectName("label_52")
        self.formLayout_14.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_52)
        self.comboScaleGifs = QtWidgets.QComboBox(self.groupBox_14)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboScaleGifs.sizePolicy().hasHeightForWidth())
        self.comboScaleGifs.setSizePolicy(sizePolicy)
        self.comboScaleGifs.setObjectName("comboScaleGifs")
        self.comboScaleGifs.addItem("")
        self.comboScaleGifs.addItem("")
        self.comboScaleGifs.addItem("")
        self.formLayout_14.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboScaleGifs)
        self.checkShowCoverArt = QtWidgets.QCheckBox(self.groupBox_14)
        self.checkShowCoverArt.setChecked(True)
        self.checkShowCoverArt.setObjectName("checkShowCoverArt")
        self.formLayout_14.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.checkShowCoverArt)
        self.checkScaleFiltering = QtWidgets.QCheckBox(self.groupBox_14)
        self.checkScaleFiltering.setChecked(True)
        self.checkScaleFiltering.setObjectName("checkScaleFiltering")
        self.formLayout_14.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.checkScaleFiltering)
        self.verticalLayout_8.addWidget(self.groupBox_14)
        self.verticalLayout_7.addLayout(self.verticalLayout_8)
        self.checkClampOnOpen = QtWidgets.QCheckBox(self.groupBox)
        self.checkClampOnOpen.setChecked(True)
        self.checkClampOnOpen.setObjectName("checkClampOnOpen")
        self.verticalLayout_7.addWidget(self.checkClampOnOpen)
        self.checkClampOnResize = QtWidgets.QCheckBox(self.groupBox)
        self.checkClampOnResize.setChecked(True)
        self.checkClampOnResize.setObjectName("checkClampOnResize")
        self.verticalLayout_7.addWidget(self.checkClampOnResize)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.checkMinimizePause = QtWidgets.QCheckBox(self.groupBox)
        self.checkMinimizePause.setObjectName("checkMinimizePause")
        self.horizontalLayout_8.addWidget(self.checkMinimizePause)
        self.checkMinimizeRestore = QtWidgets.QCheckBox(self.groupBox)
        self.checkMinimizeRestore.setEnabled(False)
        self.checkMinimizeRestore.setObjectName("checkMinimizeRestore")
        self.horizontalLayout_8.addWidget(self.checkMinimizeRestore)
        self.verticalLayout_7.addLayout(self.horizontalLayout_8)
        self.verticalLayout.addWidget(self.groupBox)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        self.groupBox_15 = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox_15.setObjectName("groupBox_15")
        self.formLayout_8 = QtWidgets.QFormLayout(self.groupBox_15)
        self.formLayout_8.setContentsMargins(7, 4, 6, 7)
        self.formLayout_8.setVerticalSpacing(1)
        self.formLayout_8.setObjectName("formLayout_8")
        self.checkTaskbarProgressEdit = QtWidgets.QCheckBox(self.groupBox_15)
        self.checkTaskbarProgressEdit.setChecked(True)
        self.checkTaskbarProgressEdit.setObjectName("checkTaskbarProgressEdit")
        self.formLayout_8.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.checkTaskbarProgressEdit)
        self.checkTaskbarIconPauseMinimized = QtWidgets.QCheckBox(self.groupBox_15)
        self.checkTaskbarIconPauseMinimized.setChecked(True)
        self.checkTaskbarIconPauseMinimized.setObjectName("checkTaskbarIconPauseMinimized")
        self.formLayout_8.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.checkTaskbarIconPauseMinimized)
        self.checkTaskbarControls = QtWidgets.QCheckBox(self.groupBox_15)
        self.checkTaskbarControls.setChecked(True)
        self.checkTaskbarControls.setObjectName("checkTaskbarControls")
        self.formLayout_8.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.checkTaskbarControls)
        spacerItem2 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.formLayout_8.setItem(4, QtWidgets.QFormLayout.SpanningRole, spacerItem2)
        self.label_9 = QtWidgets.QLabel(self.groupBox_15)
        self.label_9.setObjectName("label_9")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_9)
        self.comboTaskbarFlash = QtWidgets.QComboBox(self.groupBox_15)
        self.comboTaskbarFlash.setObjectName("comboTaskbarFlash")
        self.comboTaskbarFlash.addItem("")
        self.comboTaskbarFlash.addItem("")
        self.comboTaskbarFlash.addItem("")
        self.comboTaskbarFlash.addItem("")
        self.formLayout_8.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.comboTaskbarFlash)
        self.verticalLayout_3.addWidget(self.groupBox_15)
        self.groupTray = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupTray.setCheckable(True)
        self.groupTray.setObjectName("groupTray")
        self.formLayout_15 = QtWidgets.QFormLayout(self.groupTray)
        self.formLayout_15.setContentsMargins(14, 5, -1, 6)
        self.formLayout_15.setVerticalSpacing(1)
        self.formLayout_15.setObjectName("formLayout_15")
        self.checkTrayClose = QtWidgets.QCheckBox(self.groupTray)
        self.checkTrayClose.setChecked(True)
        self.checkTrayClose.setObjectName("checkTrayClose")
        self.formLayout_15.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.checkTrayClose)
        self.checkTrayMinimize = QtWidgets.QCheckBox(self.groupTray)
        self.checkTrayMinimize.setObjectName("checkTrayMinimize")
        self.formLayout_15.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.checkTrayMinimize)
        self.comboTrayMiddleClick = QtWidgets.QComboBox(self.groupTray)
        self.comboTrayMiddleClick.setObjectName("comboTrayMiddleClick")
        self.comboTrayMiddleClick.addItem("")
        self.comboTrayMiddleClick.addItem("")
        self.comboTrayMiddleClick.addItem("")
        self.comboTrayMiddleClick.addItem("")
        self.formLayout_15.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.comboTrayMiddleClick)
        self.label_10 = QtWidgets.QLabel(self.groupTray)
        self.label_10.setObjectName("label_10")
        self.formLayout_15.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_10)
        self.checkTrayResetFirstFileOnRestore = QtWidgets.QCheckBox(self.groupTray)
        self.checkTrayResetFirstFileOnRestore.setChecked(True)
        self.checkTrayResetFirstFileOnRestore.setTristate(True)
        self.checkTrayResetFirstFileOnRestore.setObjectName("checkTrayResetFirstFileOnRestore")
        self.formLayout_15.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.checkTrayResetFirstFileOnRestore)
        self.verticalLayout_3.addWidget(self.groupTray)
        self.groupHover = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupHover.setCheckable(True)
        self.groupHover.setObjectName("groupHover")
        self.formLayout_2 = QtWidgets.QFormLayout(self.groupHover)
        self.formLayout_2.setContentsMargins(8, 6, 8, 5)
        self.formLayout_2.setVerticalSpacing(4)
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_3 = QtWidgets.QLabel(self.groupHover)
        self.label_3.setObjectName("label_3")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_3)
        self.comboHoverFont = QtWidgets.QFontComboBox(self.groupHover)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Light")
        font.setPointSize(11)
        self.comboHoverFont.setCurrentFont(font)
        self.comboHoverFont.setObjectName("comboHoverFont")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboHoverFont)
        self.label_5 = QtWidgets.QLabel(self.groupHover)
        self.label_5.setObjectName("label_5")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_5)
        self.spinHoverFontSize = QtWidgets.QSpinBox(self.groupHover)
        self.spinHoverFontSize.setMinimum(6)
        self.spinHoverFontSize.setMaximum(20)
        self.spinHoverFontSize.setProperty("value", 12)
        self.spinHoverFontSize.setObjectName("spinHoverFontSize")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinHoverFontSize)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSpacing(5)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem3)
        self.label_6 = QtWidgets.QLabel(self.groupHover)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_6.addWidget(self.label_6)
        self.buttonHoverFontColor = QtWidgets.QPushButton(self.groupHover)
        self.buttonHoverFontColor.setMaximumSize(QtCore.QSize(22, 18))
        self.buttonHoverFontColor.setText("")
        self.buttonHoverFontColor.setObjectName("buttonHoverFontColor")
        self.horizontalLayout_6.addWidget(self.buttonHoverFontColor)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem4)
        self.checkHoverShadow = QtWidgets.QCheckBox(self.groupHover)
        self.checkHoverShadow.setChecked(True)
        self.checkHoverShadow.setObjectName("checkHoverShadow")
        self.horizontalLayout_6.addWidget(self.checkHoverShadow)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem5)
        self.formLayout_2.setLayout(3, QtWidgets.QFormLayout.SpanningRole, self.horizontalLayout_6)
        self.spinHoverFadeDuration = QtWidgets.QDoubleSpinBox(self.groupHover)
        self.spinHoverFadeDuration.setMinimum(0.0)
        self.spinHoverFadeDuration.setMaximum(10.0)
        self.spinHoverFadeDuration.setSingleStep(0.05)
        self.spinHoverFadeDuration.setProperty("value", 0.35)
        self.spinHoverFadeDuration.setObjectName("spinHoverFadeDuration")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinHoverFadeDuration)
        self.label_41 = QtWidgets.QLabel(self.groupHover)
        self.label_41.setObjectName("label_41")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_41)
        self.verticalLayout_3.addWidget(self.groupHover)
        self.groupBox_9 = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox_9.setObjectName("groupBox_9")
        self.formLayout_11 = QtWidgets.QFormLayout(self.groupBox_9)
        self.formLayout_11.setContentsMargins(-1, 6, 5, 6)
        self.formLayout_11.setHorizontalSpacing(5)
        self.formLayout_11.setVerticalSpacing(2)
        self.formLayout_11.setObjectName("formLayout_11")
        self.label_68 = QtWidgets.QLabel(self.groupBox_9)
        self.label_68.setObjectName("label_68")
        self.formLayout_11.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_68)
        self.spinAutoplayMaxFiles = QtWidgets.QSpinBox(self.groupBox_9)
        self.spinAutoplayMaxFiles.setMaximum(999)
        self.spinAutoplayMaxFiles.setProperty("value", 100)
        self.spinAutoplayMaxFiles.setObjectName("spinAutoplayMaxFiles")
        self.formLayout_11.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinAutoplayMaxFiles)
        self.checkAutoplayHideMarquee = QtWidgets.QCheckBox(self.groupBox_9)
        self.checkAutoplayHideMarquee.setChecked(True)
        self.checkAutoplayHideMarquee.setObjectName("checkAutoplayHideMarquee")
        self.formLayout_11.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.checkAutoplayHideMarquee)
        self.checkAutoplayAddToRecents = QtWidgets.QCheckBox(self.groupBox_9)
        self.checkAutoplayAddToRecents.setChecked(True)
        self.checkAutoplayAddToRecents.setObjectName("checkAutoplayAddToRecents")
        self.formLayout_11.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.checkAutoplayAddToRecents)
        self.checkAutoplayShuffleAddToRecents = QtWidgets.QCheckBox(self.groupBox_9)
        self.checkAutoplayShuffleAddToRecents.setChecked(True)
        self.checkAutoplayShuffleAddToRecents.setObjectName("checkAutoplayShuffleAddToRecents")
        self.formLayout_11.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.checkAutoplayShuffleAddToRecents)
        self.verticalLayout_3.addWidget(self.groupBox_9)
        self.groupBox_7 = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox_7.setObjectName("groupBox_7")
        self.formLayout_10 = QtWidgets.QFormLayout(self.groupBox_7)
        self.formLayout_10.setContentsMargins(-1, 5, 5, 6)
        self.formLayout_10.setHorizontalSpacing(5)
        self.formLayout_10.setVerticalSpacing(3)
        self.formLayout_10.setObjectName("formLayout_10")
        self.checkZoomPrecise = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomPrecise.setChecked(True)
        self.checkZoomPrecise.setObjectName("checkZoomPrecise")
        self.formLayout_10.setWidget(2, QtWidgets.QFormLayout.SpanningRole, self.checkZoomPrecise)
        self.checkZoomSmooth = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomSmooth.setMinimumSize(QtCore.QSize(104, 0))
        self.checkZoomSmooth.setChecked(True)
        self.checkZoomSmooth.setObjectName("checkZoomSmooth")
        self.formLayout_10.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.checkZoomSmooth)
        self.spinZoomSmoothFactor = QtWidgets.QSpinBox(self.groupBox_7)
        self.spinZoomSmoothFactor.setMinimum(15)
        self.spinZoomSmoothFactor.setMaximum(65)
        self.spinZoomSmoothFactor.setProperty("value", 33)
        self.spinZoomSmoothFactor.setObjectName("spinZoomSmoothFactor")
        self.formLayout_10.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinZoomSmoothFactor)
        self.label_62 = QtWidgets.QLabel(self.groupBox_7)
        self.label_62.setObjectName("label_62")
        self.formLayout_10.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_62)
        self.spinZoomIncrement1 = QtWidgets.QSpinBox(self.groupBox_7)
        self.spinZoomIncrement1.setMinimum(2)
        self.spinZoomIncrement1.setMaximum(100)
        self.spinZoomIncrement1.setProperty("value", 6)
        self.spinZoomIncrement1.setObjectName("spinZoomIncrement1")
        self.formLayout_10.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinZoomIncrement1)
        self.label_63 = QtWidgets.QLabel(self.groupBox_7)
        self.label_63.setObjectName("label_63")
        self.formLayout_10.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_63)
        self.spinZoomIncrement2 = QtWidgets.QSpinBox(self.groupBox_7)
        self.spinZoomIncrement2.setMinimum(2)
        self.spinZoomIncrement2.setMaximum(100)
        self.spinZoomIncrement2.setProperty("value", 3)
        self.spinZoomIncrement2.setObjectName("spinZoomIncrement2")
        self.formLayout_10.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.spinZoomIncrement2)
        self.label_64 = QtWidgets.QLabel(self.groupBox_7)
        self.label_64.setObjectName("label_64")
        self.formLayout_10.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_64)
        self.spinZoomIncrement3 = QtWidgets.QSpinBox(self.groupBox_7)
        self.spinZoomIncrement3.setMinimum(2)
        self.spinZoomIncrement3.setMaximum(100)
        self.spinZoomIncrement3.setProperty("value", 24)
        self.spinZoomIncrement3.setObjectName("spinZoomIncrement3")
        self.formLayout_10.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.spinZoomIncrement3)
        self.label_61 = QtWidgets.QLabel(self.groupBox_7)
        self.label_61.setObjectName("label_61")
        self.formLayout_10.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.label_61)
        self.spinZoomMinimumFactor = QtWidgets.QDoubleSpinBox(self.groupBox_7)
        self.spinZoomMinimumFactor.setMinimum(0.05)
        self.spinZoomMinimumFactor.setMaximum(1.0)
        self.spinZoomMinimumFactor.setSingleStep(0.05)
        self.spinZoomMinimumFactor.setProperty("value", 0.25)
        self.spinZoomMinimumFactor.setObjectName("spinZoomMinimumFactor")
        self.formLayout_10.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.spinZoomMinimumFactor)
        self.checkZoomAutoDisable1x = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomAutoDisable1x.setEnabled(False)
        self.checkZoomAutoDisable1x.setChecked(True)
        self.checkZoomAutoDisable1x.setObjectName("checkZoomAutoDisable1x")
        self.formLayout_10.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.checkZoomAutoDisable1x)
        self.checkZoomForceMinimum = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomForceMinimum.setChecked(True)
        self.checkZoomForceMinimum.setObjectName("checkZoomForceMinimum")
        self.formLayout_10.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.checkZoomForceMinimum)
        self.checkZoomPanByDefault = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomPanByDefault.setObjectName("checkZoomPanByDefault")
        self.formLayout_10.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.checkZoomPanByDefault)
        self.checkZoomPanInvertScroll = QtWidgets.QCheckBox(self.groupBox_7)
        self.checkZoomPanInvertScroll.setObjectName("checkZoomPanInvertScroll")
        self.formLayout_10.setWidget(1, QtWidgets.QFormLayout.SpanningRole, self.checkZoomPanInvertScroll)
        self.verticalLayout_3.addWidget(self.groupBox_7)
        self.groupBox_4 = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox_4.setObjectName("groupBox_4")
        self.formLayout_5 = QtWidgets.QFormLayout(self.groupBox_4)
        self.formLayout_5.setContentsMargins(-1, 5, 5, 6)
        self.formLayout_5.setHorizontalSpacing(5)
        self.formLayout_5.setVerticalSpacing(3)
        self.formLayout_5.setObjectName("formLayout_5")
        self.label_43 = QtWidgets.QLabel(self.groupBox_4)
        self.label_43.setObjectName("label_43")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_43)
        self.spinFullScreenFadeDuration = QtWidgets.QDoubleSpinBox(self.groupBox_4)
        self.spinFullScreenFadeDuration.setMinimum(0.0)
        self.spinFullScreenFadeDuration.setMaximum(10.0)
        self.spinFullScreenFadeDuration.setSingleStep(0.05)
        self.spinFullScreenFadeDuration.setProperty("value", 0.2)
        self.spinFullScreenFadeDuration.setObjectName("spinFullScreenFadeDuration")
        self.formLayout_5.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinFullScreenFadeDuration)
        self.label_36 = QtWidgets.QLabel(self.groupBox_4)
        self.label_36.setObjectName("label_36")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_36)
        self.spinFullScreenWidth = QtWidgets.QSpinBox(self.groupBox_4)
        self.spinFullScreenWidth.setMinimum(10)
        self.spinFullScreenWidth.setMaximum(100)
        self.spinFullScreenWidth.setProperty("value", 33)
        self.spinFullScreenWidth.setObjectName("spinFullScreenWidth")
        self.formLayout_5.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinFullScreenWidth)
        self.label_35 = QtWidgets.QLabel(self.groupBox_4)
        self.label_35.setObjectName("label_35")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_35)
        self.spinFullScreenMinOpacity = QtWidgets.QSpinBox(self.groupBox_4)
        self.spinFullScreenMinOpacity.setMinimum(0)
        self.spinFullScreenMinOpacity.setMaximum(100)
        self.spinFullScreenMinOpacity.setProperty("value", 0)
        self.spinFullScreenMinOpacity.setObjectName("spinFullScreenMinOpacity")
        self.formLayout_5.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinFullScreenMinOpacity)
        self.label_34 = QtWidgets.QLabel(self.groupBox_4)
        self.label_34.setObjectName("label_34")
        self.formLayout_5.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_34)
        self.spinFullScreenMaxOpacity = QtWidgets.QSpinBox(self.groupBox_4)
        self.spinFullScreenMaxOpacity.setMinimum(1)
        self.spinFullScreenMaxOpacity.setMaximum(100)
        self.spinFullScreenMaxOpacity.setProperty("value", 80)
        self.spinFullScreenMaxOpacity.setObjectName("spinFullScreenMaxOpacity")
        self.formLayout_5.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinFullScreenMaxOpacity)
        self.verticalLayout_3.addWidget(self.groupBox_4)
        self.groupBox_3 = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_2.setContentsMargins(7, 3, 7, 7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.formLayout_4 = QtWidgets.QFormLayout()
        self.formLayout_4.setHorizontalSpacing(5)
        self.formLayout_4.setVerticalSpacing(3)
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_4 = QtWidgets.QLabel(self.groupBox_3)
        self.label_4.setToolTip("The default folder to save quick-snapshots to.")
        self.label_4.setText("Default Snapshot Path")
        self.label_4.setObjectName("label_4")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setSpacing(2)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.lineDefaultSnapshotPath = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineDefaultSnapshotPath.setPlaceholderText("Same as source media")
        self.lineDefaultSnapshotPath.setObjectName("lineDefaultSnapshotPath")
        self.horizontalLayout_5.addWidget(self.lineDefaultSnapshotPath)
        self.buttonBrowseDefaultSnapshotPath = QtWidgets.QPushButton(self.groupBox_3)
        self.buttonBrowseDefaultSnapshotPath.setMinimumSize(QtCore.QSize(22, 22))
        self.buttonBrowseDefaultSnapshotPath.setToolTip("Refresh theme list")
        self.buttonBrowseDefaultSnapshotPath.setStyleSheet("QPushButton { padding-bottom: 3px; }")
        self.buttonBrowseDefaultSnapshotPath.setText("...")
        self.buttonBrowseDefaultSnapshotPath.setObjectName("buttonBrowseDefaultSnapshotPath")
        self.horizontalLayout_5.addWidget(self.buttonBrowseDefaultSnapshotPath)
        self.formLayout_4.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_5)
        self.label_47 = QtWidgets.QLabel(self.groupBox_3)
        self.label_47.setObjectName("label_47")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_47)
        self.lineSnapshotNameFormat = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineSnapshotNameFormat.setObjectName("lineSnapshotNameFormat")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.lineSnapshotNameFormat)
        self.label_54 = QtWidgets.QLabel(self.groupBox_3)
        self.label_54.setObjectName("label_54")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_54)
        self.lineSnapshotGifFormat = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineSnapshotGifFormat.setObjectName("lineSnapshotGifFormat")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lineSnapshotGifFormat)
        self.label_55 = QtWidgets.QLabel(self.groupBox_3)
        self.label_55.setObjectName("label_55")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_55)
        self.lineSnapshotArtFormat = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineSnapshotArtFormat.setObjectName("lineSnapshotArtFormat")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.lineSnapshotArtFormat)
        self.label_45 = QtWidgets.QLabel(self.groupBox_3)
        self.label_45.setObjectName("label_45")
        self.formLayout_4.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_45)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setSpacing(2)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.lineSnapshotDateFormat = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineSnapshotDateFormat.setObjectName("lineSnapshotDateFormat")
        self.horizontalLayout_7.addWidget(self.lineSnapshotDateFormat)
        self.buttonSnapshotDateHelp = QtWidgets.QPushButton(self.groupBox_3)
        self.buttonSnapshotDateHelp.setMinimumSize(QtCore.QSize(22, 22))
        self.buttonSnapshotDateHelp.setToolTip("https://strftime.org/\n"
"\n"
"%a     Sun     Weekday as locale‚Äôs abbreviated name.\n"
"%A     Sunday     Weekday as locale‚Äôs full name.\n"
"%w     0     Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.\n"
"%d     08     Day of the month as a zero-padded decimal number.\n"
"%#d     8     Day of the month as a decimal number. (Platform specific: #/-)\n"
"%b     Sep     Month as locale‚Äôs abbreviated name.\n"
"%B     September     Month as locale‚Äôs full name.\n"
"%m     09     Month as a zero-padded decimal number.\n"
"%#m     9     Month as a decimal number. (Platform specific: #/-)\n"
"%y     13     Year without century as a zero-padded decimal number.\n"
"%Y     2013     Year with century as a decimal number.\n"
"%H     07     Hour (24-hour clock) as a zero-padded decimal number.\n"
"%#H     7     Hour (24-hour clock) as a decimal number. (Platform specific: #/-)\n"
"%I     07     Hour (12-hour clock) as a zero-padded decimal number.\n"
"%#I     7     Hour (12-hour clock) as a decimal number. (Platform specific: #/-)\n"
"%p     AM     Locale‚Äôs equivalent of either AM or PM.\n"
"%M     06     Minute as a zero-padded decimal number.\n"
"%#M     6     Minute as a decimal number. (Platform specific: #/-)\n"
"%S     05     Second as a zero-padded decimal number.\n"
"%#S     5     Second as a decimal number. (Platform specific: #/-)\n"
"%f     000000     Microsecond as a decimal number, zero-padded on the left.\n"
"%z     +0000     UTC offset in the form ¬±HHMM[SS[.ffffff]] (empty string if the object is naive).\n"
"%Z     UTC     Time zone name (empty string if the object is naive).\n"
"%j     251     Day of the year as a zero-padded decimal number.\n"
"%#j     251     Day of the year as a decimal number. (Platform specific: #/-)\n"
"%c     Sun Sep 8 07:06:05 2013     Locale‚Äôs appropriate date and time representation.\n"
"%x     09/08/13         Locale‚Äôs appropriate date representation.\n"
"%X     07:06:05         Locale‚Äôs appropriate time representation.\n"
"%%     %     A literal \'%\' character.\n"
"%U     36     Week number of the year (Sunday-Saturday) as a zero padded decimal number.\n"
"        All days in a new year preceding the first Sunday are considered to be in week 0.\n"
"%W     35     Week number of the year (Monday-Sunday) as a decimal number.\n"
"        All days in a new year preceding the first Monday are considered to be in week 0.")
        self.buttonSnapshotDateHelp.setStyleSheet("QPushButton { padding-bottom: 3px; }")
        self.buttonSnapshotDateHelp.setText("?")
        self.buttonSnapshotDateHelp.setObjectName("buttonSnapshotDateHelp")
        self.horizontalLayout_7.addWidget(self.buttonSnapshotDateHelp)
        self.formLayout_4.setLayout(4, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_7)
        self.label_46 = QtWidgets.QLabel(self.groupBox_3)
        self.label_46.setObjectName("label_46")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_46)
        self.spinSnapshotJpegQuality = QtWidgets.QSpinBox(self.groupBox_3)
        self.spinSnapshotJpegQuality.setMaximum(100)
        self.spinSnapshotJpegQuality.setProperty("value", 85)
        self.spinSnapshotJpegQuality.setObjectName("spinSnapshotJpegQuality")
        self.formLayout_4.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.spinSnapshotJpegQuality)
        self.checkSnapshotGifPNG = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkSnapshotGifPNG.setChecked(True)
        self.checkSnapshotGifPNG.setObjectName("checkSnapshotGifPNG")
        self.formLayout_4.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.checkSnapshotGifPNG)
        self.checkSnapshotRemember = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkSnapshotRemember.setChecked(True)
        self.checkSnapshotRemember.setObjectName("checkSnapshotRemember")
        self.formLayout_4.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.checkSnapshotRemember)
        self.checkSnapshotPause = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkSnapshotPause.setChecked(True)
        self.checkSnapshotPause.setObjectName("checkSnapshotPause")
        self.formLayout_4.setWidget(9, QtWidgets.QFormLayout.SpanningRole, self.checkSnapshotPause)
        self.checkCopyPrimaryUsesDialog = QtWidgets.QCheckBox(self.groupBox_3)
        self.checkCopyPrimaryUsesDialog.setObjectName("checkCopyPrimaryUsesDialog")
        self.formLayout_4.setWidget(10, QtWidgets.QFormLayout.SpanningRole, self.checkCopyPrimaryUsesDialog)
        self.groupBox_8 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_8.setObjectName("groupBox_8")
        self.formLayout_12 = QtWidgets.QFormLayout(self.groupBox_8)
        self.formLayout_12.setContentsMargins(-1, 5, -1, 6)
        self.formLayout_12.setVerticalSpacing(3)
        self.formLayout_12.setObjectName("formLayout_12")
        self.label_48 = QtWidgets.QLabel(self.groupBox_8)
        self.label_48.setObjectName("label_48")
        self.formLayout_12.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_48)
        self.comboSnapshotDefault = QtWidgets.QComboBox(self.groupBox_8)
        self.comboSnapshotDefault.setObjectName("comboSnapshotDefault")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.comboSnapshotDefault.addItem("")
        self.formLayout_12.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboSnapshotDefault)
        self.label_75 = QtWidgets.QLabel(self.groupBox_8)
        self.label_75.setObjectName("label_75")
        self.formLayout_12.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_75)
        self.comboSnapshotCtrl = QtWidgets.QComboBox(self.groupBox_8)
        self.comboSnapshotCtrl.setObjectName("comboSnapshotCtrl")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.comboSnapshotCtrl.addItem("")
        self.formLayout_12.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboSnapshotCtrl)
        self.label_72 = QtWidgets.QLabel(self.groupBox_8)
        self.label_72.setObjectName("label_72")
        self.formLayout_12.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_72)
        self.comboSnapshotShift = QtWidgets.QComboBox(self.groupBox_8)
        self.comboSnapshotShift.setObjectName("comboSnapshotShift")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.comboSnapshotShift.addItem("")
        self.formLayout_12.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboSnapshotShift)
        self.label_76 = QtWidgets.QLabel(self.groupBox_8)
        self.label_76.setObjectName("label_76")
        self.formLayout_12.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_76)
        self.comboSnapshotAlt = QtWidgets.QComboBox(self.groupBox_8)
        self.comboSnapshotAlt.setObjectName("comboSnapshotAlt")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.comboSnapshotAlt.addItem("")
        self.formLayout_12.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.comboSnapshotAlt)
        self.formLayout_4.setWidget(12, QtWidgets.QFormLayout.SpanningRole, self.groupBox_8)
        spacerItem6 = QtWidgets.QSpacerItem(1, 3, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.formLayout_4.setItem(11, QtWidgets.QFormLayout.SpanningRole, spacerItem6)
        self.label_65 = QtWidgets.QLabel(self.groupBox_3)
        self.label_65.setObjectName("label_65")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_65)
        self.comboSnapshotFormat = QtWidgets.QComboBox(self.groupBox_3)
        self.comboSnapshotFormat.setObjectName("comboSnapshotFormat")
        self.comboSnapshotFormat.addItem("")
        self.comboSnapshotFormat.addItem("")
        self.formLayout_4.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.comboSnapshotFormat)
        self.verticalLayout_2.addLayout(self.formLayout_4)
        self.verticalLayout_3.addWidget(self.groupBox_3)
        self.groupText = QtWidgets.QGroupBox(self.tabGeneral)
        self.groupText.setCheckable(True)
        self.groupText.setObjectName("groupText")
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout(self.groupText)
        self.horizontalLayout_15.setContentsMargins(-1, 5, 5, 6)
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.formLayout_6 = QtWidgets.QFormLayout()
        self.formLayout_6.setHorizontalSpacing(5)
        self.formLayout_6.setVerticalSpacing(3)
        self.formLayout_6.setObjectName("formLayout_6")
        self.label_37 = QtWidgets.QLabel(self.groupText)
        self.label_37.setObjectName("label_37")
        self.formLayout_6.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_37)
        self.spinTextHeight = QtWidgets.QSpinBox(self.groupText)
        self.spinTextHeight.setMinimum(1)
        self.spinTextHeight.setMaximum(100)
        self.spinTextHeight.setProperty("value", 5)
        self.spinTextHeight.setObjectName("spinTextHeight")
        self.formLayout_6.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinTextHeight)
        self.label_38 = QtWidgets.QLabel(self.groupText)
        self.label_38.setObjectName("label_38")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_38)
        self.spinTextOpacity = QtWidgets.QSpinBox(self.groupText)
        self.spinTextOpacity.setMinimum(1)
        self.spinTextOpacity.setMaximum(100)
        self.spinTextOpacity.setProperty("value", 100)
        self.spinTextOpacity.setObjectName("spinTextOpacity")
        self.formLayout_6.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.spinTextOpacity)
        self.label_40 = QtWidgets.QLabel(self.groupText)
        self.label_40.setObjectName("label_40")
        self.formLayout_6.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_40)
        self.spinTextFadeDelay = QtWidgets.QDoubleSpinBox(self.groupText)
        self.spinTextFadeDelay.setDecimals(2)
        self.spinTextFadeDelay.setMinimum(0.5)
        self.spinTextFadeDelay.setMaximum(10.0)
        self.spinTextFadeDelay.setSingleStep(0.05)
        self.spinTextFadeDelay.setProperty("value", 0.5)
        self.spinTextFadeDelay.setObjectName("spinTextFadeDelay")
        self.formLayout_6.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.spinTextFadeDelay)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setContentsMargins(-1, 4, -1, -1)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.checkTextOnFullScreenPosition = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnFullScreenPosition.setChecked(True)
        self.checkTextOnFullScreenPosition.setObjectName("checkTextOnFullScreenPosition")
        self.gridLayout_2.addWidget(self.checkTextOnFullScreenPosition, 6, 1, 1, 2)
        self.checkTextOnVolume = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnVolume.setChecked(True)
        self.checkTextOnVolume.setObjectName("checkTextOnVolume")
        self.gridLayout_2.addWidget(self.checkTextOnVolume, 1, 1, 1, 1)
        self.checkTextOnSpeed = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnSpeed.setChecked(True)
        self.checkTextOnSpeed.setObjectName("checkTextOnSpeed")
        self.gridLayout_2.addWidget(self.checkTextOnSpeed, 3, 1, 1, 1)
        self.checkTextOnPause = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnPause.setChecked(True)
        self.checkTextOnPause.setObjectName("checkTextOnPause")
        self.gridLayout_2.addWidget(self.checkTextOnPause, 0, 2, 1, 1)
        self.checkTextOnOpen = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnOpen.setChecked(True)
        self.checkTextOnOpen.setObjectName("checkTextOnOpen")
        self.gridLayout_2.addWidget(self.checkTextOnOpen, 0, 1, 1, 1)
        self.checkTextOnSave = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnSave.setChecked(True)
        self.checkTextOnSave.setObjectName("checkTextOnSave")
        self.gridLayout_2.addWidget(self.checkTextOnSave, 5, 1, 1, 2)
        self.checkTextOnMute = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnMute.setChecked(True)
        self.checkTextOnMute.setObjectName("checkTextOnMute")
        self.gridLayout_2.addWidget(self.checkTextOnMute, 1, 2, 1, 1)
        self.checkTextOnVolumeBoost = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnVolumeBoost.setChecked(True)
        self.checkTextOnVolumeBoost.setObjectName("checkTextOnVolumeBoost")
        self.gridLayout_2.addWidget(self.checkTextOnVolumeBoost, 2, 1, 1, 1)
        self.checkTextOnSubtitleDelay = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnSubtitleDelay.setChecked(True)
        self.checkTextOnSubtitleDelay.setObjectName("checkTextOnSubtitleDelay")
        self.gridLayout_2.addWidget(self.checkTextOnSubtitleDelay, 4, 2, 1, 1)
        self.checkTextOnSubtitleAdded = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnSubtitleAdded.setChecked(True)
        self.checkTextOnSubtitleAdded.setObjectName("checkTextOnSubtitleAdded")
        self.gridLayout_2.addWidget(self.checkTextOnSubtitleAdded, 3, 2, 1, 1)
        self.checkTextOnLoop = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnLoop.setChecked(True)
        self.checkTextOnLoop.setObjectName("checkTextOnLoop")
        self.gridLayout_2.addWidget(self.checkTextOnLoop, 2, 2, 1, 1)
        self.checkTextOnTrackChanged = QtWidgets.QCheckBox(self.groupText)
        self.checkTextOnTrackChanged.setChecked(True)
        self.checkTextOnTrackChanged.setObjectName("checkTextOnTrackChanged")
        self.gridLayout_2.addWidget(self.checkTextOnTrackChanged, 4, 1, 1, 1)
        self.gridLayout_DONTCHANGETHESE = QtWidgets.QGridLayout()
        self.gridLayout_DONTCHANGETHESE.setContentsMargins(-1, -1, 8, -1)
        self.gridLayout_DONTCHANGETHESE.setSpacing(0)
        self.gridLayout_DONTCHANGETHESE.setObjectName("gridLayout_DONTCHANGETHESE")
        self.radioTextPosition1 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition1.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition1.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition1.setObjectName("radioTextPosition1")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition1, 2, 0, 1, 1)
        self.radioTextPosition9 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition9.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition9.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition9.setObjectName("radioTextPosition9")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition9, 3, 0, 1, 1)
        self.radioTextPosition0 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition0.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition0.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition0.setObjectName("radioTextPosition0")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition0, 2, 1, 1, 1)
        self.radioTextPosition2 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition2.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition2.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition2.setObjectName("radioTextPosition2")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition2, 2, 2, 1, 1)
        self.radioTextPosition8 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition8.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition8.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition8.setObjectName("radioTextPosition8")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition8, 3, 1, 1, 1)
        self.radioTextPosition10 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition10.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition10.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition10.setObjectName("radioTextPosition10")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition10, 3, 2, 1, 1)
        self.radioTextPosition5 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition5.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition5.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition5.setChecked(True)
        self.radioTextPosition5.setObjectName("radioTextPosition5")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition5, 1, 0, 1, 1)
        self.radioTextPosition4 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition4.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition4.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition4.setObjectName("radioTextPosition4")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition4, 1, 1, 1, 1)
        self.radioTextPosition6 = QtWidgets.QRadioButton(self.groupText)
        self.radioTextPosition6.setMinimumSize(QtCore.QSize(16, 16))
        self.radioTextPosition6.setMaximumSize(QtCore.QSize(16, 16))
        self.radioTextPosition6.setObjectName("radioTextPosition6")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.radioTextPosition6, 1, 2, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.groupText)
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName("label_39")
        self.gridLayout_DONTCHANGETHESE.addWidget(self.label_39, 0, 0, 1, 3)
        self.gridLayout_2.addLayout(self.gridLayout_DONTCHANGETHESE, 1, 0, 4, 1)
        self.formLayout_6.setLayout(5, QtWidgets.QFormLayout.SpanningRole, self.gridLayout_2)
        self.label_42 = QtWidgets.QLabel(self.groupText)
        self.label_42.setObjectName("label_42")
        self.formLayout_6.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_42)
        self.label_44 = QtWidgets.QLabel(self.groupText)
        self.label_44.setObjectName("label_44")
        self.formLayout_6.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_44)
        self.spinTextX = QtWidgets.QDoubleSpinBox(self.groupText)
        self.spinTextX.setDecimals(1)
        self.spinTextX.setMaximum(100.0)
        self.spinTextX.setSingleStep(0.1)
        self.spinTextX.setProperty("value", 2.9)
        self.spinTextX.setObjectName("spinTextX")
        self.formLayout_6.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinTextX)
        self.spinTextY = QtWidgets.QDoubleSpinBox(self.groupText)
        self.spinTextY.setDecimals(1)
        self.spinTextY.setMaximum(100.0)
        self.spinTextY.setSingleStep(0.1)
        self.spinTextY.setProperty("value", 2.9)
        self.spinTextY.setObjectName("spinTextY")
        self.formLayout_6.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinTextY)
        self.horizontalLayout_15.addLayout(self.formLayout_6)
        self.verticalLayout_3.addWidget(self.groupText)
        self.tabWidget.addTab(self.tabGeneral, "")
        self.tabEditing = QtWidgets.QWidget()
        self.tabEditing.setObjectName("tabEditing")
        self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.tabEditing)
        self.verticalLayout_19.setSpacing(20)
        self.verticalLayout_19.setObjectName("verticalLayout_19")
        self.formLayout_18 = QtWidgets.QFormLayout()
        self.formLayout_18.setHorizontalSpacing(6)
        self.formLayout_18.setVerticalSpacing(2)
        self.formLayout_18.setObjectName("formLayout_18")
        self.label_2 = QtWidgets.QLabel(self.tabEditing)
        self.label_2.setToolTip("When saving an edited video without specifying a folder in\n"
"its output name, the new video will default to this folder.\n"
"\n"
"Leave blank to always save unspecified videos to their source folder.")
        self.label_2.setText("Default output path")
        self.label_2.setObjectName("label_2")
        self.formLayout_18.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.horizontalLayout_45 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_45.setSpacing(2)
        self.horizontalLayout_45.setObjectName("horizontalLayout_45")
        self.lineDefaultOutputPath = QtWidgets.QLineEdit(self.tabEditing)
        self.lineDefaultOutputPath.setPlaceholderText("Same as source media")
        self.lineDefaultOutputPath.setObjectName("lineDefaultOutputPath")
        self.horizontalLayout_45.addWidget(self.lineDefaultOutputPath)
        self.buttonBrowseDefaultOutputPath = QtWidgets.QPushButton(self.tabEditing)
        self.buttonBrowseDefaultOutputPath.setMinimumSize(QtCore.QSize(22, 22))
        self.buttonBrowseDefaultOutputPath.setToolTip("Refresh theme list")
        self.buttonBrowseDefaultOutputPath.setStyleSheet("QPushButton { padding-bottom: 3px; }")
        self.buttonBrowseDefaultOutputPath.setText("...")
        self.buttonBrowseDefaultOutputPath.setObjectName("buttonBrowseDefaultOutputPath")
        self.horizontalLayout_45.addWidget(self.buttonBrowseDefaultOutputPath)
        self.formLayout_18.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_45)
        self.label_14 = QtWidgets.QLabel(self.tabEditing)
        self.label_14.setToolTip("What priority level FFmpeg processes should have while running.\n"
"Higher levels allow FFmpeg to finish marginally faster at the cost of\n"
"slowing down your system, whereas lower levels allow your system\n"
"to run more smoothly while FFmpeg finishes marginally slower.\n"
"\n"
"You should give FFmpeg \"Low\" priority if you want to do intensive\n"
"tasks (such as play video games) while waiting for edits to finish.\n"
"Note: FFmpeg will still fight for resources even at \"Low\" priority,\n"
"so combining this with a thread override may be more optimal.\n"
"\n"
"For Linux, each priority level represents a \"niceness\" value:\n"
"- High: -10 (requires root)\n"
"- Above normal: -5 (requires root)\n"
"- Normal: 0\n"
"- Below normal: 5\n"
"- Low: 10\n"
"\n"
"Note: This setting has no effect on macOS.\n"
"Note: Negative niceness values (high/above normal) require root.\n"
"Otherwise, they will default to 0.\n"
"Note: Changing this setting will not affect FFmpeg processes that\n"
"were already started.")
        self.label_14.setText("FFmpeg priority level")
        self.label_14.setObjectName("label_14")
        self.formLayout_18.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_14)
        self.comboFFmpegPriority = QtWidgets.QComboBox(self.tabEditing)
        self.comboFFmpegPriority.setObjectName("comboFFmpegPriority")
        self.comboFFmpegPriority.addItem("")
        self.comboFFmpegPriority.addItem("")
        self.comboFFmpegPriority.addItem("")
        self.comboFFmpegPriority.addItem("")
        self.comboFFmpegPriority.addItem("")
        self.formLayout_18.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboFFmpegPriority)
        self.checkFFmpegThreadOverride = QtWidgets.QCheckBox(self.tabEditing)
        self.checkFFmpegThreadOverride.setMinimumSize(QtCore.QSize(100, 0))
        self.checkFFmpegThreadOverride.setObjectName("checkFFmpegThreadOverride")
        self.formLayout_18.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.checkFFmpegThreadOverride)
        self.spinFFmpegThreads = QtWidgets.QSpinBox(self.tabEditing)
        self.spinFFmpegThreads.setEnabled(False)
        self.spinFFmpegThreads.setMaximum(1024)
        self.spinFFmpegThreads.setObjectName("spinFFmpegThreads")
        self.formLayout_18.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.spinFFmpegThreads)
        self.checkRenameMissingImages = QtWidgets.QCheckBox(self.tabEditing)
        self.checkRenameMissingImages.setChecked(True)
        self.checkRenameMissingImages.setObjectName("checkRenameMissingImages")
        self.formLayout_18.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.checkRenameMissingImages)
        self.checkSaveAsForceOnNoName = QtWidgets.QCheckBox(self.tabEditing)
        self.checkSaveAsForceOnNoName.setChecked(True)
        self.checkSaveAsForceOnNoName.setObjectName("checkSaveAsForceOnNoName")
        self.formLayout_18.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.checkSaveAsForceOnNoName)
        self.checkSaveAsUseMediaFolder = QtWidgets.QCheckBox(self.tabEditing)
        self.checkSaveAsUseMediaFolder.setChecked(True)
        self.checkSaveAsUseMediaFolder.setObjectName("checkSaveAsUseMediaFolder")
        self.formLayout_18.setWidget(5, QtWidgets.QFormLayout.SpanningRole, self.checkSaveAsUseMediaFolder)
        self.checkCycleRememberOriginalPath = QtWidgets.QCheckBox(self.tabEditing)
        self.checkCycleRememberOriginalPath.setChecked(True)
        self.checkCycleRememberOriginalPath.setTristate(True)
        self.checkCycleRememberOriginalPath.setObjectName("checkCycleRememberOriginalPath")
        self.formLayout_18.setWidget(6, QtWidgets.QFormLayout.SpanningRole, self.checkCycleRememberOriginalPath)
        self.groupBox_10 = QtWidgets.QGroupBox(self.tabEditing)
        self.groupBox_10.setObjectName("groupBox_10")
        self.horizontalLayout_52 = QtWidgets.QHBoxLayout(self.groupBox_10)
        self.horizontalLayout_52.setContentsMargins(-1, 2, 0, 4)
        self.horizontalLayout_52.setSpacing(0)
        self.horizontalLayout_52.setObjectName("horizontalLayout_52")
        self.checkEditFocusRejectedPause = QtWidgets.QCheckBox(self.groupBox_10)
        self.checkEditFocusRejectedPause.setChecked(True)
        self.checkEditFocusRejectedPause.setObjectName("checkEditFocusRejectedPause")
        self.horizontalLayout_52.addWidget(self.checkEditFocusRejectedPause)
        self.checkEditFocusRejectedBeep = QtWidgets.QCheckBox(self.groupBox_10)
        self.checkEditFocusRejectedBeep.setObjectName("checkEditFocusRejectedBeep")
        self.horizontalLayout_52.addWidget(self.checkEditFocusRejectedBeep)
        self.formLayout_18.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.groupBox_10)
        self.checkEditOpenRejectedBeep = QtWidgets.QCheckBox(self.tabEditing)
        self.checkEditOpenRejectedBeep.setObjectName("checkEditOpenRejectedBeep")
        self.formLayout_18.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.checkEditOpenRejectedBeep)
        self.verticalLayout_19.addLayout(self.formLayout_18)
        self.groupBox_16 = QtWidgets.QGroupBox(self.tabEditing)
        self.groupBox_16.setObjectName("groupBox_16")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.groupBox_16)
        self.verticalLayout_5.setContentsMargins(7, 3, 7, 7)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.checkEditCtimeOnNew = QtWidgets.QCheckBox(self.groupBox_16)
        self.checkEditCtimeOnNew.setChecked(True)
        self.checkEditCtimeOnNew.setObjectName("checkEditCtimeOnNew")
        self.verticalLayout_5.addWidget(self.checkEditCtimeOnNew)
        self.checkEditCtimeOnOriginal = QtWidgets.QCheckBox(self.groupBox_16)
        self.checkEditCtimeOnOriginal.setChecked(True)
        self.checkEditCtimeOnOriginal.setObjectName("checkEditCtimeOnOriginal")
        self.verticalLayout_5.addWidget(self.checkEditCtimeOnOriginal)
        self.checkEditMtimeOnNew = QtWidgets.QCheckBox(self.groupBox_16)
        self.checkEditMtimeOnNew.setObjectName("checkEditMtimeOnNew")
        self.verticalLayout_5.addWidget(self.checkEditMtimeOnNew)
        self.checkEditMtimeOnOriginal = QtWidgets.QCheckBox(self.groupBox_16)
        self.checkEditMtimeOnOriginal.setObjectName("checkEditMtimeOnOriginal")
        self.verticalLayout_5.addWidget(self.checkEditMtimeOnOriginal)
        spacerItem7 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem7)
        self.groupBox_20 = QtWidgets.QGroupBox(self.groupBox_16)
        self.groupBox_20.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_20.setObjectName("groupBox_20")
        self.horizontalLayout_47 = QtWidgets.QHBoxLayout(self.groupBox_20)
        self.horizontalLayout_47.setContentsMargins(7, 3, 7, 7)
        self.horizontalLayout_47.setSpacing(10)
        self.horizontalLayout_47.setObjectName("horizontalLayout_47")
        self.groupBox_17 = QtWidgets.QGroupBox(self.groupBox_20)
        self.groupBox_17.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_17.setObjectName("groupBox_17")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.groupBox_17)
        self.verticalLayout_13.setContentsMargins(9, 2, 0, 4)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.radioEditCtimeConflictUseNow = QtWidgets.QRadioButton(self.groupBox_17)
        self.radioEditCtimeConflictUseNow.setObjectName("radioEditCtimeConflictUseNow")
        self.verticalLayout_13.addWidget(self.radioEditCtimeConflictUseNow)
        self.radioEditCtimeConflictUseOriginal = QtWidgets.QRadioButton(self.groupBox_17)
        self.radioEditCtimeConflictUseOriginal.setObjectName("radioEditCtimeConflictUseOriginal")
        self.verticalLayout_13.addWidget(self.radioEditCtimeConflictUseOriginal)
        self.radioEditCtimeConflictUseOther = QtWidgets.QRadioButton(self.groupBox_17)
        self.radioEditCtimeConflictUseOther.setObjectName("radioEditCtimeConflictUseOther")
        self.verticalLayout_13.addWidget(self.radioEditCtimeConflictUseOther)
        self.radioEditCtimeConflictUseNewest = QtWidgets.QRadioButton(self.groupBox_17)
        self.radioEditCtimeConflictUseNewest.setObjectName("radioEditCtimeConflictUseNewest")
        self.verticalLayout_13.addWidget(self.radioEditCtimeConflictUseNewest)
        self.radioEditCtimeConflictUseOldest = QtWidgets.QRadioButton(self.groupBox_17)
        self.radioEditCtimeConflictUseOldest.setChecked(True)
        self.radioEditCtimeConflictUseOldest.setObjectName("radioEditCtimeConflictUseOldest")
        self.verticalLayout_13.addWidget(self.radioEditCtimeConflictUseOldest)
        self.horizontalLayout_47.addWidget(self.groupBox_17)
        self.groupBox_18 = QtWidgets.QGroupBox(self.groupBox_20)
        self.groupBox_18.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_18.setObjectName("groupBox_18")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.groupBox_18)
        self.verticalLayout_14.setContentsMargins(9, 2, 0, 4)
        self.verticalLayout_14.setSpacing(0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.radioEditMtimeConflictUseNow = QtWidgets.QRadioButton(self.groupBox_18)
        self.radioEditMtimeConflictUseNow.setChecked(True)
        self.radioEditMtimeConflictUseNow.setObjectName("radioEditMtimeConflictUseNow")
        self.verticalLayout_14.addWidget(self.radioEditMtimeConflictUseNow)
        self.radioEditMtimeConflictUseOriginal = QtWidgets.QRadioButton(self.groupBox_18)
        self.radioEditMtimeConflictUseOriginal.setObjectName("radioEditMtimeConflictUseOriginal")
        self.verticalLayout_14.addWidget(self.radioEditMtimeConflictUseOriginal)
        self.radioEditMtimeConflictUseOther = QtWidgets.QRadioButton(self.groupBox_18)
        self.radioEditMtimeConflictUseOther.setObjectName("radioEditMtimeConflictUseOther")
        self.verticalLayout_14.addWidget(self.radioEditMtimeConflictUseOther)
        self.radioEditMtimeConflictUseNewest = QtWidgets.QRadioButton(self.groupBox_18)
        self.radioEditMtimeConflictUseNewest.setObjectName("radioEditMtimeConflictUseNewest")
        self.verticalLayout_14.addWidget(self.radioEditMtimeConflictUseNewest)
        self.radioEditMtimeConflictUseOldest = QtWidgets.QRadioButton(self.groupBox_18)
        self.radioEditMtimeConflictUseOldest.setObjectName("radioEditMtimeConflictUseOldest")
        self.verticalLayout_14.addWidget(self.radioEditMtimeConflictUseOldest)
        self.horizontalLayout_47.addWidget(self.groupBox_18)
        self.verticalLayout_5.addWidget(self.groupBox_20)
        spacerItem8 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem8)
        self.groupBox_19 = QtWidgets.QGroupBox(self.groupBox_16)
        self.groupBox_19.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_19.setObjectName("groupBox_19")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.groupBox_19)
        self.verticalLayout_15.setContentsMargins(7, 3, 7, 7)
        self.verticalLayout_15.setSpacing(0)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.checkEditOlderMtimeAlwaysReuse = QtWidgets.QCheckBox(self.groupBox_19)
        self.checkEditOlderMtimeAlwaysReuse.setObjectName("checkEditOlderMtimeAlwaysReuse")
        self.verticalLayout_15.addWidget(self.checkEditOlderMtimeAlwaysReuse)
        self.checkEditOlderMtimeUseAsCtime = QtWidgets.QCheckBox(self.groupBox_19)
        self.checkEditOlderMtimeUseAsCtime.setChecked(True)
        self.checkEditOlderMtimeUseAsCtime.setObjectName("checkEditOlderMtimeUseAsCtime")
        self.verticalLayout_15.addWidget(self.checkEditOlderMtimeUseAsCtime)
        self.verticalLayout_5.addWidget(self.groupBox_19)
        spacerItem9 = QtWidgets.QSpacerItem(20, 5, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_5.addItem(spacerItem9)
        self.groupBox_21 = QtWidgets.QGroupBox(self.groupBox_16)
        self.groupBox_21.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_21.setObjectName("groupBox_21")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_21)
        self.gridLayout_4.setContentsMargins(7, 5, 7, 7)
        self.gridLayout_4.setVerticalSpacing(3)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.groupEditCatBoth = QtWidgets.QGroupBox(self.groupBox_21)
        self.groupEditCatBoth.setAlignment(QtCore.Qt.AlignCenter)
        self.groupEditCatBoth.setCheckable(True)
        self.groupEditCatBoth.setObjectName("groupEditCatBoth")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.groupEditCatBoth)
        self.gridLayout_5.setContentsMargins(-1, 4, 0, 5)
        self.gridLayout_5.setHorizontalSpacing(6)
        self.gridLayout_5.setVerticalSpacing(0)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.radioEditCatBothFirst = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothFirst.setChecked(True)
        self.radioEditCatBothFirst.setObjectName("radioEditCatBothFirst")
        self.gridLayout_5.addWidget(self.radioEditCatBothFirst, 0, 0, 1, 1)
        self.radioEditCatBothLast = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothLast.setObjectName("radioEditCatBothLast")
        self.gridLayout_5.addWidget(self.radioEditCatBothLast, 0, 1, 1, 1)
        self.radioEditCatBothOldestCtime = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothOldestCtime.setObjectName("radioEditCatBothOldestCtime")
        self.gridLayout_5.addWidget(self.radioEditCatBothOldestCtime, 1, 0, 1, 1)
        self.radioEditCatBothNewestCtime = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothNewestCtime.setObjectName("radioEditCatBothNewestCtime")
        self.gridLayout_5.addWidget(self.radioEditCatBothNewestCtime, 1, 1, 1, 1)
        self.radioEditCatBothOldestMtime = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothOldestMtime.setObjectName("radioEditCatBothOldestMtime")
        self.gridLayout_5.addWidget(self.radioEditCatBothOldestMtime, 2, 0, 1, 1)
        self.radioEditCatBothNewestMtime = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothNewestMtime.setObjectName("radioEditCatBothNewestMtime")
        self.gridLayout_5.addWidget(self.radioEditCatBothNewestMtime, 2, 1, 1, 1)
        self.radioEditCatBothOldest = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothOldest.setObjectName("radioEditCatBothOldest")
        self.gridLayout_5.addWidget(self.radioEditCatBothOldest, 3, 0, 1, 1)
        self.radioEditCatBothNewest = QtWidgets.QRadioButton(self.groupEditCatBoth)
        self.radioEditCatBothNewest.setObjectName("radioEditCatBothNewest")
        self.gridLayout_5.addWidget(self.radioEditCatBothNewest, 3, 1, 1, 1)
        self.gridLayout_4.addWidget(self.groupEditCatBoth, 2, 0, 1, 2)
        self.groupBox_24 = QtWidgets.QGroupBox(self.groupBox_21)
        self.groupBox_24.setEnabled(False)
        self.groupBox_24.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_24.setObjectName("groupBox_24")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.groupBox_24)
        self.verticalLayout_17.setContentsMargins(-1, 2, 0, 3)
        self.verticalLayout_17.setSpacing(0)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.radioEditCatMtimeFirst = QtWidgets.QRadioButton(self.groupBox_24)
        self.radioEditCatMtimeFirst.setObjectName("radioEditCatMtimeFirst")
        self.verticalLayout_17.addWidget(self.radioEditCatMtimeFirst)
        self.radioEditCatMtimeLast = QtWidgets.QRadioButton(self.groupBox_24)
        self.radioEditCatMtimeLast.setObjectName("radioEditCatMtimeLast")
        self.verticalLayout_17.addWidget(self.radioEditCatMtimeLast)
        self.radioEditCatMtimeNewest = QtWidgets.QRadioButton(self.groupBox_24)
        self.radioEditCatMtimeNewest.setObjectName("radioEditCatMtimeNewest")
        self.verticalLayout_17.addWidget(self.radioEditCatMtimeNewest)
        self.radioEditCatMtimeOldest = QtWidgets.QRadioButton(self.groupBox_24)
        self.radioEditCatMtimeOldest.setChecked(True)
        self.radioEditCatMtimeOldest.setObjectName("radioEditCatMtimeOldest")
        self.verticalLayout_17.addWidget(self.radioEditCatMtimeOldest)
        self.gridLayout_4.addWidget(self.groupBox_24, 3, 1, 1, 1)
        self.groupBox_22 = QtWidgets.QGroupBox(self.groupBox_21)
        self.groupBox_22.setTitle("")
        self.groupBox_22.setObjectName("groupBox_22")
        self.verticalLayout_18 = QtWidgets.QVBoxLayout(self.groupBox_22)
        self.verticalLayout_18.setContentsMargins(-1, 6, -1, 7)
        self.verticalLayout_18.setObjectName("verticalLayout_18")
        self.label_79 = QtWidgets.QLabel(self.groupBox_22)
        self.label_79.setAlignment(QtCore.Qt.AlignCenter)
        self.label_79.setObjectName("label_79")
        self.verticalLayout_18.addWidget(self.label_79)
        self.gridLayout_4.addWidget(self.groupBox_22, 0, 0, 1, 2)
        self.groupBox_23 = QtWidgets.QGroupBox(self.groupBox_21)
        self.groupBox_23.setEnabled(False)
        self.groupBox_23.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox_23.setObjectName("groupBox_23")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.groupBox_23)
        self.verticalLayout_16.setContentsMargins(-1, 2, 0, 3)
        self.verticalLayout_16.setSpacing(0)
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.radioEditCatCtimeFirst = QtWidgets.QRadioButton(self.groupBox_23)
        self.radioEditCatCtimeFirst.setObjectName("radioEditCatCtimeFirst")
        self.verticalLayout_16.addWidget(self.radioEditCatCtimeFirst)
        self.radioEditCatCtimeLast = QtWidgets.QRadioButton(self.groupBox_23)
        self.radioEditCatCtimeLast.setObjectName("radioEditCatCtimeLast")
        self.verticalLayout_16.addWidget(self.radioEditCatCtimeLast)
        self.radioEditCatCtimeNewest = QtWidgets.QRadioButton(self.groupBox_23)
        self.radioEditCatCtimeNewest.setObjectName("radioEditCatCtimeNewest")
        self.verticalLayout_16.addWidget(self.radioEditCatCtimeNewest)
        self.radioEditCatCtimeOldest = QtWidgets.QRadioButton(self.groupBox_23)
        self.radioEditCatCtimeOldest.setChecked(True)
        self.radioEditCatCtimeOldest.setObjectName("radioEditCatCtimeOldest")
        self.verticalLayout_16.addWidget(self.radioEditCatCtimeOldest)
        self.gridLayout_4.addWidget(self.groupBox_23, 3, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem10)
        self.checkEditCatPreferCurrentMedia = QtWidgets.QCheckBox(self.groupBox_21)
        self.checkEditCatPreferCurrentMedia.setMinimumSize(QtCore.QSize(192, 0))
        self.checkEditCatPreferCurrentMedia.setObjectName("checkEditCatPreferCurrentMedia")
        self.horizontalLayout_4.addWidget(self.checkEditCatPreferCurrentMedia)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem11)
        self.gridLayout_4.addLayout(self.horizontalLayout_4, 1, 0, 1, 2)
        self.verticalLayout_5.addWidget(self.groupBox_21)
        self.verticalLayout_19.addWidget(self.groupBox_16)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_19.addItem(spacerItem12)
        self.tabWidget.addTab(self.tabEditing, "")
        self.tabHotkeys = QtWidgets.QWidget()
        self.tabHotkeys.setObjectName("tabHotkeys")
        self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.tabHotkeys)
        self.verticalLayout_20.setSpacing(20)
        self.verticalLayout_20.setObjectName("verticalLayout_20")
        self.formLayout_19 = QtWidgets.QFormLayout()
        self.formLayout_19.setHorizontalSpacing(12)
        self.formLayout_19.setVerticalSpacing(3)
        self.formLayout_19.setObjectName("formLayout_19")
        self.label_33 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_33.setObjectName("label_33")
        self.formLayout_19.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_33)
        self.spinScrollVolume = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinScrollVolume.setMinimum(1)
        self.spinScrollVolume.setMaximum(100)
        self.spinScrollVolume.setProperty("value", 5)
        self.spinScrollVolume.setObjectName("spinScrollVolume")
        self.formLayout_19.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.spinScrollVolume)
        self.label_81 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_81.setObjectName("label_81")
        self.formLayout_19.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_81)
        self.spinScrollProgress = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinScrollProgress.setMinimum(1)
        self.spinScrollProgress.setMaximum(100)
        self.spinScrollProgress.setProperty("value", 10)
        self.spinScrollProgress.setObjectName("spinScrollProgress")
        self.formLayout_19.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinScrollProgress)
        self.label_69 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_69.setObjectName("label_69")
        self.formLayout_19.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_69)
        self.comboPlayerDoubleClick = QtWidgets.QComboBox(self.tabHotkeys)
        self.comboPlayerDoubleClick.setObjectName("comboPlayerDoubleClick")
        self.comboPlayerDoubleClick.addItem("")
        self.comboPlayerDoubleClick.addItem("")
        self.comboPlayerDoubleClick.addItem("")
        self.comboPlayerDoubleClick.addItem("")
        self.comboPlayerDoubleClick.addItem("")
        self.formLayout_19.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.comboPlayerDoubleClick)
        self.label_11 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_11.setObjectName("label_11")
        self.formLayout_19.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_11)
        self.comboPlayerMiddleClick = QtWidgets.QComboBox(self.tabHotkeys)
        self.comboPlayerMiddleClick.setObjectName("comboPlayerMiddleClick")
        self.comboPlayerMiddleClick.addItem("")
        self.comboPlayerMiddleClick.addItem("")
        self.comboPlayerMiddleClick.addItem("")
        self.comboPlayerMiddleClick.addItem("")
        self.comboPlayerMiddleClick.addItem("")
        self.comboPlayerMiddleClick.addItem("")
        self.formLayout_19.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.comboPlayerMiddleClick)
        self.checkTrackCycleCantDisable = QtWidgets.QCheckBox(self.tabHotkeys)
        self.checkTrackCycleCantDisable.setChecked(True)
        self.checkTrackCycleCantDisable.setObjectName("checkTrackCycleCantDisable")
        self.formLayout_19.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.checkTrackCycleCantDisable)
        self.checkTrackCycleShowTitle = QtWidgets.QCheckBox(self.tabHotkeys)
        self.checkTrackCycleShowTitle.setChecked(True)
        self.checkTrackCycleShowTitle.setObjectName("checkTrackCycleShowTitle")
        self.formLayout_19.setWidget(5, QtWidgets.QFormLayout.SpanningRole, self.checkTrackCycleShowTitle)
        self.checkNavigationWrap = QtWidgets.QCheckBox(self.tabHotkeys)
        self.checkNavigationWrap.setChecked(True)
        self.checkNavigationWrap.setObjectName("checkNavigationWrap")
        self.formLayout_19.setWidget(6, QtWidgets.QFormLayout.SpanningRole, self.checkNavigationWrap)
        self.checkNavigationUnpause = QtWidgets.QCheckBox(self.tabHotkeys)
        self.checkNavigationUnpause.setChecked(True)
        self.checkNavigationUnpause.setObjectName("checkNavigationUnpause")
        self.formLayout_19.setWidget(7, QtWidgets.QFormLayout.SpanningRole, self.checkNavigationUnpause)
        self.checkScrollUpForForwards = QtWidgets.QCheckBox(self.tabHotkeys)
        self.checkScrollUpForForwards.setObjectName("checkScrollUpForForwards")
        self.formLayout_19.setWidget(8, QtWidgets.QFormLayout.SpanningRole, self.checkScrollUpForForwards)
        self.verticalLayout_20.addLayout(self.formLayout_19)
        self.groupBox_5 = QtWidgets.QGroupBox(self.tabHotkeys)
        self.groupBox_5.setObjectName("groupBox_5")
        self.formLayout_9 = QtWidgets.QFormLayout(self.groupBox_5)
        self.formLayout_9.setLabelAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.formLayout_9.setContentsMargins(-1, 5, -1, -1)
        self.formLayout_9.setVerticalSpacing(3)
        self.formLayout_9.setObjectName("formLayout_9")
        self.label_56 = QtWidgets.QLabel(self.groupBox_5)
        self.label_56.setObjectName("label_56")
        self.formLayout_9.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_56)
        self.comboNumKeysPrimary = QtWidgets.QComboBox(self.groupBox_5)
        self.comboNumKeysPrimary.setObjectName("comboNumKeysPrimary")
        self.comboNumKeysPrimary.addItem("")
        self.comboNumKeysPrimary.addItem("")
        self.comboNumKeysPrimary.addItem("")
        self.formLayout_9.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboNumKeysPrimary)
        self.label_57 = QtWidgets.QLabel(self.groupBox_5)
        self.label_57.setObjectName("label_57")
        self.formLayout_9.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_57)
        self.comboNumKeysSecondary = QtWidgets.QComboBox(self.groupBox_5)
        self.comboNumKeysSecondary.setObjectName("comboNumKeysSecondary")
        self.comboNumKeysSecondary.addItem("")
        self.comboNumKeysSecondary.addItem("")
        self.comboNumKeysSecondary.addItem("")
        self.formLayout_9.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.comboNumKeysSecondary)
        self.groupBox_6 = QtWidgets.QGroupBox(self.groupBox_5)
        self.groupBox_6.setObjectName("groupBox_6")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.groupBox_6)
        self.verticalLayout_10.setContentsMargins(-1, 5, -1, 7)
        self.verticalLayout_10.setSpacing(3)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.checkNumKeysUpdateRecentFiles = QtWidgets.QCheckBox(self.groupBox_6)
        self.checkNumKeysUpdateRecentFiles.setObjectName("checkNumKeysUpdateRecentFiles")
        self.verticalLayout_10.addWidget(self.checkNumKeysUpdateRecentFiles)
        self.checkNumKeysRecentFilesOnLaunch = QtWidgets.QCheckBox(self.groupBox_6)
        self.checkNumKeysRecentFilesOnLaunch.setChecked(True)
        self.checkNumKeysRecentFilesOnLaunch.setObjectName("checkNumKeysRecentFilesOnLaunch")
        self.verticalLayout_10.addWidget(self.checkNumKeysRecentFilesOnLaunch)
        self.checkNumKeys0PlaysLeastRecentFile = QtWidgets.QCheckBox(self.groupBox_6)
        self.checkNumKeys0PlaysLeastRecentFile.setChecked(True)
        self.checkNumKeys0PlaysLeastRecentFile.setObjectName("checkNumKeys0PlaysLeastRecentFile")
        self.verticalLayout_10.addWidget(self.checkNumKeys0PlaysLeastRecentFile)
        self.checkNumKeys1SkipsActiveFiles = QtWidgets.QCheckBox(self.groupBox_6)
        self.checkNumKeys1SkipsActiveFiles.setObjectName("checkNumKeys1SkipsActiveFiles")
        self.verticalLayout_10.addWidget(self.checkNumKeys1SkipsActiveFiles)
        self.formLayout_9.setWidget(3, QtWidgets.QFormLayout.SpanningRole, self.groupBox_6)
        spacerItem13 = QtWidgets.QSpacerItem(20, 3, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.formLayout_9.setItem(2, QtWidgets.QFormLayout.SpanningRole, spacerItem13)
        self.verticalLayout_20.addWidget(self.groupBox_5)
        self.formKeys = QtWidgets.QFormLayout()
        self.formKeys.setLabelAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.formKeys.setContentsMargins(-1, 9, -1, -1)
        self.formKeys.setHorizontalSpacing(8)
        self.formKeys.setVerticalSpacing(4)
        self.formKeys.setObjectName("formKeys")
        self.label_7 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_7.setObjectName("label_7")
        self.formKeys.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_7)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setSpacing(4)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.pause = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.pause.setObjectName("pause")
        self.horizontalLayout_9.addWidget(self.pause)
        self.pause_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.pause_.setObjectName("pause_")
        self.horizontalLayout_9.addWidget(self.pause_)
        self.formKeys.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_9)
        self.label_8 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_8.setObjectName("label_8")
        self.formKeys.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_8)
        self.horizontalLayout_44 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_44.setSpacing(4)
        self.horizontalLayout_44.setObjectName("horizontalLayout_44")
        self.stop = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.stop.setObjectName("stop")
        self.horizontalLayout_44.addWidget(self.stop)
        self.stop_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.stop_.setObjectName("stop_")
        self.horizontalLayout_44.addWidget(self.stop_)
        self.formKeys.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_44)
        self.spinNavigation1 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinNavigation1.setMinimumSize(QtCore.QSize(90, 0))
        self.spinNavigation1.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinNavigation1.setMinimum(1)
        self.spinNavigation1.setMaximum(600)
        self.spinNavigation1.setProperty("value", 2)
        self.spinNavigation1.setObjectName("spinNavigation1")
        self.formKeys.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.spinNavigation1)
        self.horizontalLayout_43 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_43.setSpacing(4)
        self.horizontalLayout_43.setObjectName("horizontalLayout_43")
        self.plus1 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus1.setObjectName("plus1")
        self.horizontalLayout_43.addWidget(self.plus1)
        self.plus1_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus1_.setObjectName("plus1_")
        self.horizontalLayout_43.addWidget(self.plus1_)
        self.formKeys.setLayout(2, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_43)
        self.labelNavigation1 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelNavigation1.setObjectName("labelNavigation1")
        self.formKeys.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.labelNavigation1)
        self.horizontalLayout_42 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_42.setSpacing(4)
        self.horizontalLayout_42.setObjectName("horizontalLayout_42")
        self.minus1 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus1.setObjectName("minus1")
        self.horizontalLayout_42.addWidget(self.minus1)
        self.minus1_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus1_.setObjectName("minus1_")
        self.horizontalLayout_42.addWidget(self.minus1_)
        self.formKeys.setLayout(3, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_42)
        self.spinNavigation2 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinNavigation2.setMinimumSize(QtCore.QSize(90, 0))
        self.spinNavigation2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinNavigation2.setMinimum(1)
        self.spinNavigation2.setMaximum(600)
        self.spinNavigation2.setProperty("value", 5)
        self.spinNavigation2.setObjectName("spinNavigation2")
        self.formKeys.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.spinNavigation2)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setSpacing(4)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.plus2 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus2.setObjectName("plus2")
        self.horizontalLayout_10.addWidget(self.plus2)
        self.plus2_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus2_.setObjectName("plus2_")
        self.horizontalLayout_10.addWidget(self.plus2_)
        self.formKeys.setLayout(4, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_10)
        self.labelNavigation2 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelNavigation2.setObjectName("labelNavigation2")
        self.formKeys.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.labelNavigation2)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setSpacing(4)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.minus2 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus2.setObjectName("minus2")
        self.horizontalLayout_11.addWidget(self.minus2)
        self.minus2_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus2_.setObjectName("minus2_")
        self.horizontalLayout_11.addWidget(self.minus2_)
        self.formKeys.setLayout(5, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_11)
        self.spinNavigation3 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinNavigation3.setMinimumSize(QtCore.QSize(90, 0))
        self.spinNavigation3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinNavigation3.setMinimum(1)
        self.spinNavigation3.setMaximum(600)
        self.spinNavigation3.setProperty("value", 10)
        self.spinNavigation3.setObjectName("spinNavigation3")
        self.formKeys.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.spinNavigation3)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setSpacing(4)
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.plus3 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus3.setObjectName("plus3")
        self.horizontalLayout_12.addWidget(self.plus3)
        self.plus3_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus3_.setObjectName("plus3_")
        self.horizontalLayout_12.addWidget(self.plus3_)
        self.formKeys.setLayout(6, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_12)
        self.labelNavigation3 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelNavigation3.setObjectName("labelNavigation3")
        self.formKeys.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.labelNavigation3)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setSpacing(4)
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.minus3 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus3.setObjectName("minus3")
        self.horizontalLayout_13.addWidget(self.minus3)
        self.minus3_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus3_.setObjectName("minus3_")
        self.horizontalLayout_13.addWidget(self.minus3_)
        self.formKeys.setLayout(7, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_13)
        self.spinNavigation4 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinNavigation4.setMinimumSize(QtCore.QSize(90, 0))
        self.spinNavigation4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinNavigation4.setMinimum(1)
        self.spinNavigation4.setMaximum(600)
        self.spinNavigation4.setProperty("value", 30)
        self.spinNavigation4.setObjectName("spinNavigation4")
        self.formKeys.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.spinNavigation4)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setSpacing(4)
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.plus4 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus4.setObjectName("plus4")
        self.horizontalLayout_16.addWidget(self.plus4)
        self.plus4_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plus4_.setObjectName("plus4_")
        self.horizontalLayout_16.addWidget(self.plus4_)
        self.formKeys.setLayout(8, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_16)
        self.labelNavigation4 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelNavigation4.setObjectName("labelNavigation4")
        self.formKeys.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.labelNavigation4)
        self.horizontalLayout_41 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_41.setSpacing(4)
        self.horizontalLayout_41.setObjectName("horizontalLayout_41")
        self.minus4 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus4.setObjectName("minus4")
        self.horizontalLayout_41.addWidget(self.minus4)
        self.minus4_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minus4_.setObjectName("minus4_")
        self.horizontalLayout_41.addWidget(self.minus4_)
        self.formKeys.setLayout(9, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_41)
        self.label_12 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_12.setObjectName("label_12")
        self.formKeys.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.label_12)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setSpacing(4)
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.plusframe = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusframe.setObjectName("plusframe")
        self.horizontalLayout_14.addWidget(self.plusframe)
        self.plusframe_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusframe_.setObjectName("plusframe_")
        self.horizontalLayout_14.addWidget(self.plusframe_)
        self.formKeys.setLayout(10, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_14)
        self.label_13 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_13.setObjectName("label_13")
        self.formKeys.setWidget(11, QtWidgets.QFormLayout.LabelRole, self.label_13)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setSpacing(4)
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.minusframe = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusframe.setObjectName("minusframe")
        self.horizontalLayout_17.addWidget(self.minusframe)
        self.minusframe_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusframe_.setObjectName("minusframe_")
        self.horizontalLayout_17.addWidget(self.minusframe_)
        self.formKeys.setLayout(11, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_17)
        self.label_18 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_18.setObjectName("label_18")
        self.formKeys.setWidget(12, QtWidgets.QFormLayout.LabelRole, self.label_18)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setSpacing(4)
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        self.plusspeed = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusspeed.setObjectName("plusspeed")
        self.horizontalLayout_22.addWidget(self.plusspeed)
        self.plusspeed_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusspeed_.setObjectName("plusspeed_")
        self.horizontalLayout_22.addWidget(self.plusspeed_)
        self.formKeys.setLayout(12, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_22)
        self.label_19 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_19.setObjectName("label_19")
        self.formKeys.setWidget(13, QtWidgets.QFormLayout.LabelRole, self.label_19)
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setSpacing(4)
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.minusspeed = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusspeed.setObjectName("minusspeed")
        self.horizontalLayout_23.addWidget(self.minusspeed)
        self.minusspeed_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusspeed_.setObjectName("minusspeed_")
        self.horizontalLayout_23.addWidget(self.minusspeed_)
        self.formKeys.setLayout(13, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_23)
        self.spinVolume1 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinVolume1.setMinimumSize(QtCore.QSize(90, 0))
        self.spinVolume1.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinVolume1.setMinimum(1)
        self.spinVolume1.setMaximum(600)
        self.spinVolume1.setProperty("value", 5)
        self.spinVolume1.setObjectName("spinVolume1")
        self.formKeys.setWidget(14, QtWidgets.QFormLayout.LabelRole, self.spinVolume1)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setSpacing(4)
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.plusvolume1 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolume1.setObjectName("plusvolume1")
        self.horizontalLayout_18.addWidget(self.plusvolume1)
        self.plusvolume1_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolume1_.setObjectName("plusvolume1_")
        self.horizontalLayout_18.addWidget(self.plusvolume1_)
        self.formKeys.setLayout(14, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_18)
        self.labelVolume1 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelVolume1.setObjectName("labelVolume1")
        self.formKeys.setWidget(15, QtWidgets.QFormLayout.LabelRole, self.labelVolume1)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setSpacing(4)
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.minusvolume1 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolume1.setObjectName("minusvolume1")
        self.horizontalLayout_19.addWidget(self.minusvolume1)
        self.minusvolume1_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolume1_.setObjectName("minusvolume1_")
        self.horizontalLayout_19.addWidget(self.minusvolume1_)
        self.formKeys.setLayout(15, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_19)
        self.spinVolume2 = QtWidgets.QSpinBox(self.tabHotkeys)
        self.spinVolume2.setMinimumSize(QtCore.QSize(90, 0))
        self.spinVolume2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinVolume2.setMinimum(1)
        self.spinVolume2.setMaximum(600)
        self.spinVolume2.setProperty("value", 1)
        self.spinVolume2.setObjectName("spinVolume2")
        self.formKeys.setWidget(16, QtWidgets.QFormLayout.LabelRole, self.spinVolume2)
        self.horizontalLayout_93 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_93.setSpacing(4)
        self.horizontalLayout_93.setObjectName("horizontalLayout_93")
        self.plusvolume2 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolume2.setObjectName("plusvolume2")
        self.horizontalLayout_93.addWidget(self.plusvolume2)
        self.plusvolume2_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolume2_.setObjectName("plusvolume2_")
        self.horizontalLayout_93.addWidget(self.plusvolume2_)
        self.formKeys.setLayout(16, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_93)
        self.labelVolume2 = QtWidgets.QLabel(self.tabHotkeys)
        self.labelVolume2.setObjectName("labelVolume2")
        self.formKeys.setWidget(17, QtWidgets.QFormLayout.LabelRole, self.labelVolume2)
        self.horizontalLayout_92 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_92.setSpacing(4)
        self.horizontalLayout_92.setObjectName("horizontalLayout_92")
        self.minusvolume2 = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolume2.setObjectName("minusvolume2")
        self.horizontalLayout_92.addWidget(self.minusvolume2)
        self.minusvolume2_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolume2_.setObjectName("minusvolume2_")
        self.horizontalLayout_92.addWidget(self.minusvolume2_)
        self.formKeys.setLayout(17, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_92)
        self.label_22 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_22.setObjectName("label_22")
        self.formKeys.setWidget(18, QtWidgets.QFormLayout.LabelRole, self.label_22)
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setSpacing(4)
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.plusvolumeboost = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolumeboost.setObjectName("plusvolumeboost")
        self.horizontalLayout_26.addWidget(self.plusvolumeboost)
        self.plusvolumeboost_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plusvolumeboost_.setObjectName("plusvolumeboost_")
        self.horizontalLayout_26.addWidget(self.plusvolumeboost_)
        self.formKeys.setLayout(18, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_26)
        self.label_23 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_23.setObjectName("label_23")
        self.formKeys.setWidget(19, QtWidgets.QFormLayout.LabelRole, self.label_23)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setSpacing(4)
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.minusvolumeboost = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolumeboost.setObjectName("minusvolumeboost")
        self.horizontalLayout_27.addWidget(self.minusvolumeboost)
        self.minusvolumeboost_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minusvolumeboost_.setObjectName("minusvolumeboost_")
        self.horizontalLayout_27.addWidget(self.minusvolumeboost_)
        self.formKeys.setLayout(19, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_27)
        self.label_16 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_16.setObjectName("label_16")
        self.formKeys.setWidget(20, QtWidgets.QFormLayout.LabelRole, self.label_16)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setSpacing(4)
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.mute = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.mute.setObjectName("mute")
        self.horizontalLayout_20.addWidget(self.mute)
        self.mute_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.mute_.setObjectName("mute_")
        self.horizontalLayout_20.addWidget(self.mute_)
        self.formKeys.setLayout(20, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_20)
        self.label_17 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_17.setObjectName("label_17")
        self.formKeys.setWidget(21, QtWidgets.QFormLayout.LabelRole, self.label_17)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setSpacing(4)
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.fullscreen = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.fullscreen.setObjectName("fullscreen")
        self.horizontalLayout_21.addWidget(self.fullscreen)
        self.fullscreen_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.fullscreen_.setObjectName("fullscreen_")
        self.horizontalLayout_21.addWidget(self.fullscreen_)
        self.formKeys.setLayout(21, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_21)
        self.label_73 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_73.setObjectName("label_73")
        self.formKeys.setWidget(22, QtWidgets.QFormLayout.LabelRole, self.label_73)
        self.horizontalLayout_46 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_46.setSpacing(4)
        self.horizontalLayout_46.setObjectName("horizontalLayout_46")
        self.maximize = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.maximize.setObjectName("maximize")
        self.horizontalLayout_46.addWidget(self.maximize)
        self.maximize_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.maximize_.setObjectName("maximize_")
        self.horizontalLayout_46.addWidget(self.maximize_)
        self.formKeys.setLayout(22, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_46)
        self.label_24 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_24.setObjectName("label_24")
        self.formKeys.setWidget(23, QtWidgets.QFormLayout.LabelRole, self.label_24)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setSpacing(4)
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.crop = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.crop.setObjectName("crop")
        self.horizontalLayout_28.addWidget(self.crop)
        self.crop_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.crop_.setObjectName("crop_")
        self.horizontalLayout_28.addWidget(self.crop_)
        self.formKeys.setLayout(23, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_28)
        self.label_32 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_32.setObjectName("label_32")
        self.formKeys.setWidget(24, QtWidgets.QFormLayout.LabelRole, self.label_32)
        self.horizontalLayout_37 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_37.setSpacing(4)
        self.horizontalLayout_37.setObjectName("horizontalLayout_37")
        self.loop = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.loop.setObjectName("loop")
        self.horizontalLayout_37.addWidget(self.loop)
        self.loop_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.loop_.setObjectName("loop_")
        self.horizontalLayout_37.addWidget(self.loop_)
        self.formKeys.setLayout(24, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_37)
        self.label_20 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_20.setObjectName("label_20")
        self.formKeys.setWidget(25, QtWidgets.QFormLayout.LabelRole, self.label_20)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setSpacing(4)
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.nextmedia = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.nextmedia.setObjectName("nextmedia")
        self.horizontalLayout_24.addWidget(self.nextmedia)
        self.nextmedia_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.nextmedia_.setObjectName("nextmedia_")
        self.horizontalLayout_24.addWidget(self.nextmedia_)
        self.formKeys.setLayout(25, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_24)
        self.label_78 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_78.setObjectName("label_78")
        self.formKeys.setWidget(26, QtWidgets.QFormLayout.LabelRole, self.label_78)
        self.horizontalLayout_51 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_51.setSpacing(4)
        self.horizontalLayout_51.setObjectName("horizontalLayout_51")
        self.nextmediamime = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.nextmediamime.setObjectName("nextmediamime")
        self.horizontalLayout_51.addWidget(self.nextmediamime)
        self.nextmediamime_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.nextmediamime_.setObjectName("nextmediamime_")
        self.horizontalLayout_51.addWidget(self.nextmediamime_)
        self.formKeys.setLayout(26, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_51)
        self.label_21 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_21.setObjectName("label_21")
        self.formKeys.setWidget(27, QtWidgets.QFormLayout.LabelRole, self.label_21)
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_25.setSpacing(4)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        self.previousmedia = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.previousmedia.setObjectName("previousmedia")
        self.horizontalLayout_25.addWidget(self.previousmedia)
        self.previousmedia_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.previousmedia_.setObjectName("previousmedia_")
        self.horizontalLayout_25.addWidget(self.previousmedia_)
        self.formKeys.setLayout(27, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_25)
        self.label_80 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_80.setObjectName("label_80")
        self.formKeys.setWidget(28, QtWidgets.QFormLayout.LabelRole, self.label_80)
        self.horizontalLayout_50 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_50.setSpacing(4)
        self.horizontalLayout_50.setObjectName("horizontalLayout_50")
        self.previousmediamime = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.previousmediamime.setObjectName("previousmediamime")
        self.horizontalLayout_50.addWidget(self.previousmediamime)
        self.previousmediamime_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.previousmediamime_.setObjectName("previousmediamime_")
        self.horizontalLayout_50.addWidget(self.previousmediamime_)
        self.formKeys.setLayout(28, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_50)
        self.label_74 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_74.setToolTip("")
        self.label_74.setObjectName("label_74")
        self.formKeys.setWidget(29, QtWidgets.QFormLayout.LabelRole, self.label_74)
        self.horizontalLayout_48 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_48.setSpacing(4)
        self.horizontalLayout_48.setObjectName("horizontalLayout_48")
        self.randommedia = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.randommedia.setObjectName("randommedia")
        self.horizontalLayout_48.addWidget(self.randommedia)
        self.randommedia_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.randommedia_.setObjectName("randommedia_")
        self.horizontalLayout_48.addWidget(self.randommedia_)
        self.formKeys.setLayout(29, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_48)
        self.label_77 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_77.setObjectName("label_77")
        self.formKeys.setWidget(30, QtWidgets.QFormLayout.LabelRole, self.label_77)
        self.horizontalLayout_49 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_49.setSpacing(4)
        self.horizontalLayout_49.setObjectName("horizontalLayout_49")
        self.randommediamime = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.randommediamime.setObjectName("randommediamime")
        self.horizontalLayout_49.addWidget(self.randommediamime)
        self.randommediamime_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.randommediamime_.setObjectName("randommediamime_")
        self.horizontalLayout_49.addWidget(self.randommediamime_)
        self.formKeys.setLayout(30, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_49)
        self.label_59 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_59.setObjectName("label_59")
        self.formKeys.setWidget(31, QtWidgets.QFormLayout.LabelRole, self.label_59)
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setSpacing(4)
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.forward = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.forward.setObjectName("forward")
        self.horizontalLayout_30.addWidget(self.forward)
        self.forward_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.forward_.setObjectName("forward_")
        self.horizontalLayout_30.addWidget(self.forward_)
        self.formKeys.setLayout(31, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_30)
        self.label_60 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_60.setObjectName("label_60")
        self.formKeys.setWidget(32, QtWidgets.QFormLayout.LabelRole, self.label_60)
        self.horizontalLayout_38 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_38.setSpacing(4)
        self.horizontalLayout_38.setObjectName("horizontalLayout_38")
        self.back = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.back.setObjectName("back")
        self.horizontalLayout_38.addWidget(self.back)
        self.back_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.back_.setObjectName("back_")
        self.horizontalLayout_38.addWidget(self.back_)
        self.formKeys.setLayout(32, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_38)
        self.label_25 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_25.setObjectName("label_25")
        self.formKeys.setWidget(33, QtWidgets.QFormLayout.LabelRole, self.label_25)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setSpacing(4)
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        self.plussubtitledelay = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plussubtitledelay.setObjectName("plussubtitledelay")
        self.horizontalLayout_29.addWidget(self.plussubtitledelay)
        self.plussubtitledelay_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.plussubtitledelay_.setObjectName("plussubtitledelay_")
        self.horizontalLayout_29.addWidget(self.plussubtitledelay_)
        self.formKeys.setLayout(33, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_29)
        self.label_26 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_26.setObjectName("label_26")
        self.formKeys.setWidget(34, QtWidgets.QFormLayout.LabelRole, self.label_26)
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_31.setSpacing(4)
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        self.minussubtitledelay = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minussubtitledelay.setObjectName("minussubtitledelay")
        self.horizontalLayout_31.addWidget(self.minussubtitledelay)
        self.minussubtitledelay_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.minussubtitledelay_.setObjectName("minussubtitledelay_")
        self.horizontalLayout_31.addWidget(self.minussubtitledelay_)
        self.formKeys.setLayout(34, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_31)
        self.label_27 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_27.setObjectName("label_27")
        self.formKeys.setWidget(35, QtWidgets.QFormLayout.LabelRole, self.label_27)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setSpacing(4)
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        self.cyclesubtitles = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cyclesubtitles.setObjectName("cyclesubtitles")
        self.horizontalLayout_32.addWidget(self.cyclesubtitles)
        self.cyclesubtitles_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cyclesubtitles_.setObjectName("cyclesubtitles_")
        self.horizontalLayout_32.addWidget(self.cyclesubtitles_)
        self.formKeys.setLayout(35, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_32)
        self.label_66 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_66.setObjectName("label_66")
        self.formKeys.setWidget(36, QtWidgets.QFormLayout.LabelRole, self.label_66)
        self.horizontalLayout_39 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_39.setSpacing(4)
        self.horizontalLayout_39.setObjectName("horizontalLayout_39")
        self.cycleaudio_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cycleaudio_.setObjectName("cycleaudio_")
        self.horizontalLayout_39.addWidget(self.cycleaudio_)
        self.cycleaudio = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cycleaudio.setObjectName("cycleaudio")
        self.horizontalLayout_39.addWidget(self.cycleaudio)
        self.formKeys.setLayout(36, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_39)
        self.label_67 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_67.setObjectName("label_67")
        self.formKeys.setWidget(37, QtWidgets.QFormLayout.LabelRole, self.label_67)
        self.horizontalLayout_40 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_40.setSpacing(4)
        self.horizontalLayout_40.setObjectName("horizontalLayout_40")
        self.cyclevideo = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cyclevideo.setObjectName("cyclevideo")
        self.horizontalLayout_40.addWidget(self.cyclevideo)
        self.cyclevideo_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.cyclevideo_.setObjectName("cyclevideo_")
        self.horizontalLayout_40.addWidget(self.cyclevideo_)
        self.formKeys.setLayout(37, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_40)
        self.label_28 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_28.setObjectName("label_28")
        self.formKeys.setWidget(38, QtWidgets.QFormLayout.LabelRole, self.label_28)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setSpacing(4)
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.markdeleted = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.markdeleted.setObjectName("markdeleted")
        self.horizontalLayout_33.addWidget(self.markdeleted)
        self.markdeleted_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.markdeleted_.setObjectName("markdeleted_")
        self.horizontalLayout_33.addWidget(self.markdeleted_)
        self.formKeys.setLayout(38, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_33)
        self.label_29 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_29.setObjectName("label_29")
        self.formKeys.setWidget(39, QtWidgets.QFormLayout.LabelRole, self.label_29)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setSpacing(4)
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.deleteimmediately = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.deleteimmediately.setObjectName("deleteimmediately")
        self.horizontalLayout_34.addWidget(self.deleteimmediately)
        self.deleteimmediately_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.deleteimmediately_.setObjectName("deleteimmediately_")
        self.horizontalLayout_34.addWidget(self.deleteimmediately_)
        self.formKeys.setLayout(39, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_34)
        self.label_30 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_30.setObjectName("label_30")
        self.formKeys.setWidget(40, QtWidgets.QFormLayout.LabelRole, self.label_30)
        self.horizontalLayout_35 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_35.setSpacing(4)
        self.horizontalLayout_35.setObjectName("horizontalLayout_35")
        self.snapshot = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.snapshot.setObjectName("snapshot")
        self.horizontalLayout_35.addWidget(self.snapshot)
        self.snapshot_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.snapshot_.setObjectName("snapshot_")
        self.horizontalLayout_35.addWidget(self.snapshot_)
        self.formKeys.setLayout(40, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_35)
        self.label_31 = QtWidgets.QLabel(self.tabHotkeys)
        self.label_31.setObjectName("label_31")
        self.formKeys.setWidget(41, QtWidgets.QFormLayout.LabelRole, self.label_31)
        self.horizontalLayout_36 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_36.setSpacing(4)
        self.horizontalLayout_36.setObjectName("horizontalLayout_36")
        self.quicksnapshot = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.quicksnapshot.setObjectName("quicksnapshot")
        self.horizontalLayout_36.addWidget(self.quicksnapshot)
        self.quicksnapshot_ = QKeySequenceFlexibleEdit(self.tabHotkeys)
        self.quicksnapshot_.setObjectName("quicksnapshot_")
        self.horizontalLayout_36.addWidget(self.quicksnapshot_)
        self.formKeys.setLayout(41, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_36)
        self.verticalLayout_20.addLayout(self.formKeys)
        spacerItem14 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_20.addItem(spacerItem14)
        self.tabWidget.addTab(self.tabHotkeys, "")
        self.tabUpdates = QtWidgets.QWidget()
        self.tabUpdates.setObjectName("tabUpdates")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tabUpdates)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.labelCurrentVersion = QtWidgets.QLabel(self.tabUpdates)
        font = QtGui.QFont()
        font.setFamily("Segoe UI Light")
        font.setPointSize(15)
        self.labelCurrentVersion.setFont(font)
        self.labelCurrentVersion.setWordWrap(True)
        self.labelCurrentVersion.setObjectName("labelCurrentVersion")
        self.verticalLayout_6.addWidget(self.labelCurrentVersion)
        self.line_2 = QtWidgets.QFrame(self.tabUpdates)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_6.addWidget(self.line_2)
        self.formLayout_7 = QtWidgets.QFormLayout()
        self.formLayout_7.setObjectName("formLayout_7")
        self.labelLastCheck = QtWidgets.QLabel(self.tabUpdates)
        self.labelLastCheck.setObjectName("labelLastCheck")
        self.formLayout_7.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.labelLastCheck)
        self.buttonCheckForUpdates = QtWidgets.QPushButton(self.tabUpdates)
        self.buttonCheckForUpdates.setObjectName("buttonCheckForUpdates")
        self.formLayout_7.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.buttonCheckForUpdates)
        self.spinUpdateFrequency = QtWidgets.QSpinBox(self.tabUpdates)
        self.spinUpdateFrequency.setMaximum(365)
        self.spinUpdateFrequency.setProperty("value", 0)
        self.spinUpdateFrequency.setObjectName("spinUpdateFrequency")
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.spinUpdateFrequency)
        self.checkAutoUpdateCheck = QtWidgets.QCheckBox(self.tabUpdates)
        self.checkAutoUpdateCheck.setChecked(True)
        self.checkAutoUpdateCheck.setObjectName("checkAutoUpdateCheck")
        self.formLayout_7.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.checkAutoUpdateCheck)
        self.verticalLayout_6.addLayout(self.formLayout_7)
        self.line = QtWidgets.QFrame(self.tabUpdates)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_6.addWidget(self.line)
        self.labelGithub = QtWidgets.QLabel(self.tabUpdates)
        self.labelGithub.setAlignment(QtCore.Qt.AlignCenter)
        self.labelGithub.setObjectName("labelGithub")
        self.verticalLayout_6.addWidget(self.labelGithub)
        spacerItem15 = QtWidgets.QSpacerItem(20, 1276, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem15)
        self.tabWidget.addTab(self.tabUpdates, "")
        self.verticalLayout_4.addWidget(self.tabWidget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 4, 0, 1, 3)

        self.retranslateUi(settingsDialog)
        self.tabWidget.setCurrentIndex(0)
        self.comboScaleImages.setCurrentIndex(0)
        self.comboScaleArt.setCurrentIndex(2)
        self.comboScaleGifs.setCurrentIndex(1)
        self.comboTaskbarFlash.setCurrentIndex(0)
        self.comboTrayMiddleClick.setCurrentIndex(2)
        self.comboSnapshotDefault.setCurrentIndex(0)
        self.comboSnapshotCtrl.setCurrentIndex(1)
        self.comboSnapshotShift.setCurrentIndex(5)
        self.comboSnapshotAlt.setCurrentIndex(7)
        self.comboSnapshotFormat.setCurrentIndex(1)
        self.comboFFmpegPriority.setCurrentIndex(4)
        self.comboPlayerDoubleClick.setCurrentIndex(2)
        self.comboPlayerMiddleClick.setCurrentIndex(4)
        self.comboNumKeysPrimary.setCurrentIndex(1)
        self.comboNumKeysSecondary.setCurrentIndex(2)
        self.checkMinimizePause.toggled['bool'].connect(self.checkMinimizeRestore.setEnabled) # type: ignore
        self.checkFFmpegThreadOverride.toggled['bool'].connect(self.spinFFmpegThreads.setEnabled) # type: ignore
        self.checkZoomSmooth.toggled['bool'].connect(self.spinZoomSmoothFactor.setEnabled) # type: ignore
        self.buttonBox.accepted.connect(settingsDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(settingsDialog.reject) # type: ignore
        self.checkHideIdleCursor.toggled['bool'].connect(self.spinHideIdleCursorDuration.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(settingsDialog)
        settingsDialog.setTabOrder(self.comboThemes, self.buttonRefreshThemes)
        settingsDialog.setTabOrder(self.buttonRefreshThemes, self.lineWindowTitleFormat)
        settingsDialog.setTabOrder(self.lineWindowTitleFormat, self.comboDialogPosition)
        settingsDialog.setTabOrder(self.comboDialogPosition, self.checkHideIdleCursor)
        settingsDialog.setTabOrder(self.checkHideIdleCursor, self.spinHideIdleCursorDuration)
        settingsDialog.setTabOrder(self.spinHideIdleCursorDuration, self.checkHighPrecisionProgress)
        settingsDialog.setTabOrder(self.checkHighPrecisionProgress, self.checkMinimizePause)
        settingsDialog.setTabOrder(self.checkMinimizePause, self.checkMinimizeRestore)
        settingsDialog.setTabOrder(self.checkMinimizeRestore, self.checkSnapVideos)
        settingsDialog.setTabOrder(self.checkSnapVideos, self.checkSnapGifs)
        settingsDialog.setTabOrder(self.checkSnapGifs, self.checkSnapImages)
        settingsDialog.setTabOrder(self.checkSnapImages, self.checkSnapArt)
        settingsDialog.setTabOrder(self.checkSnapArt, self.checkResizeOnOpen)
        settingsDialog.setTabOrder(self.checkResizeOnOpen, self.checkSnapOnOpen)
        settingsDialog.setTabOrder(self.checkSnapOnOpen, self.checkSnapOnResize)
        settingsDialog.setTabOrder(self.checkSnapOnResize, self.groupTray)
        settingsDialog.setTabOrder(self.groupTray, self.checkTrayClose)
        settingsDialog.setTabOrder(self.checkTrayClose, self.checkTrayMinimize)
        settingsDialog.setTabOrder(self.checkTrayMinimize, self.groupHover)
        settingsDialog.setTabOrder(self.groupHover, self.spinHoverFadeDuration)
        settingsDialog.setTabOrder(self.spinHoverFadeDuration, self.comboHoverFont)
        settingsDialog.setTabOrder(self.comboHoverFont, self.spinHoverFontSize)
        settingsDialog.setTabOrder(self.spinHoverFontSize, self.buttonHoverFontColor)
        settingsDialog.setTabOrder(self.buttonHoverFontColor, self.checkHoverShadow)
        settingsDialog.setTabOrder(self.checkHoverShadow, self.spinFullScreenFadeDuration)
        settingsDialog.setTabOrder(self.spinFullScreenFadeDuration, self.spinFullScreenWidth)
        settingsDialog.setTabOrder(self.spinFullScreenWidth, self.spinFullScreenMinOpacity)
        settingsDialog.setTabOrder(self.spinFullScreenMinOpacity, self.spinFullScreenMaxOpacity)
        settingsDialog.setTabOrder(self.spinFullScreenMaxOpacity, self.lineDefaultSnapshotPath)
        settingsDialog.setTabOrder(self.lineDefaultSnapshotPath, self.buttonBrowseDefaultSnapshotPath)
        settingsDialog.setTabOrder(self.buttonBrowseDefaultSnapshotPath, self.lineSnapshotNameFormat)
        settingsDialog.setTabOrder(self.lineSnapshotNameFormat, self.lineSnapshotDateFormat)
        settingsDialog.setTabOrder(self.lineSnapshotDateFormat, self.buttonSnapshotDateHelp)
        settingsDialog.setTabOrder(self.buttonSnapshotDateHelp, self.spinSnapshotJpegQuality)
        settingsDialog.setTabOrder(self.spinSnapshotJpegQuality, self.checkSnapshotRemember)
        settingsDialog.setTabOrder(self.checkSnapshotRemember, self.checkSnapshotPause)
        settingsDialog.setTabOrder(self.checkSnapshotPause, self.groupText)
        settingsDialog.setTabOrder(self.groupText, self.spinTextHeight)
        settingsDialog.setTabOrder(self.spinTextHeight, self.spinTextX)
        settingsDialog.setTabOrder(self.spinTextX, self.spinTextY)
        settingsDialog.setTabOrder(self.spinTextY, self.spinTextOpacity)
        settingsDialog.setTabOrder(self.spinTextOpacity, self.spinTextFadeDelay)
        settingsDialog.setTabOrder(self.spinTextFadeDelay, self.checkTextOnOpen)
        settingsDialog.setTabOrder(self.checkTextOnOpen, self.checkTextOnPause)
        settingsDialog.setTabOrder(self.checkTextOnPause, self.checkTextOnVolume)
        settingsDialog.setTabOrder(self.checkTextOnVolume, self.checkTextOnMute)
        settingsDialog.setTabOrder(self.checkTextOnMute, self.checkTextOnVolumeBoost)
        settingsDialog.setTabOrder(self.checkTextOnVolumeBoost, self.checkTextOnLoop)
        settingsDialog.setTabOrder(self.checkTextOnLoop, self.checkTextOnSpeed)
        settingsDialog.setTabOrder(self.checkTextOnSpeed, self.checkTextOnSubtitleAdded)
        settingsDialog.setTabOrder(self.checkTextOnSubtitleAdded, self.checkTextOnTrackChanged)
        settingsDialog.setTabOrder(self.checkTextOnTrackChanged, self.checkTextOnSubtitleDelay)
        settingsDialog.setTabOrder(self.checkTextOnSubtitleDelay, self.checkTextOnSave)
        settingsDialog.setTabOrder(self.checkTextOnSave, self.checkTextOnFullScreenPosition)
        settingsDialog.setTabOrder(self.checkTextOnFullScreenPosition, self.radioTextPosition5)
        settingsDialog.setTabOrder(self.radioTextPosition5, self.radioTextPosition4)
        settingsDialog.setTabOrder(self.radioTextPosition4, self.radioTextPosition6)
        settingsDialog.setTabOrder(self.radioTextPosition6, self.radioTextPosition1)
        settingsDialog.setTabOrder(self.radioTextPosition1, self.radioTextPosition0)
        settingsDialog.setTabOrder(self.radioTextPosition0, self.radioTextPosition2)
        settingsDialog.setTabOrder(self.radioTextPosition2, self.radioTextPosition9)
        settingsDialog.setTabOrder(self.radioTextPosition9, self.radioTextPosition8)
        settingsDialog.setTabOrder(self.radioTextPosition8, self.radioTextPosition10)
        settingsDialog.setTabOrder(self.radioTextPosition10, self.scrollArea)
        settingsDialog.setTabOrder(self.scrollArea, self.pause)
        settingsDialog.setTabOrder(self.pause, self.pause_)
        settingsDialog.setTabOrder(self.pause_, self.plus2)
        settingsDialog.setTabOrder(self.plus2, self.plus2_)
        settingsDialog.setTabOrder(self.plus2_, self.minus2)
        settingsDialog.setTabOrder(self.minus2, self.minus2_)
        settingsDialog.setTabOrder(self.minus2_, self.plus3)
        settingsDialog.setTabOrder(self.plus3, self.plus3_)
        settingsDialog.setTabOrder(self.plus3_, self.minus3)
        settingsDialog.setTabOrder(self.minus3, self.minus3_)
        settingsDialog.setTabOrder(self.minus3_, self.plusframe)
        settingsDialog.setTabOrder(self.plusframe, self.plusframe_)
        settingsDialog.setTabOrder(self.plusframe_, self.minusframe)
        settingsDialog.setTabOrder(self.minusframe, self.minusframe_)
        settingsDialog.setTabOrder(self.minusframe_, self.plusspeed)
        settingsDialog.setTabOrder(self.plusspeed, self.plusspeed_)
        settingsDialog.setTabOrder(self.plusspeed_, self.minusspeed_)
        settingsDialog.setTabOrder(self.minusspeed_, self.plusvolume1)
        settingsDialog.setTabOrder(self.plusvolume1, self.plusvolume1_)
        settingsDialog.setTabOrder(self.plusvolume1_, self.minusvolume1)
        settingsDialog.setTabOrder(self.minusvolume1, self.minusvolume1_)
        settingsDialog.setTabOrder(self.minusvolume1_, self.plusvolumeboost)
        settingsDialog.setTabOrder(self.plusvolumeboost, self.plusvolumeboost_)
        settingsDialog.setTabOrder(self.plusvolumeboost_, self.minusvolumeboost)
        settingsDialog.setTabOrder(self.minusvolumeboost, self.minusvolumeboost_)
        settingsDialog.setTabOrder(self.minusvolumeboost_, self.mute)
        settingsDialog.setTabOrder(self.mute, self.mute_)
        settingsDialog.setTabOrder(self.mute_, self.fullscreen)
        settingsDialog.setTabOrder(self.fullscreen, self.fullscreen_)
        settingsDialog.setTabOrder(self.fullscreen_, self.crop)
        settingsDialog.setTabOrder(self.crop, self.crop_)
        settingsDialog.setTabOrder(self.crop_, self.nextmedia)
        settingsDialog.setTabOrder(self.nextmedia, self.nextmedia_)
        settingsDialog.setTabOrder(self.nextmedia_, self.previousmedia)
        settingsDialog.setTabOrder(self.previousmedia, self.previousmedia_)
        settingsDialog.setTabOrder(self.previousmedia_, self.plussubtitledelay)
        settingsDialog.setTabOrder(self.plussubtitledelay, self.plussubtitledelay_)
        settingsDialog.setTabOrder(self.plussubtitledelay_, self.minussubtitledelay)
        settingsDialog.setTabOrder(self.minussubtitledelay, self.minussubtitledelay_)
        settingsDialog.setTabOrder(self.minussubtitledelay_, self.cyclesubtitles)
        settingsDialog.setTabOrder(self.cyclesubtitles, self.cyclesubtitles_)
        settingsDialog.setTabOrder(self.cyclesubtitles_, self.markdeleted)
        settingsDialog.setTabOrder(self.markdeleted, self.markdeleted_)
        settingsDialog.setTabOrder(self.markdeleted_, self.deleteimmediately)
        settingsDialog.setTabOrder(self.deleteimmediately, self.deleteimmediately_)
        settingsDialog.setTabOrder(self.deleteimmediately_, self.snapshot)
        settingsDialog.setTabOrder(self.snapshot, self.snapshot_)
        settingsDialog.setTabOrder(self.snapshot_, self.quicksnapshot)
        settingsDialog.setTabOrder(self.quicksnapshot, self.quicksnapshot_)
        settingsDialog.setTabOrder(self.quicksnapshot_, self.loop)
        settingsDialog.setTabOrder(self.loop, self.loop_)
        settingsDialog.setTabOrder(self.loop_, self.buttonCheckForUpdates)
        settingsDialog.setTabOrder(self.buttonCheckForUpdates, self.checkAutoUpdateCheck)
        settingsDialog.setTabOrder(self.checkAutoUpdateCheck, self.spinUpdateFrequency)

    def retranslateUi(self, settingsDialog):
        _translate = QtCore.QCoreApplication.translate
        settingsDialog.setWindowTitle(_translate("settingsDialog", "Settings"))
        self.comboThemes.setCurrentText(_translate("settingsDialog", "None"))
        self.comboThemes.setItemText(0, _translate("settingsDialog", "None"))
        self.label_49.setToolTip(_translate("settingsDialog", "The format to use for setting the title of the window. The\n"
"following variables are replaced with their corresponding values:\n"
"\n"
"?base        The name of the media being played, path/extension not included.\n"
"?name        The name of the media being played, path not included.\n"
"?parent        The name of the media being played, parent folder included.\n"
"?path        The name of the media being played, full path included.\n"
"\n"
"?ext        The file-extension of the media being played (MP4, WAV, etc.).\n"
"?mime        The mime-type of the media being played (Video/Audio/Image).\n"
"\n"
"?paused        The pause-state of the media being played (‚ñ∂/ùóúùóú/‚ñ†).\n"
"?fps        The FPS of the media being played.\n"
"?duration        The duration of the media being played.\n"
"?size        The filesize of the media being played.\n"
"?resolution        The dimensions of the media being played.\n"
"?ratio        The aspect ratio of the media being played.\n"
"?volume        The volume of the media being played.\n"
"?speed        The playback speed of the media being played."))
        self.label_49.setText(_translate("settingsDialog", "Window title format"))
        self.lineWindowTitleFormat.setToolTip(_translate("settingsDialog", "The format to use for setting the title of the window. The\n"
"following variables are replaced with their corresponding values:\n"
"\n"
"?base        The name of the media being played, path/extension not included.\n"
"?name        The name of the media being played, path not included.\n"
"?parent        The name of the media being played, parent folder included.\n"
"?path        The name of the media being played, full path included.\n"
"\n"
"?ext        The file-extension of the media being played (MP4, WAV, etc.).\n"
"?mime        The mime-type of the media being played (Video/Audio/Image).\n"
"\n"
"?paused        The pause-state of the media being played (‚ñ∂/ùóúùóú/‚ñ†).\n"
"?fps        The FPS of the media being played.\n"
"?duration        The duration of the media being played.\n"
"?size        The filesize of the media being played.\n"
"?resolution        The dimensions of the media being played.\n"
"?ratio        The aspect ratio of the media being played.\n"
"?volume        The volume of the media being played.\n"
"?speed        The playback speed of the media being played."))
        self.label_70.setToolTip(_translate("settingsDialog", "The format to use for displaying the media\'s creation date when\n"
"right-clicking the player. Refer to https://strftime.org/ for a full\n"
"list of format codes, and https://www.strfti.me/ for an interactive\n"
"sandbox for testing.\n"
"\n"
"NOTE: On Windows, \"%-\" is represented by \"%#\" instead.\n"
"PyPlayer will automatically make this conversion for you,\n"
"and vice versa."))
        self.label_70.setText(_translate("settingsDialog", "Short date format"))
        self.lineDateFormatShort.setToolTip(_translate("settingsDialog", "The format to use for displaying the media\'s creation date when\n"
"right-clicking the player. Refer to https://strftime.org/ for a full\n"
"list of format codes, and https://www.strfti.me/ for an interactive\n"
"sandbox for testing.\n"
"\n"
"NOTE: On Windows, \"%-\" is represented by \"%#\" instead.\n"
"PyPlayer will automatically make this conversion for you,\n"
"and vice versa."))
        self.label_71.setToolTip(_translate("settingsDialog", "The format to use for displaying the media\'s creation/modified dates\n"
"when right-clicking the player and hovering over the short date entry.\n"
"Refer to https://strftime.org/ for a full list of format codes, and\n"
"https://www.strfti.me/ for an interactive sandbox for testing.\n"
"\n"
"NOTE: On Windows, \"%-\" is represented by \"%#\" instead.\n"
"PyPlayer will automatically make this conversion for you,\n"
"and vice versa."))
        self.label_71.setText(_translate("settingsDialog", "Long date format"))
        self.lineDateFormatLong.setToolTip(_translate("settingsDialog", "The format to use for displaying the media\'s creation/modified dates\n"
"when right-clicking the player and hovering over the short date entry.\n"
"Refer to https://strftime.org/ for a full list of format codes, and\n"
"https://www.strfti.me/ for an interactive sandbox for testing.\n"
"\n"
"NOTE: On Windows, \"%-\" is represented by \"%#\" instead.\n"
"PyPlayer will automatically make this conversion for you,\n"
"and vice versa."))
        self.label_58.setToolTip(_translate("settingsDialog", "The number of files to remember between sessions\n"
"after being played.\n"
"\n"
"NOTE: Setting this to 0 will not clear the existing list\n"
"unless you manually clear it or restart PyPlayer.\n"
"\n"
"NOTE: At greater than 25, files will be loaded as-is\n"
"each session, even if some of the files no longer exist.\n"
"Otherwise, the recent files are validated on launch."))
        self.label_58.setText(_translate("settingsDialog", "Recent files to track"))
        self.spinRecentFiles.setSpecialValueText(_translate("settingsDialog", "Do not track recent files"))
        self.spinRecentFiles.setSuffix(_translate("settingsDialog", " file(s)"))
        self.spinRecentFiles.setPrefix(_translate("settingsDialog", "The last "))
        self.label_50.setToolTip(_translate("settingsDialog", "The location where popups and other dialogs will initially appear."))
        self.label_50.setText(_translate("settingsDialog", "Center dialogs over"))
        self.comboDialogPosition.setItemText(0, _translate("settingsDialog", "Window"))
        self.comboDialogPosition.setItemText(1, _translate("settingsDialog", "Screen"))
        self.comboDialogPosition.setItemText(2, _translate("settingsDialog", "Mouse"))
        self.checkHideIdleCursor.setToolTip(_translate("settingsDialog", "If checked, your cursor will disappear until moved\n"
"if left idle over the player for the specified amount\n"
"of time. While fullscreen, the UI will also disappear."))
        self.checkHideIdleCursor.setText(_translate("settingsDialog", "Hide cursor/UI"))
        self.spinHideIdleCursorDuration.setPrefix(_translate("settingsDialog", "After: "))
        self.spinHideIdleCursorDuration.setSuffix(_translate("settingsDialog", " seconds"))
        self.checkFFprobe.setToolTip(_translate("settingsDialog", "If checked, FFprobe will be used to parse media files for data such as\n"
"their FPS, duration, etc. This is more stable, reliable, and sometimes\n"
"faster than VLC\'s built-in parsing, though VLC is often sufficient.\n"
"\n"
"PyPlayer tracks both FFprobe and VLC\'s parsing progress and will use\n"
"whichever one finishes first. FFprobe\'s data is saved to a .txt file and\n"
"reused if possible, providing better performance when reopening\n"
"files. These probe-files can be accessed from the \"Help\" submenu.\n"
"\n"
"Note: If you experience noticable delays while opening media,\n"
"try disabling this setting."))
        self.checkFFprobe.setText(_translate("settingsDialog", "Use FFprobe (requires restart)"))
        self.checkHighPrecisionProgress.setToolTip(_translate("settingsDialog", "If checked, the progress slider for the current media will be faked in\n"
"order to create the effect of a smooth slider. It will increment once\n"
"per frame according to the media\'s frame rate, and a separate\n"
"thread will monitor the slider to keep it from desyncing.\n"
"\n"
"If not checked, libVLC\'s native updates will be used."))
        self.checkHighPrecisionProgress.setText(_translate("settingsDialog", "High-precision progress slider (CPU-intensive)"))
        self.checkStopOnFinish.setToolTip(_translate("settingsDialog", "If checked, the media player will completely stop upon the\n"
"completion of a media file, instead of just pausing the media.\n"
"This is how VLC handles media files.\n"
"\n"
"NOTE: If the player is not stopped, video and audio files will\n"
"still be considered \"in-use\" by your OS. You can manually\n"
"stop the player by right-clicking the player or pause button,\n"
"or by going to \"File -> Stop Player\" in the menubar."))
        self.checkStopOnFinish.setText(_translate("settingsDialog", "Stop player after media has finished (VLC behavior)"))
        self.checkRecentFilesReorderFromMenu.setToolTip(_translate("settingsDialog", "If checked, opening recent files through\n"
"the menu will update their order, moving\n"
"the newly played file to the top."))
        self.checkRecentFilesReorderFromMenu.setText(_translate("settingsDialog", "Opening recent files from the menu updates their order"))
        self.checkRememberDropFolder.setToolTip(_translate("settingsDialog", "If checked, dragging and dropping media will remember that\n"
"media\'s folder and use it as the default for the next time you\n"
"open a file-browsing dialog. Otherwise, only media opened\n"
"through those dialogs will have their folders remembered."))
        self.checkRememberDropFolder.setText(_translate("settingsDialog", "Remember folders for drag-and-dropped media"))
        self.checkAutoEnableSubtitles.setToolTip(_translate("settingsDialog", "If checked, subtitle tracks will be automatically\n"
"enabled if they\'re available. This includes both\n"
"pre-existing and manually-added tracks."))
        self.checkAutoEnableSubtitles.setText(_translate("settingsDialog", "Automatically enable subtitle tracks"))
        self.checkRecycleBin.setToolTip(_translate("settingsDialog", "If checked, files marked for deletion are sent to your computer\'s\n"
"recycle bin instead of being immediately/permanently deleted."))
        self.checkRecycleBin.setText(_translate("settingsDialog", "Deleted files are moved to recycle bin"))
        self.checkCopyEscapeBackslashes.setToolTip(_translate("settingsDialog", "If checked, copying a media\'s path to your clipboard\n"
"will escape all backslashes ( \\ ‚Üí \\\\ ), which is useful\n"
"for certain use-cases.\n"
"\n"
"This is only relevant on Windows as other operating\n"
"systems do not use backslashes in their paths."))
        self.checkCopyEscapeBackslashes.setText(_translate("settingsDialog", "Escape backslashes ( \\ ‚Üí \\\\ ) when copying media path"))
        self.checkContextShowSubmenus.setToolTip(_translate("settingsDialog", "Tristate:\n"
"\n"
"Fully checked - The menubar\'s submenus (\"File\", \"Edit\", etc.)\n"
"will always appear in the context (right-click) menu.\n"
"\n"
"Partially checked - The submenus will only appear in the context\n"
"menu if the menubar itself is not visible.\n"
"\n"
"Unchecked - The submenus will never appear in the context menu."))
        self.checkContextShowSubmenus.setText(_translate("settingsDialog", "Show menubar\'s submenus in context menu (tristate)"))
        self.groupBox.setTitle(_translate("settingsDialog", "Window behavior"))
        self.checkFocusAggressive.setToolTip(_translate("settingsDialog", "If checked, PyPlayer will use COM and native Windows\' APIs\n"
"to aggressively steal focus on Windows. Otherwise, Windows\n"
"will block PyPlayer from taking focus in many situations.\n"
"\n"
"Note: This setting can be enabled during a session, but\n"
"disabling it will have no effect until PyPlayer restarts."))
        self.checkFocusAggressive.setText(_translate("settingsDialog", "Aggressive focus (Windows-only, requires restart)"))
        self.groupBox_12.setTitle(_translate("settingsDialog", "Focus window on open..."))
        self.checkFocusOnNormal.setToolTip(_translate("settingsDialog", "If checked, opening media while the window is open in a normal,\n"
"non-maximized/fullscreen state will raise the window and give it\n"
"focus. This brings the window to the foreground and allows you\n"
"to use keyboard shortcuts right away."))
        self.checkFocusOnNormal.setText(_translate("settingsDialog", "When normal"))
        self.checkFocusOnMaximized.setToolTip(_translate("settingsDialog", "If checked, opening media while the window is\n"
"maximized will raise the window and give it focus.\n"
"This brings the window to the foreground and\n"
"allows you to use keyboard shortcuts right away."))
        self.checkFocusOnMaximized.setText(_translate("settingsDialog", "When maximized"))
        self.checkFocusOnFullscreen.setToolTip(_translate("settingsDialog", "If checked, opening media while the window is\n"
"fullscreen will raise the window and give it focus.\n"
"This brings the window to the foreground and\n"
"allows you to use keyboard shortcuts right away."))
        self.checkFocusOnFullscreen.setText(_translate("settingsDialog", "When fullscreen"))
        self.checkFocusOnMinimizedTaskbar.setToolTip(_translate("settingsDialog", "If checked, opening media while the window is minimized\n"
"to the taskbar will restore the window and give it focus.\n"
"This brings the window to the foreground and allows\n"
"you to use keyboard shortcuts right away."))
        self.checkFocusOnMinimizedTaskbar.setText(_translate("settingsDialog", "When minimized to taskbar"))
        self.checkFocusOnMinimizedTray.setToolTip(_translate("settingsDialog", "If checked, opening media while the window is minimized\n"
"to the system tray will restore the window and give it focus.\n"
"This brings the window to the foreground and allows\n"
"you to use keyboard shortcuts right away."))
        self.checkFocusOnMinimizedTray.setText(_translate("settingsDialog", "When minimized to system tray"))
        self.checkFocusOnDropNormal.setToolTip(_translate("settingsDialog", "If checked, dragging-and-dropping media over an unmaximized,\n"
"non-fullscreen window will raise the window and give it focus.\n"
"This brings the window to the foreground and allows you to\n"
"use keyboard shortcuts right away."))
        self.checkFocusOnDropNormal.setText(_translate("settingsDialog", "When drag-and-dropping (normal)"))
        self.checkFocusOnDropMaximized.setToolTip(_translate("settingsDialog", "If checked, dragging-and-dropping media over a\n"
"maximized window will raise the window and give\n"
"it focus. This brings the window to the foreground\n"
"and allows you to use keyboard shortcuts right away."))
        self.checkFocusOnDropMaximized.setText(_translate("settingsDialog", "When drag-and-dropping (maximized)"))
        self.checkFocusOnDropFullscreen.setToolTip(_translate("settingsDialog", "If checked, dragging-and-dropping media over a\n"
"fullscreen window will raise the window and give\n"
"it focus. This brings the window to the foreground\n"
"and allows you to use keyboard shortcuts right away."))
        self.checkFocusOnDropFullscreen.setText(_translate("settingsDialog", "When drag-and-dropping (fullscreen)"))
        self.checkFocusOnEdit.setToolTip(_translate("settingsDialog", "If checked, edited media that is auto-opened will raise the window\n"
"and give it focus. This brings the window to the foreground and\n"
"allows you to use keyboard shortcuts right away."))
        self.checkFocusOnEdit.setText(_translate("settingsDialog", "After saving an edit"))
        self.groupBox_13.setTitle(_translate("settingsDialog", "Ignore focus settings..."))
        self.checkFocusIgnoreFullscreen.setToolTip(_translate("settingsDialog", "If checked, the window will never be raised or focused if\n"
"the current foreground window is fullscreen (e.g. a game)."))
        self.checkFocusIgnoreFullscreen.setText(_translate("settingsDialog", "When foreground is fullscreen (Windows-only)"))
        self.checkFocusIgnoreFullscreenEditsOnly.setToolTip(_translate("settingsDialog", "If checked, the window won\'t be raised or focused if the\n"
"current foreground window is fullscreen (e.g. a game),\n"
"but only for newly saved files being auto-opened."))
        self.checkFocusIgnoreFullscreenEditsOnly.setText(_translate("settingsDialog", "Only for edits"))
        self.checkFocusIgnoreAutoplay.setToolTip(_translate("settingsDialog", "If checked, files that are opened through autoplay will never raise or focus the window."))
        self.checkFocusIgnoreAutoplay.setText(_translate("settingsDialog", "When Autoplay opens a new file"))
        self.checkFocusIgnoreAudio.setToolTip(_translate("settingsDialog", "If checked, audio files will never raise or focus the window,\n"
"(not including audio files that are auto-opened after an edit)."))
        self.checkFocusIgnoreAudio.setText(_translate("settingsDialog", "When opening audio files (excluding edits)"))
        self.groupBox_2.setTitle(_translate("settingsDialog", "Auto-resizing"))
        self.checkSnapVideos.setText(_translate("settingsDialog", "Videos"))
        self.checkSnapGifs.setText(_translate("settingsDialog", "GIFs"))
        self.checkSnapImages.setText(_translate("settingsDialog", "Images"))
        self.checkSnapArt.setText(_translate("settingsDialog", "Cover Art"))
        self.checkResizeOnOpen.setToolTip(_translate("settingsDialog", "Tristate:\n"
"\n"
"Fully checked - the window will be immediately resized\n"
"to match the media\'s native resolution upon opening it,\n"
"as long as it\'s not larger than your screen.\n"
"\n"
"Partially checked - the window will only be\n"
"resized for the first media file you open."))
        self.checkResizeOnOpen.setText(_translate("settingsDialog", "Resize to native resolution on open (tristate)"))
        self.checkSnapOnOpen.setToolTip(_translate("settingsDialog", "Tristate:\n"
"\n"
"Fully checked - the window will be immediately resized\n"
"to match the media\'s native aspect ratio upon opening it,\n"
"without shrinking/enlarging to match the media\'s resolution.\n"
"\n"
"Partially checked - the window will only be resized for the\n"
"first media file you open."))
        self.checkSnapOnOpen.setText(_translate("settingsDialog", "Snap to native aspect ratio on open (tristate)"))
        self.checkSnapOnResize.setToolTip(_translate("settingsDialog", "NOTE: Hold Shift while resizing to always shrink the window.\n"
"Hold Ctrl while resizing to trigger the opposite behavior (snap\n"
"while snap is disabled, or don\'t snap while snap is enabled).\n"
"\n"
"Tristate:\n"
"\n"
"Fully checked: window will snap to the media\'s native aspect\n"
"ratio after resizing, so that no black bars appear.\n"
"\n"
"Partially checked (experimental): window will have a choppy\n"
"animated transition while snapping. This was discovered by\n"
"accident, but I couldn\'t let it go to waste."))
        self.checkSnapOnResize.setText(_translate("settingsDialog", "Snap to native aspect ratio on resize (tristate)"))
        self.groupBox_14.setTitle(_translate("settingsDialog", "Image scaling"))
        self.label_53.setToolTip(_translate("settingsDialog", "Sets how to scale the size of static images within the window."))
        self.label_53.setText(_translate("settingsDialog", "Static Images:"))
        self.comboScaleImages.setItemText(0, _translate("settingsDialog", "Prefer native size, fit if needed"))
        self.comboScaleImages.setItemText(1, _translate("settingsDialog", "No scaling (native size)"))
        self.comboScaleImages.setItemText(2, _translate("settingsDialog", "Fit (keep aspect ratio)"))
        self.comboScaleImages.setItemText(3, _translate("settingsDialog", "Fill (ignore aspect ratio)"))
        self.label_51.setToolTip(_translate("settingsDialog", "Sets how to scale the size of cover/album art within the window."))
        self.label_51.setText(_translate("settingsDialog", "Cover art:"))
        self.comboScaleArt.setItemText(0, _translate("settingsDialog", "Prefer native size, fit if needed"))
        self.comboScaleArt.setItemText(1, _translate("settingsDialog", "No scaling (native size)"))
        self.comboScaleArt.setItemText(2, _translate("settingsDialog", "Fit (keep aspect ratio)"))
        self.comboScaleArt.setItemText(3, _translate("settingsDialog", "Fill (ignore aspect ratio)"))
        self.label_52.setToolTip(_translate("settingsDialog", "Sets how to scale the size of animated GIFs within the window."))
        self.label_52.setText(_translate("settingsDialog", "Animated GIFs:"))
        self.comboScaleGifs.setItemText(0, _translate("settingsDialog", "No scaling (native size)"))
        self.comboScaleGifs.setItemText(1, _translate("settingsDialog", "Fit (keep aspect ratio)"))
        self.comboScaleGifs.setItemText(2, _translate("settingsDialog", "Fill (ignore aspect ratio)"))
        self.checkShowCoverArt.setToolTip(_translate("settingsDialog", "If checked, audio files with embedded cover art\n"
"will have their cover art displayed on the player."))
        self.checkShowCoverArt.setText(_translate("settingsDialog", "Show cover art"))
        self.checkScaleFiltering.setToolTip(_translate("settingsDialog", "If checked, scaled media will be \"smoothed\" using\n"
"bilinear filtering as opposed the more pixelated\n"
"nearest-neighbor scaling (when possible)."))
        self.checkScaleFiltering.setText(_translate("settingsDialog", "Use bilinear filtering"))
        self.checkClampOnOpen.setToolTip(_translate("settingsDialog", "If checked, the window will be moved\n"
"and resized to fit within the boundaries\n"
"of the screen it\'s on when opening media."))
        self.checkClampOnOpen.setText(_translate("settingsDialog", "Clamp window to monitor on open"))
        self.checkClampOnResize.setToolTip(_translate("settingsDialog", "If checked, the window will be moved\n"
"and resized to fit within the boundaries\n"
"of the screen it\'s on when using the\n"
"\"Snap to native aspect ratio\" settings."))
        self.checkClampOnResize.setText(_translate("settingsDialog", "Clamp window to monitor on snap-resize"))
        self.checkMinimizePause.setToolTip(_translate("settingsDialog", "If checked, media will automatically pause when minimizing the window."))
        self.checkMinimizePause.setText(_translate("settingsDialog", "Pause on minimize"))
        self.checkMinimizeRestore.setToolTip(_translate("settingsDialog", "If checked, media will automatically unpause when restoring the window,\n"
"but only if the media had not been paused prior to minimizing."))
        self.checkMinimizeRestore.setText(_translate("settingsDialog", "Unpause on restore"))
        self.groupBox_15.setTitle(_translate("settingsDialog", "Taskbar behavior (Windows-only)"))
        self.checkTaskbarProgressEdit.setToolTip(_translate("settingsDialog", "If checked, a progress bar will be displayed on\n"
"the taskbar icon itself while saving an edit."))
        self.checkTaskbarProgressEdit.setText(_translate("settingsDialog", "Show edit progress on taskbar icon"))
        self.checkTaskbarIconPauseMinimized.setToolTip(_translate("settingsDialog", "If checked, an icon representing the pause-state (ùóúùóú/‚ñ∂)\n"
"will be overlayed over the taskbar icon while minimized.\n"
"If the player is stopped, no icon will be shown."))
        self.checkTaskbarIconPauseMinimized.setText(_translate("settingsDialog", "Show pause-state on taskbar icon while minimized"))
        self.checkTaskbarControls.setToolTip(_translate("settingsDialog", "If checked, a toolbar will appear within the thumbnail preview\n"
"that appears when hovering over the window in the taskbar.\n"
"\n"
"Note: This setting can be enabled during a session, but\n"
"disabling it will have no effect until PyPlayer restarts."))
        self.checkTaskbarControls.setText(_translate("settingsDialog", "Show controls on thumbnail preview (requires restart)"))
        self.label_9.setToolTip(_translate("settingsDialog", "The number of times to flash the taskbar icon when\n"
"media is opened, but the window does not get focused."))
        self.label_9.setText(_translate("settingsDialog", "After opening media without\n"
"focusing, flash taskbar icon:"))
        self.comboTaskbarFlash.setToolTip(_translate("settingsDialog", "The number of times to flash the taskbar icon when\n"
"media is opened, but the window does not get focused."))
        self.comboTaskbarFlash.setItemText(0, _translate("settingsDialog", "Do not flash"))
        self.comboTaskbarFlash.setItemText(1, _translate("settingsDialog", "Flash once"))
        self.comboTaskbarFlash.setItemText(2, _translate("settingsDialog", "Flash 3 times"))
        self.comboTaskbarFlash.setItemText(3, _translate("settingsDialog", "Flash indefinitely"))
        self.groupTray.setTitle(_translate("settingsDialog", "Enable system tray icon (requires restart)"))
        self.checkTrayClose.setToolTip(_translate("settingsDialog", "If checked, closing the window will minimize\n"
"it to your system tray. You can still fully exit\n"
"by going to \"File->Exit\" or by right-clicking\n"
"the system tray icon.\n"
"\n"
"NOTE: After minimizing to the system tray,\n"
"PyPlayer will take roughly 50-60mb of RAM.\n"
"After several minutes of being idle, this will\n"
"lower significantly and settle around 7-8mb\n"
"(based on Windows tests)."))
        self.checkTrayClose.setText(_translate("settingsDialog", "Minimize to tray when closing window"))
        self.checkTrayMinimize.setToolTip(_translate("settingsDialog", "If checked, minimizing the window will minimize\n"
"it to your system tray. You cannot minimize the\n"
"window normally while this setting is active.\n"
"\n"
"NOTE: After minimizing to the system tray,\n"
"PyPlayer will take roughly 50-60mb of RAM.\n"
"After several minutes of being idle, this will\n"
"lower significantly and settle around 7-8mb\n"
"(based on Windows tests)."))
        self.checkTrayMinimize.setText(_translate("settingsDialog", "Minimize to tray when minimizing window"))
        self.comboTrayMiddleClick.setToolTip(_translate("settingsDialog", "The action to perform when middle-clicking the system tray icon."))
        self.comboTrayMiddleClick.setItemText(0, _translate("settingsDialog", "Exit"))
        self.comboTrayMiddleClick.setItemText(1, _translate("settingsDialog", "Settings"))
        self.comboTrayMiddleClick.setItemText(2, _translate("settingsDialog", "Stop player"))
        self.comboTrayMiddleClick.setItemText(3, _translate("settingsDialog", "Toggle mute"))
        self.label_10.setToolTip(_translate("settingsDialog", "The action to perform when middle-clicking the system tray icon."))
        self.label_10.setText(_translate("settingsDialog", "Middle-click behavior"))
        self.checkTrayResetFirstFileOnRestore.setToolTip(_translate("settingsDialog", "If checked, the first media file opened after minimizing\n"
"to the tray and restoring will be treated like the first file\n"
"opened for that session. Affects any setting that is based\n"
"on \"the first media file you open.\""))
        self.checkTrayResetFirstFileOnRestore.setText(_translate("settingsDialog", "\"First media file\" resets when using system tray"))
        self.groupHover.setTitle(_translate("settingsDialog", "Show timestamps when hovering"))
        self.label_3.setText(_translate("settingsDialog", "Font"))
        self.label_5.setText(_translate("settingsDialog", "Font size"))
        self.label_6.setText(_translate("settingsDialog", "Font color"))
        self.checkHoverShadow.setToolTip(_translate("settingsDialog", "If checked, a small drop-shadow will appear beneath the timestamp."))
        self.checkHoverShadow.setText(_translate("settingsDialog", "Drop shadow"))
        self.spinHoverFadeDuration.setToolTip(_translate("settingsDialog", "The duration, in seconds, that a timestamp takes to fade\n"
"away after removing your mouse from the progress slider."))
        self.spinHoverFadeDuration.setSuffix(_translate("settingsDialog", " seconds"))
        self.label_41.setToolTip(_translate("settingsDialog", "The duration, in seconds, that a timestamp takes to fade\n"
"away after removing your mouse from the progress slider."))
        self.label_41.setText(_translate("settingsDialog", "Fade duration"))
        self.groupBox_9.setTitle(_translate("settingsDialog", "Autoplay"))
        self.label_68.setToolTip(_translate("settingsDialog", "The number of files that Autoplay will remember in a\n"
"given folder during shuffle mode. This is used to avoid\n"
"early repeats of the same files. Autoplay will remember\n"
"this list until you shuffle from within a different folder."))
        self.label_68.setText(_translate("settingsDialog", "Max files to remember while shuffling"))
        self.spinAutoplayMaxFiles.setToolTip(_translate("settingsDialog", "The number of files that Autoplay will remember in a\n"
"given folder during shuffle mode. This is used to avoid\n"
"early repeats of the same files. Autoplay will remember\n"
"this list until you shuffle from within a different folder."))
        self.spinAutoplayMaxFiles.setSuffix(_translate("settingsDialog", " file(s)"))
        self.checkAutoplayHideMarquee.setToolTip(_translate("settingsDialog", "If checked, Autoplay will not show the media\'s filename\n"
"over the screen when opening each file, even if you\n"
"have the \"media opened\" marquee enabled below."))
        self.checkAutoplayHideMarquee.setText(_translate("settingsDialog", "Hide \"media opened\" marquee while autoplaying"))
        self.checkAutoplayAddToRecents.setToolTip(_translate("settingsDialog", "If checked, Autoplay (with shuffle mode disabled) will\n"
"add each file played to the recent files list like normal."))
        self.checkAutoplayAddToRecents.setText(_translate("settingsDialog", "Non-shuffle mode adds to recent files list"))
        self.checkAutoplayShuffleAddToRecents.setToolTip(_translate("settingsDialog", "If checked, Autoplay (with shuffle mode enabled) will\n"
"add each file played to the recent files list like normal."))
        self.checkAutoplayShuffleAddToRecents.setText(_translate("settingsDialog", "Shuffle mode adds to recent files list"))
        self.groupBox_7.setToolTip(_translate("settingsDialog", "If checked, scrolling over images/GIFs will be inverted.\n"
"\n"
"Note: To scroll images/GIFs, hold Alt or right-click while scrolling"))
        self.groupBox_7.setTitle(_translate("settingsDialog", "Zooming/Panning"))
        self.checkZoomPrecise.setToolTip(_translate("settingsDialog", "If checked, scrolling over images/GIFs with Alt or right-click will be inverted.\n"
"Note: Holding shift to pan horizontally will also be inverted."))
        self.checkZoomPrecise.setText(_translate("settingsDialog", "Precise zooming (resource intensive)"))
        self.checkZoomSmooth.setToolTip(_translate("settingsDialog", "If checked, zooming will smoothly transition between zoom levels."))
        self.checkZoomSmooth.setText(_translate("settingsDialog", "Smooth zooming"))
        self.spinZoomSmoothFactor.setToolTip(_translate("settingsDialog", "The speed at which the smooth zooming effect takes place.\n"
"\n"
"NOTE: The \"speed\" actually refers to the factor used during\n"
"each step of the smoothing animation. For example, if you\n"
"zoom from 1x to 10x 50% speed, the animation would be:\n"
"1x ‚Üí 5x ‚Üí 7.5x ‚Üí 8.75x ‚Üí etc.\n"
"\n"
"This setting may have different effects for any additional\n"
"animation types added in the future."))
        self.spinZoomSmoothFactor.setSuffix(_translate("settingsDialog", "% speed"))
        self.label_62.setToolTip(_translate("settingsDialog", "The value used when incrementing the zoom.\n"
"A higher denominator means smaller jumps\n"
"between levels.\n"
"\n"
"The increment is relative to the current zoom\n"
"level in order to provide a more proportional\n"
"jump between zoom levels: the larger the\n"
"zoom, the larger the jump."))
        self.label_62.setText(_translate("settingsDialog", "Zoom increment"))
        self.spinZoomIncrement1.setSuffix(_translate("settingsDialog", " the current zoom"))
        self.spinZoomIncrement1.setPrefix(_translate("settingsDialog", "1/"))
        self.label_63.setToolTip(_translate("settingsDialog", "The value used when incrementing the zoom\n"
"while holding Alt. A higher denominator\n"
"means smaller jumps between levels.\n"
"\n"
"The increment is relative to the current zoom\n"
"level in order to provide a more proportional\n"
"jump between zoom levels: the larger the\n"
"zoom, the larger the jump."))
        self.label_63.setText(_translate("settingsDialog", "Alt-Zoom increment"))
        self.spinZoomIncrement2.setSuffix(_translate("settingsDialog", " the current zoom"))
        self.spinZoomIncrement2.setPrefix(_translate("settingsDialog", "1/"))
        self.label_64.setToolTip(_translate("settingsDialog", "The value used when incrementing the zoom\n"
"while holding Shift. A higher denominator\n"
"means smaller jumps between levels.\n"
"\n"
"The increment is relative to the current zoom\n"
"level in order to provide a more proportional\n"
"jump between zoom levels: the larger the\n"
"zoom, the larger the jump. A higher value\n"
"here means smaller jumps between levels."))
        self.label_64.setText(_translate("settingsDialog", "Shift-Zoom increment"))
        self.spinZoomIncrement3.setSuffix(_translate("settingsDialog", " the current zoom"))
        self.spinZoomIncrement3.setPrefix(_translate("settingsDialog", "1/"))
        self.label_61.setToolTip(_translate("settingsDialog", "The minimum zoom factor allowed for media,\n"
"relative to the current size of your window."))
        self.label_61.setText(_translate("settingsDialog", "Minimum zoom"))
        self.spinZoomMinimumFactor.setSuffix(_translate("settingsDialog", "x the current window size"))
        self.checkZoomAutoDisable1x.setToolTip(_translate("settingsDialog", "If checked, and \"Minimum zoom\" is set to 1.00x (meaning the smallest\n"
"zoom you can do is either the media\'s native size or the window\'s size),\n"
"decreasing the zoom to 1.00x will simply disable zoom-mode (which\n"
"re-centers the media and stops you from dragging it around)."))
        self.checkZoomAutoDisable1x.setText(_translate("settingsDialog", "Auto-disable zoom at 1x size"))
        self.checkZoomForceMinimum.setToolTip(_translate("settingsDialog", "If checked, and the minimum zoom factor cannot actually be reached\n"
"(i.e. the media was very small to begin with), the minimum zoom will\n"
"be relative to the media\'s size instead of the window\'s size.\n"
"\n"
"(i.e. 0.25x the current media size instead of 0.25x the current window size)"))
        self.checkZoomForceMinimum.setText(_translate("settingsDialog", "Zoom relative to media\'s size if\n"
"min. zoom cannot be reached"))
        self.checkZoomPanByDefault.setToolTip(_translate("settingsDialog", "If checked, scrolling will pan by default unless you hold\n"
"Ctrl or right-click. Otherwise, scrolling will zoom by default."))
        self.checkZoomPanByDefault.setText(_translate("settingsDialog", "Hold Ctrl (or right-click) while scrolling to zoom"))
        self.checkZoomPanInvertScroll.setToolTip(_translate("settingsDialog", "If checked, panning images/GIFs while scrolling or using page down/up will be inverted.\n"
"Note: Holding shift to pan horizontally will also be inverted."))
        self.checkZoomPanInvertScroll.setText(_translate("settingsDialog", "Invert panning directions (\"natural scroll\")"))
        self.groupBox_4.setTitle(_translate("settingsDialog", "Fullscreen controls"))
        self.label_43.setText(_translate("settingsDialog", "Fade duration"))
        self.spinFullScreenFadeDuration.setToolTip(_translate("settingsDialog", "The duration, in seconds, that the fullscreen\n"
"controls take to fade away after leaving your\n"
"mouse idle or moving it to a different monitor."))
        self.spinFullScreenFadeDuration.setSuffix(_translate("settingsDialog", " seconds"))
        self.label_36.setToolTip(_translate("settingsDialog", "The percentage of the screen that the\n"
"fullscreen controls take up, width-wise."))
        self.label_36.setText(_translate("settingsDialog", "Width"))
        self.spinFullScreenWidth.setSuffix(_translate("settingsDialog", "% of screen"))
        self.label_35.setToolTip(_translate("settingsDialog", "The minimum opacity (transparency) that the fullscreen\n"
"controls reach while fading. Setting this to 0 means they\n"
"fade away completely, and setting it at or above the\n"
"maximum opacity means it won\'t fade at all."))
        self.label_35.setText(_translate("settingsDialog", "Minimum opacity"))
        self.spinFullScreenMinOpacity.setSuffix(_translate("settingsDialog", "%"))
        self.label_34.setToolTip(_translate("settingsDialog", "The maximum opacity (transparency) that the fullscreen\n"
"controls reach before fading. Setting this to 0 means they\n"
"will not appear at all."))
        self.label_34.setText(_translate("settingsDialog", "Maximum opacity"))
        self.spinFullScreenMaxOpacity.setSuffix(_translate("settingsDialog", "%"))
        self.groupBox_3.setTitle(_translate("settingsDialog", "Snapshots"))
        self.lineDefaultSnapshotPath.setText(_translate("settingsDialog", "%USERPROFILE%\\Pictures"))
        self.label_47.setToolTip(_translate("settingsDialog", "The format to use for naming snapshots. The following variables are replaced with their corresponding values:\n"
"\n"
"?name    The name (path not included) of the video/image/cover art being snapshotted.\n"
"?date    The timestamp of the snapshot. See \"Snapshot Date Format\" for more details.\n"
"?frame    The frame number that was snapshotted.\n"
"?framecount    The total number of frames in the media that was snapshotted.\n"
"?count    A number to be used to create unique filenames. If this variable is used, it will always be included,\n"
"    even if the snapshot name is unique. If not specified and name is not unique, default Windows-naming\n"
"    conventions will be used: \"base (count).extension\""))
        self.label_47.setText(_translate("settingsDialog", "Snapshot Name Format"))
        self.lineSnapshotNameFormat.setToolTip(_translate("settingsDialog", "The format to use for naming snapshots. The following variables are replaced with their corresponding values:\n"
"\n"
"?name    The name (path not included) of the video/image/cover art being snapshotted.\n"
"?date    The timestamp of the snapshot. See \"Snapshot Date Format\" for more details.\n"
"?frame    The frame number that was snapshotted.\n"
"?framecount    The total number of frames in the media that was snapshotted.\n"
"?count    A number to be used to create unique filenames. If this variable is used, it will always be included,\n"
"    even if the snapshot name is unique. If not specified and name is not unique, default Windows-naming\n"
"    conventions will be used: \"base (count).extension\""))
        self.lineSnapshotNameFormat.setText(_translate("settingsDialog", "snap_?date_?count"))
        self.lineSnapshotNameFormat.setPlaceholderText(_translate("settingsDialog", "snap_?date_?count"))
        self.label_54.setToolTip(_translate("settingsDialog", "The format to use for naming snapshots of GIFs.\n"
"See \"Snapshot Name Format\" for more details."))
        self.label_54.setText(_translate("settingsDialog", "Snapshot GIF Format"))
        self.lineSnapshotGifFormat.setToolTip(_translate("settingsDialog", "The format to use for naming snapshots of GIFs.\n"
"See \"Snapshot Name Format\" for more details."))
        self.lineSnapshotGifFormat.setText(_translate("settingsDialog", "?name_frame?frame"))
        self.lineSnapshotGifFormat.setPlaceholderText(_translate("settingsDialog", "Use default name format"))
        self.label_55.setToolTip(_translate("settingsDialog", "The format to use for saving cover art. See\n"
"\"Snapshot Name Format\" for more details."))
        self.label_55.setText(_translate("settingsDialog", "Cover Art Name Format"))
        self.lineSnapshotArtFormat.setToolTip(_translate("settingsDialog", "The format to use for saving cover art. See\n"
"\"Snapshot Name Format\" for more details."))
        self.lineSnapshotArtFormat.setText(_translate("settingsDialog", "?name_art"))
        self.lineSnapshotArtFormat.setPlaceholderText(_translate("settingsDialog", "Use default name format"))
        self.label_45.setToolTip(_translate("settingsDialog", "The format to use for the ?date variable in snapshot names.\n"
"Formatting is based on strftime formatting. Hover over the ?\n"
"button to see most (but not all) of the available format codes."))
        self.label_45.setText(_translate("settingsDialog", "Snapshot Date Format"))
        self.lineSnapshotDateFormat.setText(_translate("settingsDialog", "%y.%m.%d"))
        self.lineSnapshotDateFormat.setPlaceholderText(_translate("settingsDialog", "%y.%m.%d"))
        self.label_46.setToolTip(_translate("settingsDialog", "The quality to use for JPEG-format snapshots. Higher is better."))
        self.label_46.setText(_translate("settingsDialog", "Snapshot JPEG Quality"))
        self.checkSnapshotGifPNG.setToolTip(_translate("settingsDialog", "If checked, snapshots of GIFs and static images (but not\n"
"cover art) will default to PNG format, regardless of your\n"
"preference. JPEG format can still be used if manually\n"
"chosen while doing a regular snapshot."))
        self.checkSnapshotGifPNG.setText(_translate("settingsDialog", "Prefer PNG format for GIF/image snapshots"))
        self.checkSnapshotRemember.setToolTip(_translate("settingsDialog", "If checked, snapshot file-dialogs will default to folders you opened in\n"
"other snapshot file-dialogs, as opposed to folders from any file-dialog."))
        self.checkSnapshotRemember.setText(_translate("settingsDialog", "Remember last snapshot folder"))
        self.checkSnapshotPause.setToolTip(_translate("settingsDialog", "If checked, doing a quick-snapshot will briefly pause the video\n"
"to get the most accurate snapshot to your initial click as possible.\n"
"Snapshots using dialogs will pause the video regardless."))
        self.checkSnapshotPause.setText(_translate("settingsDialog", "Always temporarily pause videos when snapshotting"))
        self.checkCopyPrimaryUsesDialog.setToolTip(_translate("settingsDialog", "If checked, clicking \"copy image\" will show a size/quality\n"
"dialog beforehand. Holding shift, ctrl, or alt while clicking\n"
"will skip this dialog. Otherwise, it\'s vice versa."))
        self.checkCopyPrimaryUsesDialog.setText(_translate("settingsDialog", "\"Copy image\" shows size/quality dialog by default"))
        self.groupBox_8.setToolTip(_translate("settingsDialog", "Change the behavior of the snapshot toolbar button based\n"
"on which, if any, modifiers you\'re holding while clicking."))
        self.groupBox_8.setTitle(_translate("settingsDialog", "Snapshot toolbar button behavior"))
        self.label_48.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button without holding\n"
"anything."))
        self.label_48.setText(_translate("settingsDialog", "Default"))
        self.comboSnapshotDefault.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button without holding\n"
"anything."))
        self.comboSnapshotDefault.setItemText(0, _translate("settingsDialog", "Quick snapshot"))
        self.comboSnapshotDefault.setItemText(1, _translate("settingsDialog", "Snapshot with size/quality dialog"))
        self.comboSnapshotDefault.setItemText(2, _translate("settingsDialog", "Copy image"))
        self.comboSnapshotDefault.setItemText(3, _translate("settingsDialog", "Copy image with size/quality dialog"))
        self.comboSnapshotDefault.setItemText(4, _translate("settingsDialog", "Undo last snapshot"))
        self.comboSnapshotDefault.setItemText(5, _translate("settingsDialog", "Open last snapshot (PyPlayer)"))
        self.comboSnapshotDefault.setItemText(6, _translate("settingsDialog", "Open last snapshot (default)"))
        self.comboSnapshotDefault.setItemText(7, _translate("settingsDialog", "Explore last snapshot location"))
        self.comboSnapshotDefault.setItemText(8, _translate("settingsDialog", "Copy last snapshot path"))
        self.comboSnapshotDefault.setItemText(9, _translate("settingsDialog", "Copy last snapshot file"))
        self.comboSnapshotDefault.setItemText(10, _translate("settingsDialog", "Cut last snapshot file"))
        self.comboSnapshotDefault.setItemText(11, _translate("settingsDialog", "Copy last snapshot image to clipboard"))
        self.label_75.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Ctrl."))
        self.label_75.setText(_translate("settingsDialog", "Ctrl"))
        self.comboSnapshotCtrl.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Ctrl."))
        self.comboSnapshotCtrl.setItemText(0, _translate("settingsDialog", "Quick snapshot"))
        self.comboSnapshotCtrl.setItemText(1, _translate("settingsDialog", "Snapshot with size/quality dialog"))
        self.comboSnapshotCtrl.setItemText(2, _translate("settingsDialog", "Copy image"))
        self.comboSnapshotCtrl.setItemText(3, _translate("settingsDialog", "Copy image with size/quality dialog"))
        self.comboSnapshotCtrl.setItemText(4, _translate("settingsDialog", "Undo last snapshot"))
        self.comboSnapshotCtrl.setItemText(5, _translate("settingsDialog", "Open last snapshot (PyPlayer)"))
        self.comboSnapshotCtrl.setItemText(6, _translate("settingsDialog", "Open last snapshot (default)"))
        self.comboSnapshotCtrl.setItemText(7, _translate("settingsDialog", "Explore last snapshot location"))
        self.comboSnapshotCtrl.setItemText(8, _translate("settingsDialog", "Copy last snapshot path"))
        self.comboSnapshotCtrl.setItemText(9, _translate("settingsDialog", "Copy last snapshot file"))
        self.comboSnapshotCtrl.setItemText(10, _translate("settingsDialog", "Cut last snapshot file"))
        self.comboSnapshotCtrl.setItemText(11, _translate("settingsDialog", "Copy last snapshot image to clipboard"))
        self.label_72.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Shift."))
        self.label_72.setText(_translate("settingsDialog", "Shift"))
        self.comboSnapshotShift.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Shift."))
        self.comboSnapshotShift.setItemText(0, _translate("settingsDialog", "Quick snapshot"))
        self.comboSnapshotShift.setItemText(1, _translate("settingsDialog", "Snapshot with size/quality dialog"))
        self.comboSnapshotShift.setItemText(2, _translate("settingsDialog", "Copy image"))
        self.comboSnapshotShift.setItemText(3, _translate("settingsDialog", "Copy image with size/quality dialog"))
        self.comboSnapshotShift.setItemText(4, _translate("settingsDialog", "Undo last snapshot"))
        self.comboSnapshotShift.setItemText(5, _translate("settingsDialog", "Open last snapshot (PyPlayer)"))
        self.comboSnapshotShift.setItemText(6, _translate("settingsDialog", "Open last snapshot (default)"))
        self.comboSnapshotShift.setItemText(7, _translate("settingsDialog", "Explore last snapshot location"))
        self.comboSnapshotShift.setItemText(8, _translate("settingsDialog", "Copy last snapshot path"))
        self.comboSnapshotShift.setItemText(9, _translate("settingsDialog", "Copy last snapshot file"))
        self.comboSnapshotShift.setItemText(10, _translate("settingsDialog", "Cut last snapshot file"))
        self.comboSnapshotShift.setItemText(11, _translate("settingsDialog", "Copy last snapshot image to clipboard"))
        self.label_76.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Alt."))
        self.label_76.setText(_translate("settingsDialog", "Alt"))
        self.comboSnapshotAlt.setToolTip(_translate("settingsDialog", "The action to perform when clicking the\n"
"snapshot toolbar button while holding Alt."))
        self.comboSnapshotAlt.setItemText(0, _translate("settingsDialog", "Quick snapshot"))
        self.comboSnapshotAlt.setItemText(1, _translate("settingsDialog", "Snapshot with size/quality dialog"))
        self.comboSnapshotAlt.setItemText(2, _translate("settingsDialog", "Copy image"))
        self.comboSnapshotAlt.setItemText(3, _translate("settingsDialog", "Copy image with size/quality dialog"))
        self.comboSnapshotAlt.setItemText(4, _translate("settingsDialog", "Undo last snapshot"))
        self.comboSnapshotAlt.setItemText(5, _translate("settingsDialog", "Open last snapshot (PyPlayer)"))
        self.comboSnapshotAlt.setItemText(6, _translate("settingsDialog", "Open last snapshot (default)"))
        self.comboSnapshotAlt.setItemText(7, _translate("settingsDialog", "Explore last snapshot location"))
        self.comboSnapshotAlt.setItemText(8, _translate("settingsDialog", "Copy last snapshot path"))
        self.comboSnapshotAlt.setItemText(9, _translate("settingsDialog", "Copy last snapshot file"))
        self.comboSnapshotAlt.setItemText(10, _translate("settingsDialog", "Cut last snapshot file"))
        self.comboSnapshotAlt.setItemText(11, _translate("settingsDialog", "Copy last snapshot image to clipboard"))
        self.label_65.setText(_translate("settingsDialog", "Snapshot Image Format"))
        self.comboSnapshotFormat.setItemText(0, _translate("settingsDialog", "PNG"))
        self.comboSnapshotFormat.setItemText(1, _translate("settingsDialog", "JPEG"))
        self.groupText.setToolTip(_translate("settingsDialog", "If checked, VLC\'s on-screen-display (OSD or \"marquee\")\n"
"will be used to briefly overlay messages over your media\n"
"based on the following criteria.\n"
"\n"
"NOTE: OSD does not work with audio files\n"
"or while the player is otherwise stopped.\n"
"\n"
"-- UNFINISHED --\n"
"In the future, this will support\n"
"more robust fading settings."))
        self.groupText.setTitle(_translate("settingsDialog", "Marquees (on-screen text)"))
        self.label_37.setToolTip(_translate("settingsDialog", "The percentage of the screen that\n"
"overlayed messages take up, relative\n"
"to the currently playing media\'s height."))
        self.label_37.setText(_translate("settingsDialog", "Height"))
        self.spinTextHeight.setSuffix(_translate("settingsDialog", "% of media\'s height"))
        self.label_38.setToolTip(_translate("settingsDialog", "The maximum opacity (transparency) that\n"
"overlayed messages appear as before fading."))
        self.label_38.setText(_translate("settingsDialog", "Maximum opacity"))
        self.spinTextOpacity.setSuffix(_translate("settingsDialog", "%"))
        self.label_40.setToolTip(_translate("settingsDialog", "The duration in seconds that an overlayed\n"
"message is displayed at its maximum opacity\n"
"before it begins to fade."))
        self.label_40.setText(_translate("settingsDialog", "Start fading after"))
        self.spinTextFadeDelay.setSuffix(_translate("settingsDialog", " seconds"))
        self.checkTextOnFullScreenPosition.setText(_translate("settingsDialog", "Position changed (fullscreen only)"))
        self.checkTextOnVolume.setText(_translate("settingsDialog", "Volume changed"))
        self.checkTextOnSpeed.setText(_translate("settingsDialog", "Speed changed"))
        self.checkTextOnPause.setText(_translate("settingsDialog", "Media paused"))
        self.checkTextOnOpen.setText(_translate("settingsDialog", "Media opened"))
        self.checkTextOnSave.setText(_translate("settingsDialog", "Edit saved"))
        self.checkTextOnMute.setText(_translate("settingsDialog", "Mute toggled"))
        self.checkTextOnVolumeBoost.setText(_translate("settingsDialog", "Volume multiplier"))
        self.checkTextOnSubtitleDelay.setText(_translate("settingsDialog", "Subtitles delayed"))
        self.checkTextOnSubtitleAdded.setText(_translate("settingsDialog", "Subtitles added"))
        self.checkTextOnLoop.setText(_translate("settingsDialog", "Loop toggled"))
        self.checkTextOnTrackChanged.setText(_translate("settingsDialog", "Track changed"))
        self.radioTextPosition1.setToolTip(_translate("settingsDialog", "Left"))
        self.radioTextPosition9.setToolTip(_translate("settingsDialog", "Bottom-Left"))
        self.radioTextPosition0.setToolTip(_translate("settingsDialog", "Center"))
        self.radioTextPosition2.setToolTip(_translate("settingsDialog", "Right"))
        self.radioTextPosition8.setToolTip(_translate("settingsDialog", "Bottom"))
        self.radioTextPosition10.setToolTip(_translate("settingsDialog", "Bottom-Right"))
        self.radioTextPosition5.setToolTip(_translate("settingsDialog", "Top-Left"))
        self.radioTextPosition4.setToolTip(_translate("settingsDialog", "Top"))
        self.radioTextPosition6.setToolTip(_translate("settingsDialog", "Top-Right"))
        self.label_39.setToolTip(_translate("settingsDialog", "The position on the screen where most\n"
"overlayed messages will appear."))
        self.label_39.setText(_translate("settingsDialog", "Position"))
        self.label_42.setToolTip(_translate("settingsDialog", "The horizontal-offset from the closest\n"
"edge/corner of the screen, relative to\n"
"the currently playing media\'s height."))
        self.label_42.setText(_translate("settingsDialog", "X offset"))
        self.label_44.setToolTip(_translate("settingsDialog", "The vertical-offset from the closest\n"
"edge/corner of the screen, relative to\n"
"the currently playing media\'s height."))
        self.label_44.setText(_translate("settingsDialog", "Y offset"))
        self.spinTextX.setSuffix(_translate("settingsDialog", "% of media\'s height"))
        self.spinTextY.setSuffix(_translate("settingsDialog", "% of media\'s height"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabGeneral), _translate("settingsDialog", "&General"))
        self.comboFFmpegPriority.setToolTip(_translate("settingsDialog", "What priority level FFmpeg processes should have while running.\n"
"Higher levels allow FFmpeg to finish marginally faster at the cost of\n"
"slowing down your system, whereas lower levels allow your system\n"
"to run more smoothly while FFmpeg finishes marginally slower.\n"
"\n"
"You should give FFmpeg \"Low\" priority if you want to do intensive\n"
"tasks (such as play video games) while waiting for edits to finish.\n"
"Note: FFmpeg will still fight for resources even at \"Low\" priority,\n"
"so combining this with a thread override may be more optimal.\n"
"\n"
"For Linux, each priority level represents a \"niceness\" value:\n"
"- High: -10 (requires root)\n"
"- Above normal: -5 (requires root)\n"
"- Normal: 0\n"
"- Below normal: 5\n"
"- Low: 10\n"
"\n"
"Note: This setting has no effect on macOS.\n"
"Note: Negative niceness values (high/above normal) require root.\n"
"Otherwise, they will default to 0.\n"
"Note: Changing this setting will not affect FFmpeg processes that\n"
"were already started."))
        self.comboFFmpegPriority.setItemText(0, _translate("settingsDialog", "High"))
        self.comboFFmpegPriority.setItemText(1, _translate("settingsDialog", "Above normal"))
        self.comboFFmpegPriority.setItemText(2, _translate("settingsDialog", "Normal"))
        self.comboFFmpegPriority.setItemText(3, _translate("settingsDialog", "Below normal"))
        self.comboFFmpegPriority.setItemText(4, _translate("settingsDialog", "Low"))
        self.checkFFmpegThreadOverride.setToolTip(_translate("settingsDialog", "If checked, allows you to override how many threads are allotted\n"
"to FFmpeg processes. See the spinbox\'s tooltip for more details.\n"
"\n"
"Note: Don\'t use this if you don\'t know what you\'re doing."))
        self.checkFFmpegThreadOverride.setText(_translate("settingsDialog", "FFmpeg threads"))
        self.spinFFmpegThreads.setToolTip(_translate("settingsDialog", "How many threads should be allotted to FFmpeg. Fewer threads\n"
"will limit FFmpeg\'s CPU usage at the cost of finishing drastically\n"
"slower. However, too many threads may reduce FFmpeg\'s\n"
"overall performance anyway despite the increased CPU usage.\n"
"\n"
"Setting this override carefully can be more effective than\n"
"the priority setting, or can potentially improve FFmpeg\'s\n"
"performance over its default behavior.\n"
"\n"
"Note: Don\'t use this if you don\'t know what you\'re doing."))
        self.spinFFmpegThreads.setSpecialValueText(_translate("settingsDialog", "Automatic (recommended)"))
        self.spinFFmpegThreads.setSuffix(_translate("settingsDialog", " threads"))
        self.checkRenameMissingImages.setToolTip(_translate("settingsDialog", "If checked, renaming an image file that doesn\'t\n"
"exist anymore will save the currently cached\n"
"image as a new file with your desired name.\n"
"\n"
"If not checked, renaming an image file that\n"
"doesn\'t exist anymore will do nothing."))
        self.checkRenameMissingImages.setText(_translate("settingsDialog", "Renaming missing image files creates a new one"))
        self.checkSaveAsForceOnNoName.setToolTip(_translate("settingsDialog", "If checked, saving an edit with no name specified in the\n"
"output box at the bottom of the window will bring up\n"
"the \"Save as...\" prompt.\n"
"\n"
"If not checked, the edited file will have the same name\n"
"name as the source file, with \"_edited\" appended to it."))
        self.checkSaveAsForceOnNoName.setText(_translate("settingsDialog", "Use \"Save as...\" prompt when saving without a name"))
        self.checkSaveAsUseMediaFolder.setToolTip(_translate("settingsDialog", "If checked, the \"Save as...\" prompt will default to the current\n"
"media\'s folder if possible. Otherwise, the prompt will open to\n"
"the most recently accessed folder from any dialog."))
        self.checkSaveAsUseMediaFolder.setText(_translate("settingsDialog", "\"Save as...\" prompt defaults to current media\'s folder"))
        self.checkCycleRememberOriginalPath.setToolTip(_translate("settingsDialog", "Tristate:\n"
"\n"
"Fully checked: media that is renamed and/or edited will act\n"
"as if it were in its original place when attempting to cycle to\n"
"the next or previous media media file in the current folder.\n"
"\n"
"Partially checked: ditto, but only for renaming, not editing.\n"
"\n"
"Example: If there are 10 files in a folder, and you\'re playing\n"
"file #5, but then rename it so that it becomes file #1, the\n"
"next file that will play will still be file #6."))
        self.checkCycleRememberOriginalPath.setText(_translate("settingsDialog", "Cycle media based on file\'s original filepath (tristate)"))
        self.groupBox_10.setTitle(_translate("settingsDialog", "If focus is not given after auto-opening an edit..."))
        self.checkEditFocusRejectedPause.setToolTip(_translate("settingsDialog", "If checked, edits that automatically open after finishing but\n"
"don\'t give PyPlayer focus will immediately pause the player.\n"
"\n"
"The typical scenarios for this would be having edit-focusing\n"
"disabled or having fullscreen applications (like games) ignore\n"
"your focus settings, and then having the player pause itself\n"
"to avoid distracting you after an edit finishes."))
        self.checkEditFocusRejectedPause.setText(_translate("settingsDialog", "Pause player"))
        self.checkEditFocusRejectedBeep.setToolTip(_translate("settingsDialog", "If checked, edits that automatically open after finishing but\n"
"don\'t give PyPlayer focus will play a notification sound.\n"
"\n"
"The typical scenarios for this would be having edit-focusing\n"
"disabled or having fullscreen applications (like games) ignore\n"
"your focus settings, and instead using the notification sound\n"
"as an audio cue that your edit has finished."))
        self.checkEditFocusRejectedBeep.setText(_translate("settingsDialog", "Play beep"))
        self.checkEditOpenRejectedBeep.setToolTip(_translate("settingsDialog", "If checked, a notification sound will play if an\n"
"edit finishes but is not automatically opened."))
        self.checkEditOpenRejectedBeep.setText(_translate("settingsDialog", "Play beep if a newly saved edit is not auto-opened"))
        self.groupBox_16.setTitle(_translate("settingsDialog", "File timestamps"))
        self.checkEditCtimeOnNew.setToolTip(_translate("settingsDialog", "If checked, the current media\'s creation time will be\n"
"applied to any new files that are saved. Otherwise,\n"
"the creation time will be set to the time of the edit.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.checkEditCtimeOnNew.setText(_translate("settingsDialog", "Reuse creation time when saving new file"))
        self.checkEditCtimeOnOriginal.setToolTip(_translate("settingsDialog", "If checked, the current media\'s creation time will\n"
"be reused when overwriting itself. Otherwise, the\n"
"creation time will be set to the time of the edit.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.checkEditCtimeOnOriginal.setText(_translate("settingsDialog", "Reuse creation time when replacing original file"))
        self.checkEditMtimeOnNew.setToolTip(_translate("settingsDialog", "If checked, the current media\'s last modified time will\n"
"be applied to any new files that are saved. Otherwise,\n"
"the modified time will be set to the time of the edit."))
        self.checkEditMtimeOnNew.setText(_translate("settingsDialog", "Reuse modified time when saving new file"))
        self.checkEditMtimeOnOriginal.setToolTip(_translate("settingsDialog", "If checked, the current media\'s last modified time will\n"
"be reused when overwriting itself. Otherwise, the last\n"
"modified time will be set to the time of the edit."))
        self.checkEditMtimeOnOriginal.setText(_translate("settingsDialog", "Reuse modified time when replacing original file"))
        self.groupBox_20.setTitle(_translate("settingsDialog", "When replacing different file..."))
        self.groupBox_17.setTitle(_translate("settingsDialog", "Set creation time to..."))
        self.radioEditCtimeConflictUseNow.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate file\n"
"during an edit, the creation time will be set to the time\n"
"of the edit.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.radioEditCtimeConflictUseNow.setText(_translate("settingsDialog", "Now"))
        self.radioEditCtimeConflictUseOriginal.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the creation time will be set to\n"
"the current media\'s creation time.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.radioEditCtimeConflictUseOriginal.setText(_translate("settingsDialog", "Original file"))
        self.radioEditCtimeConflictUseOther.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate file\n"
"during an edit, the creation time will be set to that of\n"
"the file being replaced.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.radioEditCtimeConflictUseOther.setText(_translate("settingsDialog", "Other file"))
        self.radioEditCtimeConflictUseNewest.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the creation time will be set to the\n"
"newest creation time between the current media and\n"
"the file being replaced.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.radioEditCtimeConflictUseNewest.setText(_translate("settingsDialog", "Newest"))
        self.radioEditCtimeConflictUseOldest.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the creation time will be set to the\n"
"oldest creation time between the current media and\n"
"the file being replaced.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.radioEditCtimeConflictUseOldest.setText(_translate("settingsDialog", "Oldest"))
        self.groupBox_18.setTitle(_translate("settingsDialog", "Set modified time to..."))
        self.radioEditMtimeConflictUseNow.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate file\n"
"during an edit, the last modified time will be set to the\n"
"time of the edit."))
        self.radioEditMtimeConflictUseNow.setText(_translate("settingsDialog", "Now"))
        self.radioEditMtimeConflictUseOriginal.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the last modified time will be set\n"
"to the current media\'s last modified time."))
        self.radioEditMtimeConflictUseOriginal.setText(_translate("settingsDialog", "Original file"))
        self.radioEditMtimeConflictUseOther.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate file\n"
"during an edit, the last modified time will be set to that\n"
"of the file being replaced."))
        self.radioEditMtimeConflictUseOther.setText(_translate("settingsDialog", "Other file"))
        self.radioEditMtimeConflictUseNewest.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the last modified time will be set\n"
"to the newest last modified time between the current\n"
"media and the file being replaced."))
        self.radioEditMtimeConflictUseNewest.setText(_translate("settingsDialog", "Newest"))
        self.radioEditMtimeConflictUseOldest.setToolTip(_translate("settingsDialog", "If checked, when replacing an existing but separate\n"
"file during an edit, the last modified time will be set\n"
"to the oldest last modified time between the current\n"
"media and the file being replaced."))
        self.radioEditMtimeConflictUseOldest.setText(_translate("settingsDialog", "Oldest"))
        self.groupBox_19.setTitle(_translate("settingsDialog", "If modified time is older than creation time..."))
        self.checkEditOlderMtimeAlwaysReuse.setToolTip(_translate("settingsDialog", "If checked, and the last modified time of the current\n"
"media is older than its creation time, then the last\n"
"modified time will always be used rather than the\n"
"time of the edit, regardless of the above settings.\n"
"\n"
"Example: If you edit a file with a creation time of 2023\n"
"and a last modified time of 2021, your new file will also\n"
"have a last modified time of 2021.\n"
"\n"
"Note: This has NO effect when replacing different files,\n"
"only when saving new files or replacing the original.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.checkEditOlderMtimeAlwaysReuse.setText(_translate("settingsDialog", "Always reuse modified time"))
        self.checkEditOlderMtimeUseAsCtime.setToolTip(_translate("settingsDialog", "If checked, and the last modified time of the current media is\n"
"older than its creation time, then the creation time of your edit\n"
"will be set to the last modified time.\n"
"\n"
"Example: If you edit a file with a creation time of 2023 and a\n"
"last modified time of 2021, your new file will have a creation\n"
"time of 2021.\n"
"\n"
"Note: When replacing different files, this ONLY applies to\n"
"the original file, and is applied before \"oldest creation time\"\n"
"is evaluated. The file being replaced will not be considered\n"
"or altered prior to the edit.\n"
"\n"
"Note: Creation time and last modified time are not\n"
"swapped - last modified time will remain the same.\n"
"\n"
"Note: Creation times are Windows-only."))
        self.checkEditOlderMtimeUseAsCtime.setText(_translate("settingsDialog", "Set creation time to modified time"))
        self.groupBox_21.setTitle(_translate("settingsDialog", "For concatenation, which times should be used?"))
        self.groupEditCatBoth.setToolTip(_translate("settingsDialog", "If checked, both times will be taken from the same\n"
"file in your concatenation list. Otherwise, the creation\n"
"and modified times will be taken separately."))
        self.groupEditCatBoth.setTitle(_translate("settingsDialog", "Take both times from the..."))
        self.radioEditCatBothFirst.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time from\n"
"the first file in your concatenation list will be used."))
        self.radioEditCatBothFirst.setText(_translate("settingsDialog", "First file"))
        self.radioEditCatBothLast.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time from\n"
"the last file in your concatenation list will be used."))
        self.radioEditCatBothLast.setText(_translate("settingsDialog", "The last file"))
        self.radioEditCatBothOldestCtime.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"oldest creation time will be used."))
        self.radioEditCatBothOldestCtime.setText(_translate("settingsDialog", "File with oldest\n"
"creation time"))
        self.radioEditCatBothNewestCtime.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"newest creation time will be used."))
        self.radioEditCatBothNewestCtime.setText(_translate("settingsDialog", "File with newest\n"
"creation time"))
        self.radioEditCatBothOldestMtime.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"oldest modified time will be used."))
        self.radioEditCatBothOldestMtime.setText(_translate("settingsDialog", "File with oldest\n"
"modified time"))
        self.radioEditCatBothNewestMtime.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"newest modified time will be used."))
        self.radioEditCatBothNewestMtime.setText(_translate("settingsDialog", "File with newest\n"
"modified time"))
        self.radioEditCatBothOldest.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"oldest creation OR modified time will be used.\n"
"Example:\n"
"\n"
"File 1:\n"
"> Created - 2021\n"
"> Modified - 2023\n"
"\n"
"File 2:\n"
"> Created - 2022\n"
"> Modified - 2022\n"
"\n"
"Output:\n"
"> Created - 2021\n"
"> Modified - 2023"))
        self.radioEditCatBothOldest.setText(_translate("settingsDialog", "Oldest overall"))
        self.radioEditCatBothNewest.setToolTip(_translate("settingsDialog", "If checked, the creation time and modified time\n"
"from the file in your concatenation list with the\n"
"newest creation OR modified time will be used.\n"
"Example:\n"
"\n"
"File 1:\n"
"> Created - 2021\n"
"> Modified - 2023\n"
"\n"
"File 2:\n"
"> Created - 2022\n"
"> Modified - 2022\n"
"\n"
"Output:\n"
"> Created - 2021\n"
"> Modified - 2023"))
        self.radioEditCatBothNewest.setText(_translate("settingsDialog", "Newest overall"))
        self.groupBox_24.setTitle(_translate("settingsDialog", "Modified time from..."))
        self.radioEditCatMtimeFirst.setToolTip(_translate("settingsDialog", "If checked, the modified time from the first\n"
"file in your concatenation list will be used."))
        self.radioEditCatMtimeFirst.setText(_translate("settingsDialog", "The first file"))
        self.radioEditCatMtimeLast.setToolTip(_translate("settingsDialog", "If checked, the modified time from the last\n"
"file in your concatenation list will be used."))
        self.radioEditCatMtimeLast.setText(_translate("settingsDialog", "The last file"))
        self.radioEditCatMtimeNewest.setToolTip(_translate("settingsDialog", "If checked, the modified time from the\n"
"file in your concatenation list with the\n"
"newest modified time will be used."))
        self.radioEditCatMtimeNewest.setText(_translate("settingsDialog", "Newest"))
        self.radioEditCatMtimeOldest.setToolTip(_translate("settingsDialog", "If checked, the modified time from the\n"
"file in your concatenation list with the\n"
"oldest modified time will be used."))
        self.radioEditCatMtimeOldest.setText(_translate("settingsDialog", "Oldest"))
        self.label_79.setText(_translate("settingsDialog", "Note: When replacing a file outside your\n"
"concatenation list, these times will be used\n"
"as the \"original file\" for comparisons."))
        self.groupBox_23.setTitle(_translate("settingsDialog", "Creation time from..."))
        self.radioEditCatCtimeFirst.setToolTip(_translate("settingsDialog", "If checked, the creation time from the first\n"
"file in your concatenation list will be used."))
        self.radioEditCatCtimeFirst.setText(_translate("settingsDialog", "The first file"))
        self.radioEditCatCtimeLast.setToolTip(_translate("settingsDialog", "If checked, the creation time from the last\n"
"file in your concatenation list will be used."))
        self.radioEditCatCtimeLast.setText(_translate("settingsDialog", "The last file"))
        self.radioEditCatCtimeNewest.setToolTip(_translate("settingsDialog", "If checked, the creation time from the\n"
"file in your concatenation list with the\n"
"newest creation time will be used."))
        self.radioEditCatCtimeNewest.setText(_translate("settingsDialog", "Newest"))
        self.radioEditCatCtimeOldest.setToolTip(_translate("settingsDialog", "If checked, the creation time from the\n"
"file in your concatenation list with the\n"
"oldest creation time will be used."))
        self.radioEditCatCtimeOldest.setText(_translate("settingsDialog", "Oldest"))
        self.checkEditCatPreferCurrentMedia.setToolTip(_translate("settingsDialog", "If checked, always use the current media\'s creation and\n"
"modified time if present in your concatentation list."))
        self.checkEditCatPreferCurrentMedia.setText(_translate("settingsDialog", "Prefer the current media if present"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabEditing), _translate("settingsDialog", "Editing"))
        self.label_33.setText(_translate("settingsDialog", "Scrollwheel volume"))
        self.spinScrollVolume.setSuffix(_translate("settingsDialog", "%"))
        self.spinScrollVolume.setPrefix(_translate("settingsDialog", "Increment volume by "))
        self.label_81.setToolTip(_translate("settingsDialog", "How far forwards/backwards to jump when scrolling over the progress slider.\n"
"This percentage is scaled to your start/end markers if present."))
        self.label_81.setText(_translate("settingsDialog", "Scrollwheel progress"))
        self.spinScrollProgress.setToolTip(_translate("settingsDialog", "How far forwards/backwards to jump when scrolling over the progress slider.\n"
"This percentage is scaled to your start/end markers if present."))
        self.spinScrollProgress.setSuffix(_translate("settingsDialog", "%"))
        self.spinScrollProgress.setPrefix(_translate("settingsDialog", "Navigate progress by "))
        self.label_69.setToolTip(_translate("settingsDialog", "The action to perform when double-clicking the player."))
        self.label_69.setText(_translate("settingsDialog", "Player double-click"))
        self.comboPlayerDoubleClick.setToolTip(_translate("settingsDialog", "The action to perform when double-clicking the player."))
        self.comboPlayerDoubleClick.setItemText(0, _translate("settingsDialog", "Settings"))
        self.comboPlayerDoubleClick.setItemText(1, _translate("settingsDialog", "Toggle mute"))
        self.comboPlayerDoubleClick.setItemText(2, _translate("settingsDialog", "Toggle fullscreen"))
        self.comboPlayerDoubleClick.setItemText(3, _translate("settingsDialog", "Toggle maximized"))
        self.comboPlayerDoubleClick.setItemText(4, _translate("settingsDialog", "Reset playback speed"))
        self.label_11.setToolTip(_translate("settingsDialog", "The action to perform when middle-clicking the player."))
        self.label_11.setText(_translate("settingsDialog", "Player middle-click"))
        self.comboPlayerMiddleClick.setToolTip(_translate("settingsDialog", "The action to perform when middle-clicking the player."))
        self.comboPlayerMiddleClick.setItemText(0, _translate("settingsDialog", "Settings"))
        self.comboPlayerMiddleClick.setItemText(1, _translate("settingsDialog", "Stop player"))
        self.comboPlayerMiddleClick.setItemText(2, _translate("settingsDialog", "Toggle mute"))
        self.comboPlayerMiddleClick.setItemText(3, _translate("settingsDialog", "Toggle fullscreen"))
        self.comboPlayerMiddleClick.setItemText(4, _translate("settingsDialog", "Toggle maximized"))
        self.comboPlayerMiddleClick.setItemText(5, _translate("settingsDialog", "Reset playback speed"))
        self.checkTrackCycleCantDisable.setToolTip(_translate("settingsDialog", "If checked, using the \"cycle audio/video tracks\" hotkeys\n"
"will loop back around to the first available track once all\n"
"tracks have been cycled through. Otherwise, it will loop\n"
"around to \"disabled\" first."))
        self.checkTrackCycleCantDisable.setText(_translate("settingsDialog", "Do not disable audio/video tracks while cycling"))
        self.checkTrackCycleShowTitle.setToolTip(_translate("settingsDialog", "If checked, using the \"cycle audio/video tracks\"\n"
"hotkeys will display the new track\'s title.\n"
"\n"
"Checked: \"Audio track 2 \'Microphone\' enabled\"\n"
"Unchecked: \"Audio track 2 enabled\""))
        self.checkTrackCycleShowTitle.setText(_translate("settingsDialog", "Display track title while cycling"))
        self.checkNavigationWrap.setToolTip(_translate("settingsDialog", "If checked, navigating forwards or backwards in\n"
"media while paused will wrap around to opposite\n"
"side if you\'re at the start/end of the media.\n"
"\n"
"Example: If you\'re at the end of a video and press ‚ûû\n"
"(default hotkey), you\'ll be placed back at the start."))
        self.checkNavigationWrap.setText(_translate("settingsDialog", "Navigation wraps around progress slider"))
        self.checkNavigationUnpause.setToolTip(_translate("settingsDialog", "If checked, navigating with the arrow keys, J/L, scrubbing, etc. after the media\n"
"has finished will automatically unpause the media and resume playback."))
        self.checkNavigationUnpause.setText(_translate("settingsDialog", "Navigation unpauses media after media has finished"))
        self.checkScrollUpForForwards.setToolTip(_translate("settingsDialog", "If checked, scrolling up over the media\'s progress slider will jump\n"
"forwards through the media, and scrolling down will jump backwards.\n"
"Otherwise scrolling up will go backwards, and down will go forwards."))
        self.checkScrollUpForForwards.setText(_translate("settingsDialog", "Scroll up over progress slider to navigate forwards"))
        self.groupBox_5.setTitle(_translate("settingsDialog", "Number keys behavior"))
        self.label_56.setToolTip(_translate("settingsDialog", "The primary behavior of the number keys,\n"
"which occurs when pressing a number key\n"
"without any modifiers.\n"
"\n"
"Example:\n"
"Jump progress - Pressing 5 jumps to\n"
"the halfway point of the current media.\n"
"\n"
"Play recent file - Pressing 5 plays\n"
"the 5th most recently played file."))
        self.label_56.setText(_translate("settingsDialog", "Primary"))
        self.comboNumKeysPrimary.setToolTip(_translate("settingsDialog", "The primary behavior of the number keys,\n"
"which occurs when pressing a number key\n"
"without any modifiers.\n"
"\n"
"Example:\n"
"Jump progress - Pressing 5 jumps to\n"
"the halfway point of the current media.\n"
"\n"
"Play recent file - Pressing 5 plays\n"
"the 5th most recently played file."))
        self.comboNumKeysPrimary.setItemText(0, _translate("settingsDialog", "N/A"))
        self.comboNumKeysPrimary.setItemText(1, _translate("settingsDialog", "Jump progress"))
        self.comboNumKeysPrimary.setItemText(2, _translate("settingsDialog", "Play recent file"))
        self.label_57.setToolTip(_translate("settingsDialog", "The secondary behavior of the number keys,\n"
"which occurs when pressing a number key\n"
"and Ctrl at the same time.\n"
"\n"
"Example:\n"
"Jump progress - Pressing 5 jumps to\n"
"the halfway point of the current media.\n"
"\n"
"Play recent file - Pressing 5 plays\n"
"the 5th most recently played file."))
        self.label_57.setText(_translate("settingsDialog", "Secondary (Ctrl)"))
        self.comboNumKeysSecondary.setToolTip(_translate("settingsDialog", "The secondary behavior of the number keys,\n"
"which occurs when pressing a number key\n"
"and Ctrl at the same time.\n"
"\n"
"Example:\n"
"Jump progress - Pressing 5 jumps to\n"
"the halfway point of the current media.\n"
"\n"
"Play recent file - Pressing 5 plays\n"
"the 5th most recently played file."))
        self.comboNumKeysSecondary.setItemText(0, _translate("settingsDialog", "N/A"))
        self.comboNumKeysSecondary.setItemText(1, _translate("settingsDialog", "Jump progress"))
        self.comboNumKeysSecondary.setItemText(2, _translate("settingsDialog", "Play recent file"))
        self.groupBox_6.setTitle(_translate("settingsDialog", "Playing recent files with number keys"))
        self.checkNumKeysUpdateRecentFiles.setToolTip(_translate("settingsDialog", "If checked, using the number keys\n"
"to play a recent file will update the\n"
"order of the recent files, moving\n"
"the newly played file to the top."))
        self.checkNumKeysUpdateRecentFiles.setText(_translate("settingsDialog", "Update recent files order"))
        self.checkNumKeysRecentFilesOnLaunch.setToolTip(_translate("settingsDialog", "If checked, pressing a number key without any\n"
"modifiers before your first media file has been\n"
"played will always play a recent file, regardless\n"
"of the current primary behavior."))
        self.checkNumKeysRecentFilesOnLaunch.setText(_translate("settingsDialog", "Number keys always play recent files\n"
"on launch before first media is played"))
        self.checkNumKeys0PlaysLeastRecentFile.setToolTip(_translate("settingsDialog", "If checked, pressing Ctrl+0 will play the least recent file\n"
"available (e.g. if you\'ve played 30 files, Ctrl+0 will play\n"
"file #30). Otherwise, it will play the 10th most recent file."))
        self.checkNumKeys0PlaysLeastRecentFile.setText(_translate("settingsDialog", "0 plays the least recent file instead of file #10"))
        self.checkNumKeys1SkipsActiveFiles.setToolTip(_translate("settingsDialog", "If checked, pressing 1 will play the most recent\n"
"file that ISN\'T currently playing. Normally, if you\n"
"press 1 while watching media, that media will\n"
"simply be replayed as it is the most recent file."))
        self.checkNumKeys1SkipsActiveFiles.setText(_translate("settingsDialog", "1 never plays the current file"))
        self.label_7.setText(_translate("settingsDialog", "Play/Pause"))
        self.pause.setKeySequence(_translate("settingsDialog", "Space"))
        self.pause_.setKeySequence(_translate("settingsDialog", "K"))
        self.label_8.setText(_translate("settingsDialog", "Stop player"))
        self.stop.setKeySequence(_translate("settingsDialog", "Shift+Space"))
        self.stop_.setKeySequence(_translate("settingsDialog", "Shift+S"))
        self.spinNavigation1.setSuffix(_translate("settingsDialog", " second"))
        self.spinNavigation1.setPrefix(_translate("settingsDialog", "+"))
        self.plus1.setKeySequence(_translate("settingsDialog", "Shift+Right"))
        self.labelNavigation1.setText(_translate("settingsDialog", "-2 seconds"))
        self.minus1.setKeySequence(_translate("settingsDialog", "Shift+Left"))
        self.spinNavigation2.setSuffix(_translate("settingsDialog", " seconds"))
        self.spinNavigation2.setPrefix(_translate("settingsDialog", "+"))
        self.plus2.setKeySequence(_translate("settingsDialog", "Right"))
        self.labelNavigation2.setText(_translate("settingsDialog", "-5 seconds"))
        self.minus2.setKeySequence(_translate("settingsDialog", "Left"))
        self.spinNavigation3.setSuffix(_translate("settingsDialog", " seconds"))
        self.spinNavigation3.setPrefix(_translate("settingsDialog", "+"))
        self.plus3.setKeySequence(_translate("settingsDialog", "L"))
        self.labelNavigation3.setText(_translate("settingsDialog", "-10 seconds"))
        self.minus3.setKeySequence(_translate("settingsDialog", "J"))
        self.spinNavigation4.setSuffix(_translate("settingsDialog", " seconds"))
        self.spinNavigation4.setPrefix(_translate("settingsDialog", "+"))
        self.plus4.setKeySequence(_translate("settingsDialog", "Shift+L"))
        self.labelNavigation4.setText(_translate("settingsDialog", "-30 seconds"))
        self.minus4.setKeySequence(_translate("settingsDialog", "Shift+J"))
        self.label_12.setText(_translate("settingsDialog", "+1 frame"))
        self.plusframe.setKeySequence(_translate("settingsDialog", "."))
        self.label_13.setText(_translate("settingsDialog", "-1 frame"))
        self.minusframe.setKeySequence(_translate("settingsDialog", ","))
        self.label_18.setText(_translate("settingsDialog", "+0.05 speed"))
        self.plusspeed.setKeySequence(_translate("settingsDialog", "]"))
        self.plusspeed_.setKeySequence(_translate("settingsDialog", ">"))
        self.label_19.setText(_translate("settingsDialog", "-0.05 speed"))
        self.minusspeed.setKeySequence(_translate("settingsDialog", "["))
        self.minusspeed_.setKeySequence(_translate("settingsDialog", "<"))
        self.spinVolume1.setSuffix(_translate("settingsDialog", " volume"))
        self.spinVolume1.setPrefix(_translate("settingsDialog", "+"))
        self.plusvolume1.setKeySequence(_translate("settingsDialog", "Up"))
        self.labelVolume1.setText(_translate("settingsDialog", "-5 volume"))
        self.minusvolume1.setKeySequence(_translate("settingsDialog", "Down"))
        self.spinVolume2.setSuffix(_translate("settingsDialog", " volume"))
        self.spinVolume2.setPrefix(_translate("settingsDialog", "+"))
        self.plusvolume2.setKeySequence(_translate("settingsDialog", "Shift+Up"))
        self.labelVolume2.setText(_translate("settingsDialog", "-1 volume"))
        self.minusvolume2.setKeySequence(_translate("settingsDialog", "Shift+Down"))
        self.label_22.setText(_translate("settingsDialog", "+0.5x volume boost"))
        self.plusvolumeboost.setKeySequence(_translate("settingsDialog", "Ctrl+Up"))
        self.label_23.setText(_translate("settingsDialog", "-0.5x volume boost"))
        self.minusvolumeboost.setKeySequence(_translate("settingsDialog", "Ctrl+Down"))
        self.label_16.setText(_translate("settingsDialog", "Mute"))
        self.mute.setKeySequence(_translate("settingsDialog", "M"))
        self.label_17.setText(_translate("settingsDialog", "Fullscreen"))
        self.fullscreen.setKeySequence(_translate("settingsDialog", "F"))
        self.label_73.setText(_translate("settingsDialog", "Maximize"))
        self.maximize.setKeySequence(_translate("settingsDialog", "Shift+F"))
        self.label_24.setText(_translate("settingsDialog", "Crop"))
        self.crop.setKeySequence(_translate("settingsDialog", "C"))
        self.label_32.setText(_translate("settingsDialog", "Loop"))
        self.loop.setKeySequence(_translate("settingsDialog", "Ctrl+L"))
        self.label_20.setText(_translate("settingsDialog", "Next file (any)"))
        self.nextmedia.setKeySequence(_translate("settingsDialog", "Ctrl+Right"))
        self.label_78.setToolTip(_translate("settingsDialog", "Play the next valid media file in this folder with the same\n"
"mime type as the current media (video, audio, or image)."))
        self.label_78.setText(_translate("settingsDialog", "Next file (mime)"))
        self.nextmediamime.setKeySequence(_translate("settingsDialog", "Ctrl+Shift+Right"))
        self.label_21.setText(_translate("settingsDialog", "Previous file (any)"))
        self.previousmedia.setKeySequence(_translate("settingsDialog", "Ctrl+Left"))
        self.label_80.setToolTip(_translate("settingsDialog", "Play the previous valid media file in this folder with the same\n"
"mime type as the current media (video, audio, or image)."))
        self.label_80.setText(_translate("settingsDialog", "Previous file (mime)"))
        self.previousmediamime.setKeySequence(_translate("settingsDialog", "Ctrl+Shift+Left"))
        self.label_74.setText(_translate("settingsDialog", "Random file (any)"))
        self.randommedia.setKeySequence(_translate("settingsDialog", "Ctrl+R"))
        self.label_77.setToolTip(_translate("settingsDialog", "Play a random media file in this folder with the same\n"
"mime type as the current media (video, audio, or image)."))
        self.label_77.setText(_translate("settingsDialog", "Random file (mime)"))
        self.randommediamime.setKeySequence(_translate("settingsDialog", "Ctrl+Shift+R"))
        self.label_59.setText(_translate("settingsDialog", "Newer recent file"))
        self.forward.setKeySequence(_translate("settingsDialog", "Alt+Right"))
        self.label_60.setText(_translate("settingsDialog", "Older recent file"))
        self.back.setKeySequence(_translate("settingsDialog", "Alt+Left"))
        self.label_25.setText(_translate("settingsDialog", "+50ms subtitle delay"))
        self.plussubtitledelay.setKeySequence(_translate("settingsDialog", "H"))
        self.plussubtitledelay_.setKeySequence(_translate("settingsDialog", "Alt+S"))
        self.label_26.setText(_translate("settingsDialog", "-50ms subtitle delay"))
        self.minussubtitledelay.setKeySequence(_translate("settingsDialog", "G"))
        self.minussubtitledelay_.setKeySequence(_translate("settingsDialog", "Shift+S"))
        self.label_27.setText(_translate("settingsDialog", "Cycle subtitle tracks"))
        self.cyclesubtitles.setKeySequence(_translate("settingsDialog", "B"))
        self.cyclesubtitles_.setKeySequence(_translate("settingsDialog", "S"))
        self.label_66.setText(_translate("settingsDialog", "Cycle audio tracks"))
        self.cycleaudio_.setKeySequence(_translate("settingsDialog", "Shift+B"))
        self.cycleaudio.setKeySequence(_translate("settingsDialog", "A"))
        self.label_67.setText(_translate("settingsDialog", "Cycle video tracks"))
        self.cyclevideo.setKeySequence(_translate("settingsDialog", "Ctrl+B"))
        self.cyclevideo_.setKeySequence(_translate("settingsDialog", "V"))
        self.label_28.setText(_translate("settingsDialog", "Mark for deletion"))
        self.markdeleted.setKeySequence(_translate("settingsDialog", "Ctrl+D"))
        self.label_29.setText(_translate("settingsDialog", "Delete immediately"))
        self.deleteimmediately.setKeySequence(_translate("settingsDialog", "Ctrl+Del"))
        self.label_30.setText(_translate("settingsDialog", "Snapshot"))
        self.snapshot.setKeySequence(_translate("settingsDialog", "Shift+F12"))
        self.label_31.setText(_translate("settingsDialog", "Quick snapshot"))
        self.quicksnapshot.setKeySequence(_translate("settingsDialog", "F12"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabHotkeys), _translate("settingsDialog", "&Hotkeys"))
        self.labelCurrentVersion.setText(_translate("settingsDialog", "Current version: 0.0.0"))
        self.labelLastCheck.setText(_translate("settingsDialog", "Last check: never"))
        self.buttonCheckForUpdates.setText(_translate("settingsDialog", "Check for updates"))
        self.spinUpdateFrequency.setSpecialValueText(_translate("settingsDialog", "Once every launch"))
        self.spinUpdateFrequency.setSuffix(_translate("settingsDialog", " day(s)"))
        self.spinUpdateFrequency.setPrefix(_translate("settingsDialog", "Once every "))
        self.checkAutoUpdateCheck.setText(_translate("settingsDialog", "Auto-check for updates"))
        self.labelGithub.setText(_translate("settingsDialog", "You can manually check the latest releases on Github <a href=\"?url\">here</a>."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tabUpdates), _translate("settingsDialog", "&Updates"))
from widgets import QKeySequenceFlexibleEdit


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    settingsDialog = QtWidgets.QDialog()
    ui = Ui_settingsDialog()
    ui.setupUi(settingsDialog)
    settingsDialog.show()
    sys.exit(app.exec_())
