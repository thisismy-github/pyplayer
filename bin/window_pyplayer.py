# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'bin\window_pyplayer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(757, 551)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.vlc = QVideoPlayer(self.centralwidget)
        self.vlc.setMinimumSize(QtCore.QSize(254, 0))
        self.vlc.setAcceptDrops(True)
        self.vlc.setObjectName("vlc")
        self.gridLayout.addWidget(self.vlc, 0, 0, 1, 4)
        self.gridLayout.setColumnStretch(0, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 757, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuRecent = QtWidgets.QMenu(self.menuFile)
        self.menuRecent.setObjectName("menuRecent")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuAudio = QtWidgets.QMenu(self.menubar)
        self.menuAudio.setObjectName("menuAudio")
        self.menuAudioTracks = QtWidgets.QMenu(self.menuAudio)
        self.menuAudioTracks.setObjectName("menuAudioTracks")
        self.menuVideo = QtWidgets.QMenu(self.menubar)
        self.menuVideo.setObjectName("menuVideo")
        self.menuConcatenate = QtWidgets.QMenu(self.menuVideo)
        self.menuConcatenate.setObjectName("menuConcatenate")
        self.menuRotate = QtWidgets.QMenu(self.menuVideo)
        self.menuRotate.setObjectName("menuRotate")
        self.menuSubtitles = QtWidgets.QMenu(self.menuVideo)
        self.menuSubtitles.setObjectName("menuSubtitles")
        self.menuVideoTracks = QtWidgets.QMenu(self.menuVideo)
        self.menuVideoTracks.setObjectName("menuVideoTracks")
        self.menuTrimMode = QtWidgets.QMenu(self.menuVideo)
        self.menuTrimMode.setToolTipsVisible(True)
        self.menuTrimMode.setObjectName("menuTrimMode")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setMaximumSize(QtCore.QSize(16777215, 18))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(7)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockControls = QDockWidgetPassthrough(MainWindow)
        self.dockControls.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable)
        self.dockControls.setAllowedAreas(QtCore.Qt.NoDockWidgetArea)
        self.dockControls.setObjectName("dockControls")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_3.setContentsMargins(7, 0, 7, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frameProgress = QtWidgets.QFrame(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(255)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameProgress.sizePolicy().hasHeightForWidth())
        self.frameProgress.setSizePolicy(sizePolicy)
        self.frameProgress.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameProgress.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameProgress.setObjectName("frameProgress")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frameProgress)
        self.horizontalLayout_3.setContentsMargins(0, 1, 0, 1)
        self.horizontalLayout_3.setSpacing(3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.lineCurrentTime = QtWidgets.QLineEdit(self.frameProgress)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineCurrentTime.sizePolicy().hasHeightForWidth())
        self.lineCurrentTime.setSizePolicy(sizePolicy)
        self.lineCurrentTime.setMaximumSize(QtCore.QSize(48, 16777215))
        self.lineCurrentTime.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.lineCurrentTime.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.lineCurrentTime.setText("--:--")
        self.lineCurrentTime.setMaxLength(12)
        self.lineCurrentTime.setObjectName("lineCurrentTime")
        self.horizontalLayout_3.addWidget(self.lineCurrentTime)
        self.sliderProgress = QVideoSlider(self.frameProgress)
        self.sliderProgress.setEnabled(False)
        self.sliderProgress.setFocusPolicy(QtCore.Qt.NoFocus)
        self.sliderProgress.setToolTipDuration(2500)
        self.sliderProgress.setMaximum(999)
        self.sliderProgress.setPageStep(50)
        self.sliderProgress.setOrientation(QtCore.Qt.Horizontal)
        self.sliderProgress.setInvertedControls(True)
        self.sliderProgress.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.sliderProgress.setObjectName("sliderProgress")
        self.horizontalLayout_3.addWidget(self.sliderProgress)
        self.labelMaxTime = QtWidgets.QLabel(self.frameProgress)
        self.labelMaxTime.setMinimumSize(QtCore.QSize(48, 0))
        self.labelMaxTime.setText("--:--")
        self.labelMaxTime.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelMaxTime.setObjectName("labelMaxTime")
        self.horizontalLayout_3.addWidget(self.labelMaxTime)
        self.verticalLayout_3.addWidget(self.frameProgress)
        self.frameAdvancedControls = QDraggableWindowFrame(self.dockWidgetContents)
        self.frameAdvancedControls.setMinimumSize(QtCore.QSize(40, 0))
        self.frameAdvancedControls.setMaximumSize(QtCore.QSize(16777215, 44))
        self.frameAdvancedControls.setObjectName("frameAdvancedControls")
        self.advanced_layout = QtWidgets.QGridLayout(self.frameAdvancedControls)
        self.advanced_layout.setContentsMargins(0, 0, 0, 0)
        self.advanced_layout.setObjectName("advanced_layout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.buttonTrimStart = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonTrimStart.setMinimumSize(QtCore.QSize(44, 18))
        self.buttonTrimStart.setMaximumSize(QtCore.QSize(95, 16777215))
        self.buttonTrimStart.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonTrimStart.setText("Start")
        self.buttonTrimStart.setCheckable(True)
        self.buttonTrimStart.setObjectName("buttonTrimStart")
        self.verticalLayout.addWidget(self.buttonTrimStart)
        self.buttonTrimEnd = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonTrimEnd.setMinimumSize(QtCore.QSize(0, 18))
        self.buttonTrimEnd.setMaximumSize(QtCore.QSize(95, 16777215))
        self.buttonTrimEnd.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonTrimEnd.setText("End")
        self.buttonTrimEnd.setCheckable(True)
        self.buttonTrimEnd.setObjectName("buttonTrimEnd")
        self.verticalLayout.addWidget(self.buttonTrimEnd)
        self.advanced_layout.addLayout(self.verticalLayout, 0, 1, 1, 1)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setHorizontalSpacing(6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setSpacing(2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.spinHour = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.spinHour.setMinimumSize(QtCore.QSize(26, 0))
        self.spinHour.setMaximumSize(QtCore.QSize(33, 16777215))
        self.spinHour.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.spinHour.setObjectName("spinHour")
        self.horizontalLayout_2.addWidget(self.spinHour)
        self.spinMinute = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.spinMinute.setMinimumSize(QtCore.QSize(33, 0))
        self.spinMinute.setMaximumSize(QtCore.QSize(33, 16777215))
        self.spinMinute.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.spinMinute.setMaximum(59)
        self.spinMinute.setObjectName("spinMinute")
        self.horizontalLayout_2.addWidget(self.spinMinute)
        self.spinSecond = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.spinSecond.setMinimumSize(QtCore.QSize(33, 0))
        self.spinSecond.setMaximumSize(QtCore.QSize(33, 16777215))
        self.spinSecond.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.spinSecond.setMaximum(59)
        self.spinSecond.setObjectName("spinSecond")
        self.horizontalLayout_2.addWidget(self.spinSecond)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.spinFrame = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.spinFrame.setMinimumSize(QtCore.QSize(98, 0))
        self.spinFrame.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.spinFrame.setWrapping(True)
        self.spinFrame.setPrefix("Frame: ")
        self.spinFrame.setMaximum(0)
        self.spinFrame.setObjectName("spinFrame")
        self.gridLayout_2.addWidget(self.spinFrame, 2, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 1, 1, 1)
        self.buttonPause = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonPause.setMinimumSize(QtCore.QSize(28, 0))
        self.buttonPause.setMaximumSize(QtCore.QSize(28, 28))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.buttonPause.setFont(font)
        self.buttonPause.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonPause.setText("𝗜𝗜")
        self.buttonPause.setObjectName("buttonPause")
        self.gridLayout_3.addWidget(self.buttonPause, 0, 0, 1, 1)
        self.advanced_layout.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        self.advancedControlsLine = QtWidgets.QFrame(self.frameAdvancedControls)
        self.advancedControlsLine.setFrameShape(QtWidgets.QFrame.VLine)
        self.advancedControlsLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.advancedControlsLine.setObjectName("advancedControlsLine")
        self.advanced_layout.addWidget(self.advancedControlsLine, 0, 2, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.advanced_layout.addItem(spacerItem, 0, 4, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setContentsMargins(-1, -1, -1, 1)
        self.gridLayout_6.setVerticalSpacing(1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.buttonPrevious = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonPrevious.setMinimumSize(QtCore.QSize(20, 18))
        self.buttonPrevious.setMaximumSize(QtCore.QSize(20, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.buttonPrevious.setFont(font)
        self.buttonPrevious.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonPrevious.setText("«")
        self.buttonPrevious.setObjectName("buttonPrevious")
        self.gridLayout_6.addWidget(self.buttonPrevious, 1, 0, 1, 1)
        self.lineOutput = QLineEditPassthrough(self.frameAdvancedControls)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineOutput.sizePolicy().hasHeightForWidth())
        self.lineOutput.setSizePolicy(sizePolicy)
        self.lineOutput.setMinimumSize(QtCore.QSize(120, 0))
        self.lineOutput.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.lineOutput.setMaxLength(155)
        self.lineOutput.setPlaceholderText("Output name")
        self.lineOutput.setObjectName("lineOutput")
        self.gridLayout_6.addWidget(self.lineOutput, 1, 1, 1, 2)
        self.hlayoutQuickButtons = QtWidgets.QHBoxLayout()
        self.hlayoutQuickButtons.setContentsMargins(-1, 0, -1, 0)
        self.hlayoutQuickButtons.setSpacing(6)
        self.hlayoutQuickButtons.setObjectName("hlayoutQuickButtons")
        self.buttonOpenMediaLocation = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonOpenMediaLocation.setMinimumSize(QtCore.QSize(22, 0))
        self.buttonOpenMediaLocation.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.buttonOpenMediaLocation.setFont(font)
        self.buttonOpenMediaLocation.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonOpenMediaLocation.setText("📂")
        self.buttonOpenMediaLocation.setObjectName("buttonOpenMediaLocation")
        self.hlayoutQuickButtons.addWidget(self.buttonOpenMediaLocation)
        self.buttonMarkDeleted = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonMarkDeleted.setMinimumSize(QtCore.QSize(22, 0))
        self.buttonMarkDeleted.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.buttonMarkDeleted.setFont(font)
        self.buttonMarkDeleted.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonMarkDeleted.setText("❌")
        self.buttonMarkDeleted.setCheckable(True)
        self.buttonMarkDeleted.setObjectName("buttonMarkDeleted")
        self.hlayoutQuickButtons.addWidget(self.buttonMarkDeleted)
        self.buttonSnapshot = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonSnapshot.setMinimumSize(QtCore.QSize(22, 0))
        self.buttonSnapshot.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.buttonSnapshot.setFont(font)
        self.buttonSnapshot.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonSnapshot.setText("📷")
        self.buttonSnapshot.setCheckable(False)
        self.buttonSnapshot.setObjectName("buttonSnapshot")
        self.hlayoutQuickButtons.addWidget(self.buttonSnapshot)
        self.buttonLoop = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonLoop.setMinimumSize(QtCore.QSize(22, 0))
        self.buttonLoop.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.buttonLoop.setFont(font)
        self.buttonLoop.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonLoop.setText("")
        self.buttonLoop.setCheckable(True)
        self.buttonLoop.setObjectName("buttonLoop")
        self.hlayoutQuickButtons.addWidget(self.buttonLoop)
        self.buttonAutoplay = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonAutoplay.setMinimumSize(QtCore.QSize(22, 0))
        self.buttonAutoplay.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.buttonAutoplay.setFont(font)
        self.buttonAutoplay.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonAutoplay.setText("")
        self.buttonAutoplay.setCheckable(True)
        self.buttonAutoplay.setObjectName("buttonAutoplay")
        self.hlayoutQuickButtons.addWidget(self.buttonAutoplay)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hlayoutQuickButtons.addItem(spacerItem1)
        self.gridLayout_6.addLayout(self.hlayoutQuickButtons, 0, 0, 1, 4)
        self.buttonNext = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.buttonNext.setMinimumSize(QtCore.QSize(20, 18))
        self.buttonNext.setMaximumSize(QtCore.QSize(20, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.buttonNext.setFont(font)
        self.buttonNext.setFocusPolicy(QtCore.Qt.NoFocus)
        self.buttonNext.setText("»")
        self.buttonNext.setObjectName("buttonNext")
        self.gridLayout_6.addWidget(self.buttonNext, 1, 3, 1, 1)
        self.advanced_layout.addLayout(self.gridLayout_6, 0, 3, 1, 1)
        self.frameQuickChecks = QtWidgets.QFrame(self.frameAdvancedControls)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameQuickChecks.sizePolicy().hasHeightForWidth())
        self.frameQuickChecks.setSizePolicy(sizePolicy)
        self.frameQuickChecks.setMaximumSize(QtCore.QSize(16777215, 38))
        self.frameQuickChecks.setObjectName("frameQuickChecks")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frameQuickChecks)
        self.verticalLayout_2.setContentsMargins(-1, 0, -1, 0)
        self.verticalLayout_2.setSpacing(2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem2)
        self.checkDeleteOriginal = QtWidgets.QCheckBox(self.frameQuickChecks)
        self.checkDeleteOriginal.setMaximumSize(QtCore.QSize(16777215, 13))
        self.checkDeleteOriginal.setFocusPolicy(QtCore.Qt.NoFocus)
        self.checkDeleteOriginal.setToolTip("Tristate:\n"
"\n"
"Partially checked - videos will be marked\n"
"for deletion after saving an edit.\n"
"\n"
"Fully checked - videos will be immediately\n"
"deleted after successfully saving an edit.\n"
"\n"
"Note: File deletion/recycling\n"
"is dependent on your settings.")
        self.checkDeleteOriginal.setText("Delete originals")
        self.checkDeleteOriginal.setTristate(True)
        self.checkDeleteOriginal.setObjectName("checkDeleteOriginal")
        self.verticalLayout_2.addWidget(self.checkDeleteOriginal)
        self.checkSkipMarked = QtWidgets.QCheckBox(self.frameQuickChecks)
        self.checkSkipMarked.setMinimumSize(QtCore.QSize(103, 0))
        self.checkSkipMarked.setMaximumSize(QtCore.QSize(16777215, 13))
        self.checkSkipMarked.setFocusPolicy(QtCore.Qt.NoFocus)
        self.checkSkipMarked.setToolTip("If checked, using the next/previous video buttons will\n"
"skip over files that have been marked for deletion.")
        self.checkSkipMarked.setText("Skip marked files")
        self.checkSkipMarked.setObjectName("checkSkipMarked")
        self.verticalLayout_2.addWidget(self.checkSkipMarked)
        self.advanced_layout.addWidget(self.frameQuickChecks, 0, 5, 1, 2)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        spacerItem3 = QtWidgets.QSpacerItem(20, 4, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_4.addItem(spacerItem3)
        self.sliderVolume = QtWidgets.QSlider(self.frameAdvancedControls)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sliderVolume.sizePolicy().hasHeightForWidth())
        self.sliderVolume.setSizePolicy(sizePolicy)
        self.sliderVolume.setMinimumSize(QtCore.QSize(22, 0))
        self.sliderVolume.setFocusPolicy(QtCore.Qt.NoFocus)
        self.sliderVolume.setToolTip("100%")
        self.sliderVolume.setMaximum(100)
        self.sliderVolume.setSingleStep(5)
        self.sliderVolume.setProperty("value", 50)
        self.sliderVolume.setOrientation(QtCore.Qt.Vertical)
        self.sliderVolume.setObjectName("sliderVolume")
        self.verticalLayout_4.addWidget(self.sliderVolume)
        self.advanced_layout.addLayout(self.verticalLayout_4, 0, 10, 1, 1)
        self.verticalLayout_3.addWidget(self.frameAdvancedControls)
        self.dockControls.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockControls)
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setMenuRole(QtWidgets.QAction.QuitRole)
        self.actionExit.setObjectName("actionExit")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setMenuRole(QtWidgets.QAction.PreferencesRole)
        self.actionSettings.setObjectName("actionSettings")
        self.actionRemoveVideo = QtWidgets.QAction(MainWindow)
        self.actionRemoveVideo.setObjectName("actionRemoveVideo")
        self.actionRemoveAudio = QtWidgets.QAction(MainWindow)
        self.actionRemoveAudio.setObjectName("actionRemoveAudio")
        self.actionReplaceAudio = QtWidgets.QAction(MainWindow)
        self.actionReplaceAudio.setObjectName("actionReplaceAudio")
        self.actionAmplifyVolume = QtWidgets.QAction(MainWindow)
        self.actionAmplifyVolume.setObjectName("actionAmplifyVolume")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setMenuRole(QtWidgets.QAction.AboutRole)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCatAny = QtWidgets.QAction(MainWindow)
        self.actionCatAny.setObjectName("actionCatAny")
        self.actionCatBefore = QtWidgets.QAction(MainWindow)
        self.actionCatBefore.setObjectName("actionCatBefore")
        self.actionCatAfter = QtWidgets.QAction(MainWindow)
        self.actionCatAfter.setObjectName("actionCatAfter")
        self.actionOpenMediaLocation = QtWidgets.QAction(MainWindow)
        self.actionOpenMediaLocation.setObjectName("actionOpenMediaLocation")
        self.actionCatNone = QtWidgets.QAction(MainWindow)
        self.actionCatNone.setObjectName("actionCatNone")
        self.actionAddAudioTrack = QtWidgets.QAction(MainWindow)
        self.actionAddAudioTrack.setObjectName("actionAddAudioTrack")
        self.actionCrop = QtWidgets.QAction(MainWindow)
        self.actionCrop.setCheckable(True)
        self.actionCrop.setObjectName("actionCrop")
        self.actionMarkDeleted = QtWidgets.QAction(MainWindow)
        self.actionMarkDeleted.setCheckable(True)
        self.actionMarkDeleted.setIconText("Mark media for deletion")
        self.actionMarkDeleted.setObjectName("actionMarkDeleted")
        self.actionShowDeletePrompt = QtWidgets.QAction(MainWindow)
        self.actionShowDeletePrompt.setObjectName("actionShowDeletePrompt")
        self.actionViewLog = QtWidgets.QAction(MainWindow)
        self.actionViewLog.setObjectName("actionViewLog")
        self.actionShowStatusBar = QtWidgets.QAction(MainWindow)
        self.actionShowStatusBar.setCheckable(True)
        self.actionShowStatusBar.setChecked(True)
        self.actionShowStatusBar.setObjectName("actionShowStatusBar")
        self.actionShowMenuBar = QtWidgets.QAction(MainWindow)
        self.actionShowMenuBar.setCheckable(True)
        self.actionShowMenuBar.setChecked(True)
        self.actionShowMenuBar.setObjectName("actionShowMenuBar")
        self.actionShowAdvancedControls = QtWidgets.QAction(MainWindow)
        self.actionShowAdvancedControls.setCheckable(True)
        self.actionShowAdvancedControls.setChecked(True)
        self.actionShowAdvancedControls.setObjectName("actionShowAdvancedControls")
        self.actionFullscreen = QtWidgets.QAction(MainWindow)
        self.actionFullscreen.setCheckable(True)
        self.actionFullscreen.setObjectName("actionFullscreen")
        self.actionShowProgressBar = QtWidgets.QAction(MainWindow)
        self.actionShowProgressBar.setCheckable(True)
        self.actionShowProgressBar.setChecked(True)
        self.actionShowProgressBar.setObjectName("actionShowProgressBar")
        self.actionSnapshot = QtWidgets.QAction(MainWindow)
        self.actionSnapshot.setObjectName("actionSnapshot")
        self.actionQuickSnapshot = QtWidgets.QAction(MainWindow)
        self.actionQuickSnapshot.setObjectName("actionQuickSnapshot")
        self.actionDeleteImmediately = QtWidgets.QAction(MainWindow)
        self.actionDeleteImmediately.setObjectName("actionDeleteImmediately")
        self.actionLoop = QtWidgets.QAction(MainWindow)
        self.actionLoop.setCheckable(True)
        self.actionLoop.setObjectName("actionLoop")
        self.actionRotate90 = QtWidgets.QAction(MainWindow)
        self.actionRotate90.setObjectName("actionRotate90")
        self.actionRotate180 = QtWidgets.QAction(MainWindow)
        self.actionRotate180.setObjectName("actionRotate180")
        self.actionRotate270 = QtWidgets.QAction(MainWindow)
        self.actionRotate270.setObjectName("actionRotate270")
        self.actionFlipHorizontally = QtWidgets.QAction(MainWindow)
        self.actionFlipHorizontally.setObjectName("actionFlipHorizontally")
        self.actionFlipVertically = QtWidgets.QAction(MainWindow)
        self.actionFlipVertically.setObjectName("actionFlipVertically")
        self.actionAddSubtitleFile = QtWidgets.QAction(MainWindow)
        self.actionAddSubtitleFile.setObjectName("actionAddSubtitleFile")
        self.actionwtf = QtWidgets.QAction(MainWindow)
        self.actionwtf.setEnabled(False)
        self.actionwtf.setObjectName("actionwtf")
        self.actionStop = QtWidgets.QAction(MainWindow)
        self.actionStop.setObjectName("actionStop")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionViewInstallFolder = QtWidgets.QAction(MainWindow)
        self.actionViewInstallFolder.setObjectName("actionViewInstallFolder")
        self.actionFadeVideo = QtWidgets.QAction(MainWindow)
        self.actionFadeVideo.setCheckable(True)
        self.actionFadeVideo.setObjectName("actionFadeVideo")
        self.actionFadeAudio = QtWidgets.QAction(MainWindow)
        self.actionFadeAudio.setCheckable(True)
        self.actionFadeAudio.setObjectName("actionFadeAudio")
        self.actionFadeBoth = QtWidgets.QAction(MainWindow)
        self.actionFadeBoth.setCheckable(True)
        self.actionFadeBoth.setObjectName("actionFadeBoth")
        self.actionTrimAuto = QtWidgets.QAction(MainWindow)
        self.actionTrimAuto.setCheckable(True)
        self.actionTrimAuto.setObjectName("actionTrimAuto")
        self.actionResize = QtWidgets.QAction(MainWindow)
        self.actionResize.setObjectName("actionResize")
        self.actionCheckForUpdates = QtWidgets.QAction(MainWindow)
        self.actionCheckForUpdates.setObjectName("actionCheckForUpdates")
        self.actionAutoplay = QtWidgets.QAction(MainWindow)
        self.actionAutoplay.setCheckable(True)
        self.actionAutoplay.setObjectName("actionAutoplay")
        self.actionTrimPrecise = QtWidgets.QAction(MainWindow)
        self.actionTrimPrecise.setCheckable(True)
        self.actionTrimPrecise.setChecked(True)
        self.actionTrimPrecise.setObjectName("actionTrimPrecise")
        self.actionClearMarked = QtWidgets.QAction(MainWindow)
        self.actionClearMarked.setObjectName("actionClearMarked")
        self.actionClearRecent = QtWidgets.QAction(MainWindow)
        self.actionClearRecent.setObjectName("actionClearRecent")
        self.menuRecent.addAction(self.actionClearRecent)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuRecent.menuAction())
        self.menuFile.addAction(self.actionOpenMediaLocation)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionStop)
        self.menuFile.addAction(self.actionMinimize)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionSettings)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionLoop)
        self.menuEdit.addAction(self.actionAutoplay)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionMarkDeleted)
        self.menuEdit.addAction(self.actionClearMarked)
        self.menuEdit.addAction(self.actionShowDeletePrompt)
        self.menuEdit.addAction(self.actionDeleteImmediately)
        self.menuHelp.addAction(self.actionCheckForUpdates)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionViewLog)
        self.menuHelp.addAction(self.actionViewInstallFolder)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAboutQt)
        self.menuHelp.addAction(self.actionAbout)
        self.menuAudio.addAction(self.menuAudioTracks.menuAction())
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionAmplifyVolume)
        self.menuAudio.addAction(self.actionReplaceAudio)
        self.menuAudio.addAction(self.actionAddAudioTrack)
        self.menuAudio.addAction(self.actionRemoveAudio)
        self.menuConcatenate.addAction(self.actionCatBefore)
        self.menuConcatenate.addAction(self.actionCatAfter)
        self.menuConcatenate.addSeparator()
        self.menuConcatenate.addAction(self.actionCatAny)
        self.menuConcatenate.addAction(self.actionCatNone)
        self.menuRotate.addAction(self.actionRotate90)
        self.menuRotate.addAction(self.actionRotate180)
        self.menuRotate.addAction(self.actionRotate270)
        self.menuRotate.addAction(self.actionFlipVertically)
        self.menuRotate.addAction(self.actionFlipHorizontally)
        self.menuSubtitles.addAction(self.actionAddSubtitleFile)
        self.menuTrimMode.addAction(self.actionTrimAuto)
        self.menuTrimMode.addAction(self.actionTrimPrecise)
        self.menuTrimMode.addSeparator()
        self.menuTrimMode.addAction(self.actionFadeBoth)
        self.menuTrimMode.addAction(self.actionFadeVideo)
        self.menuTrimMode.addAction(self.actionFadeAudio)
        self.menuVideo.addAction(self.menuSubtitles.menuAction())
        self.menuVideo.addAction(self.menuVideoTracks.menuAction())
        self.menuVideo.addSeparator()
        self.menuVideo.addAction(self.actionSnapshot)
        self.menuVideo.addAction(self.actionQuickSnapshot)
        self.menuVideo.addSeparator()
        self.menuVideo.addAction(self.menuConcatenate.menuAction())
        self.menuVideo.addAction(self.menuRotate.menuAction())
        self.menuVideo.addAction(self.menuTrimMode.menuAction())
        self.menuVideo.addAction(self.actionCrop)
        self.menuVideo.addAction(self.actionRemoveVideo)
        self.menuVideo.addAction(self.actionResize)
        self.menuWindow.addAction(self.actionFullscreen)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.actionShowMenuBar)
        self.menuWindow.addAction(self.actionShowStatusBar)
        self.menuWindow.addAction(self.actionShowProgressBar)
        self.menuWindow.addAction(self.actionShowAdvancedControls)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuVideo.menuAction())
        self.menubar.addAction(self.menuAudio.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.buttonPause, self.buttonTrimStart)
        MainWindow.setTabOrder(self.buttonTrimStart, self.buttonTrimEnd)
        MainWindow.setTabOrder(self.buttonTrimEnd, self.buttonPrevious)
        MainWindow.setTabOrder(self.buttonPrevious, self.buttonNext)
        MainWindow.setTabOrder(self.buttonNext, self.lineOutput)
        MainWindow.setTabOrder(self.lineOutput, self.spinHour)
        MainWindow.setTabOrder(self.spinHour, self.spinMinute)
        MainWindow.setTabOrder(self.spinMinute, self.spinSecond)
        MainWindow.setTabOrder(self.spinSecond, self.spinFrame)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PyPlayer"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuRecent.setTitle(_translate("MainWindow", "&Recent files..."))
        self.menuEdit.setTitle(_translate("MainWindow", "&Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "&Help"))
        self.menuAudio.setTitle(_translate("MainWindow", "&Audio"))
        self.menuAudioTracks.setTitle(_translate("MainWindow", "Audio &Tracks"))
        self.menuVideo.setTitle(_translate("MainWindow", "&Video"))
        self.menuConcatenate.setTitle(_translate("MainWindow", "C&oncatenate"))
        self.menuRotate.setTitle(_translate("MainWindow", "Rotate/&Flip"))
        self.menuSubtitles.setTitle(_translate("MainWindow", "Su&btitle Tracks"))
        self.menuVideoTracks.setTitle(_translate("MainWindow", "&Video Tracks"))
        self.menuTrimMode.setTitle(_translate("MainWindow", "&Trim/Fade"))
        self.menuWindow.setTitle(_translate("MainWindow", "&Window"))
        self.buttonTrimStart.setToolTip(_translate("MainWindow", "Click to set the starting position of a trim/\n"
"the point where the intro fade will stop.\n"
"\n"
"Right-click for more options."))
        self.buttonTrimEnd.setToolTip(_translate("MainWindow", "Click to set the ending position of a trim/\n"
"the point where the outro fade will stop.\n"
"\n"
"Right-click for more options."))
        self.buttonPrevious.setToolTip(_translate("MainWindow", "Plays the previous valid media file in the current folder."))
        self.lineOutput.setToolTip(_translate("MainWindow", "No media is currently playing."))
        self.buttonOpenMediaLocation.setToolTip(_translate("MainWindow", "Open media location"))
        self.buttonMarkDeleted.setToolTip(_translate("MainWindow", "Mark media for future deletion.\n"
"0 files are currently marked for deletion.\n"
"\n"
"Shortcuts:\n"
"Shift + click: Show deletion-confirmation prompt.\n"
"Ctrl + click: Immediately delete current media.\n"
"\n"
"Right-click for more options. Deletion-confirmation\n"
"prompt is shown on exit if any files are marked."))
        self.buttonSnapshot.setToolTip(_translate("MainWindow", "Takes a screenshot of the current media at its current position.\n"
"\n"
"Ctrl + click: Opens size and save-file dialogs for your snapshot.\n"
"Shift + click: Opens the last snapshot in PyPlayer.\n"
"Alt + click: Opens the last snapshot in your default program.\n"
"\n"
"Right-click for more options."))
        self.buttonLoop.setToolTip(_translate("MainWindow", "If checked, media loops upon completion — even with autoplay enabled."))
        self.buttonAutoplay.setToolTip(_translate("MainWindow", "If checked, the next valid media file in the current folder will\n"
"automatically play upon completion of the current media."))
        self.buttonNext.setToolTip(_translate("MainWindow", "Plays the next valid media file in the current folder."))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save &as..."))
        self.actionSaveAs.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionOpen.setText(_translate("MainWindow", "&Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExit.setText(_translate("MainWindow", "E&xit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Alt+Q"))
        self.actionSettings.setText(_translate("MainWindow", "&Settings"))
        self.actionRemoveVideo.setText(_translate("MainWindow", "Re&move video"))
        self.actionRemoveAudio.setText(_translate("MainWindow", "Re&move audio"))
        self.actionReplaceAudio.setText(_translate("MainWindow", "&Replace audio"))
        self.actionAmplifyVolume.setText(_translate("MainWindow", "&Amplify audio"))
        self.actionAbout.setText(_translate("MainWindow", "&About..."))
        self.actionCatAny.setText(_translate("MainWindow", "Any &clips"))
        self.actionCatBefore.setText(_translate("MainWindow", "&Before this clip"))
        self.actionCatAfter.setText(_translate("MainWindow", "&After this clip"))
        self.actionOpenMediaLocation.setText(_translate("MainWindow", "M&edia location"))
        self.actionCatNone.setText(_translate("MainWindow", "&No clips"))
        self.actionAddAudioTrack.setText(_translate("MainWindow", "A&dd audio track"))
        self.actionCrop.setText(_translate("MainWindow", "&Crop video"))
        self.actionMarkDeleted.setText(_translate("MainWindow", "Mark media for &deletion"))
        self.actionMarkDeleted.setToolTip(_translate("MainWindow", "Mark current media for deletion. This does not delete the file\n"
"right away, but will give you the option to delete it it later, if\n"
"you select \"Preview list of marked media\" or when you close\n"
"the program."))
        self.actionShowDeletePrompt.setText(_translate("MainWindow", "&Preview list of marked media"))
        self.actionShowDeletePrompt.setToolTip(_translate("MainWindow", "Displays a confirmation prompt for deleting\n"
"all currently marked files. You may cancel this\n"
"prompt, or hand-pick which files you do or\n"
"do not want to actually delete."))
        self.actionViewLog.setText(_translate("MainWindow", "&View log"))
        self.actionShowStatusBar.setText(_translate("MainWindow", "S&tatus Bar"))
        self.actionShowMenuBar.setText(_translate("MainWindow", "Men&u Bar"))
        self.actionShowAdvancedControls.setText(_translate("MainWindow", "Advanced &Controls"))
        self.actionFullscreen.setText(_translate("MainWindow", "Fullscreen"))
        self.actionShowProgressBar.setText(_translate("MainWindow", "Pro&gress Bar"))
        self.actionSnapshot.setText(_translate("MainWindow", "&Snapshot"))
        self.actionQuickSnapshot.setText(_translate("MainWindow", "&Quick snapshot"))
        self.actionDeleteImmediately.setText(_translate("MainWindow", "&Immediately delete current media"))
        self.actionDeleteImmediately.setToolTip(_translate("MainWindow", "Immediately deletes the current\n"
"media, without marking it."))
        self.actionLoop.setText(_translate("MainWindow", "&Loop"))
        self.actionRotate90.setText(_translate("MainWindow", "&90° clockwise"))
        self.actionRotate180.setText(_translate("MainWindow", "&180° clockwise"))
        self.actionRotate270.setText(_translate("MainWindow", "&270° clockwise"))
        self.actionFlipHorizontally.setText(_translate("MainWindow", "&Horizontal flip (mirrored left-to-right)"))
        self.actionFlipVertically.setText(_translate("MainWindow", "&Vertical flip (180° + reversed)"))
        self.actionAddSubtitleFile.setText(_translate("MainWindow", "&Add subtitle file"))
        self.actionwtf.setText(_translate("MainWindow", "wtf"))
        self.actionStop.setText(_translate("MainWindow", "S&top player"))
        self.actionAboutQt.setText(_translate("MainWindow", "About &Qt..."))
        self.actionMinimize.setText(_translate("MainWindow", "&Minimize to tray"))
        self.actionViewInstallFolder.setText(_translate("MainWindow", "View install &folder"))
        self.actionFadeVideo.setText(_translate("MainWindow", "Fade &video only"))
        self.actionFadeAudio.setText(_translate("MainWindow", "Fade &audio only"))
        self.actionFadeBoth.setText(_translate("MainWindow", "&Fade both"))
        self.actionTrimAuto.setText(_translate("MainWindow", "&Auto trim"))
        self.actionTrimAuto.setToolTip(_translate("MainWindow", "If checked, certain formats such as MP4 files will have the starts\n"
"trims moved to the nearest keyframe (keyframes vary from file to\n"
"file). This is a nearly instant operation for most compatible files.\n"
"\n"
"Note: Some formats cannot be trimmed without re-encoding and\n"
"will default to high-precision trimming regardless. If you still\n"
"encounter corrupted trims, switch to high-precision manually.\n"
"\n"
"Note 2: Keyframe trimming only introduces inaccuracy to the\n"
"start of a trim. The end of a trim will always be accurate."))
        self.actionResize.setText(_translate("MainWindow", "&Resize"))
        self.actionCheckForUpdates.setText(_translate("MainWindow", "&Check for updates"))
        self.actionAutoplay.setText(_translate("MainWindow", "&Autoplay"))
        self.actionTrimPrecise.setText(_translate("MainWindow", "Precise trim (&slow)"))
        self.actionTrimPrecise.setToolTip(_translate("MainWindow", "If checked, trimmed videos will ALWAYS be re-encoded to ensure 100%\n"
"accuracy at the start of the trim. Re-encoding is intensive and can take\n"
"nearly twice as long as the trimmed clip\'s length for some formats.\n"
"\n"
"Note: Some formats cannot be trimmed without re-encoding and\n"
"will default to high-precision trimming regardless. If you still\n"
"encounter corrupted trims, switch to high-precision manually."))
        self.actionClearMarked.setText(_translate("MainWindow", "&Clear list of marked media"))
        self.actionClearMarked.setToolTip(_translate("MainWindow", "Clear the list of files that are currently marked\n"
"for deletion, without actually deleting them."))
        self.actionClearRecent.setText(_translate("MainWindow", "&Clear recent files"))
from widgets import QDockWidgetPassthrough, QDraggableWindowFrame, QLineEditPassthrough, QSpinBoxPassthrough, QVideoPlayer, QVideoSlider


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
