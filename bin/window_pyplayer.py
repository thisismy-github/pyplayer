# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\bin\videoeditor_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(757, 551)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setVerticalSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.vlc = QVideoPlayer(self.centralwidget)
        self.vlc.setMinimumSize(QtCore.QSize(256, 0))
        self.vlc.setAcceptDrops(True)
        self.vlc.setObjectName("vlc")
        self.gridLayout.addWidget(self.vlc, 0, 0, 1, 4)
        self.gridLayout.setColumnStretch(0, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 757, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuRecent = QtWidgets.QMenu(self.menuFile)
        self.menuRecent.setObjectName("menuRecent")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuAudio = QtWidgets.QMenu(self.menubar)
        self.menuAudio.setObjectName("menuAudio")
        self.menuAudioTracks = QtWidgets.QMenu(self.menuAudio)
        self.menuAudioTracks.setObjectName("menuAudioTracks")
        self.menuVideo = QtWidgets.QMenu(self.menubar)
        self.menuVideo.setObjectName("menuVideo")
        self.menuConcatenate = QtWidgets.QMenu(self.menuVideo)
        self.menuConcatenate.setObjectName("menuConcatenate")
        self.menuRotate = QtWidgets.QMenu(self.menuVideo)
        self.menuRotate.setObjectName("menuRotate")
        self.menuSubtitles = QtWidgets.QMenu(self.menuVideo)
        self.menuSubtitles.setObjectName("menuSubtitles")
        self.menuVideoTracks = QtWidgets.QMenu(self.menuVideo)
        self.menuVideoTracks.setObjectName("menuVideoTracks")
        self.menuFade = QtWidgets.QMenu(self.menuVideo)
        self.menuFade.setObjectName("menuFade")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(7)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockControls = QDockWidgetPassthrough(MainWindow)
        self.dockControls.setFeatures(QtWidgets.QDockWidget.DockWidgetFloatable)
        self.dockControls.setAllowedAreas(QtCore.Qt.NoDockWidgetArea)
        self.dockControls.setObjectName("dockControls")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_3.setContentsMargins(7, 0, 7, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frameProgress = QtWidgets.QFrame(self.dockWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(255)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameProgress.sizePolicy().hasHeightForWidth())
        self.frameProgress.setSizePolicy(sizePolicy)
        self.frameProgress.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameProgress.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameProgress.setObjectName("frameProgress")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frameProgress)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(3)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.current_time_lineedit = QtWidgets.QLineEdit(self.frameProgress)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.current_time_lineedit.sizePolicy().hasHeightForWidth())
        self.current_time_lineedit.setSizePolicy(sizePolicy)
        self.current_time_lineedit.setMaximumSize(QtCore.QSize(48, 16777215))
        self.current_time_lineedit.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.current_time_lineedit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.current_time_lineedit.setText("--:--")
        self.current_time_lineedit.setMaxLength(12)
        self.current_time_lineedit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.current_time_lineedit.setObjectName("current_time_lineedit")
        self.horizontalLayout_3.addWidget(self.current_time_lineedit)
        self.progress_slider = QVideoSlider(self.frameProgress)
        self.progress_slider.setEnabled(False)
        self.progress_slider.setMinimumSize(QtCore.QSize(0, 20))
        self.progress_slider.setMaximumSize(QtCore.QSize(16777215, 20))
        self.progress_slider.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.progress_slider.setToolTipDuration(2500)
        self.progress_slider.setMaximum(999)
        self.progress_slider.setPageStep(50)
        self.progress_slider.setOrientation(QtCore.Qt.Horizontal)
        self.progress_slider.setInvertedControls(True)
        self.progress_slider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.progress_slider.setObjectName("progress_slider")
        self.horizontalLayout_3.addWidget(self.progress_slider)
        self.max_time_label = QtWidgets.QLabel(self.frameProgress)
        self.max_time_label.setMinimumSize(QtCore.QSize(48, 0))
        self.max_time_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.max_time_label.setObjectName("max_time_label")
        self.horizontalLayout_3.addWidget(self.max_time_label)
        self.verticalLayout_3.addWidget(self.frameProgress)
        self.frameAdvancedControls = QDraggableWindowFrame(self.dockWidgetContents)
        self.frameAdvancedControls.setMinimumSize(QtCore.QSize(40, 0))
        self.frameAdvancedControls.setMaximumSize(QtCore.QSize(16777215, 46))
        self.frameAdvancedControls.setObjectName("frameAdvancedControls")
        self.advanced_layout = QtWidgets.QGridLayout(self.frameAdvancedControls)
        self.advanced_layout.setContentsMargins(0, 0, 0, 2)
        self.advanced_layout.setObjectName("advanced_layout")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setContentsMargins(-1, -1, -1, 1)
        self.gridLayout_6.setVerticalSpacing(3)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.prev_video_button = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.prev_video_button.setMinimumSize(QtCore.QSize(20, 18))
        self.prev_video_button.setMaximumSize(QtCore.QSize(20, 18))
        font = QtGui.QFont()
        font.setFamily("SimSun-ExtB")
        self.prev_video_button.setFont(font)
        self.prev_video_button.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.prev_video_button.setObjectName("prev_video_button")
        self.gridLayout_6.addWidget(self.prev_video_button, 1, 0, 1, 1)
        self.output_lineedit = QtWidgets.QLineEdit(self.frameAdvancedControls)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_lineedit.sizePolicy().hasHeightForWidth())
        self.output_lineedit.setSizePolicy(sizePolicy)
        self.output_lineedit.setMinimumSize(QtCore.QSize(120, 0))
        self.output_lineedit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.output_lineedit.setMaxLength(155)
        self.output_lineedit.setPlaceholderText("Output name")
        self.output_lineedit.setObjectName("output_lineedit")
        self.gridLayout_6.addWidget(self.output_lineedit, 1, 1, 1, 2)
        self.hlayoutToolButtons = QtWidgets.QHBoxLayout()
        self.hlayoutToolButtons.setContentsMargins(-1, 0, -1, 0)
        self.hlayoutToolButtons.setSpacing(6)
        self.hlayoutToolButtons.setObjectName("hlayoutToolButtons")
        self.toolButtonOpenMediaLocation = QtWidgets.QToolButton(self.frameAdvancedControls)
        self.toolButtonOpenMediaLocation.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toolButtonOpenMediaLocation.setFont(font)
        self.toolButtonOpenMediaLocation.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolButtonOpenMediaLocation.setText("📂")
        self.toolButtonOpenMediaLocation.setObjectName("toolButtonOpenMediaLocation")
        self.hlayoutToolButtons.addWidget(self.toolButtonOpenMediaLocation)
        self.toolButtonMarkDeleted = QtWidgets.QToolButton(self.frameAdvancedControls)
        self.toolButtonMarkDeleted.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toolButtonMarkDeleted.setFont(font)
        self.toolButtonMarkDeleted.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolButtonMarkDeleted.setText("❌")
        self.toolButtonMarkDeleted.setCheckable(True)
        self.toolButtonMarkDeleted.setObjectName("toolButtonMarkDeleted")
        self.hlayoutToolButtons.addWidget(self.toolButtonMarkDeleted)
        self.toolButtonSnapshot = QtWidgets.QToolButton(self.frameAdvancedControls)
        self.toolButtonSnapshot.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toolButtonSnapshot.setFont(font)
        self.toolButtonSnapshot.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolButtonSnapshot.setText("📷")
        self.toolButtonSnapshot.setCheckable(False)
        self.toolButtonSnapshot.setObjectName("toolButtonSnapshot")
        self.hlayoutToolButtons.addWidget(self.toolButtonSnapshot)
        self.toolButtonLoop = QtWidgets.QToolButton(self.frameAdvancedControls)
        self.toolButtonLoop.setMaximumSize(QtCore.QSize(22, 18))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.toolButtonLoop.setFont(font)
        self.toolButtonLoop.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.toolButtonLoop.setText("🔁")
        self.toolButtonLoop.setCheckable(True)
        self.toolButtonLoop.setObjectName("toolButtonLoop")
        self.hlayoutToolButtons.addWidget(self.toolButtonLoop)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hlayoutToolButtons.addItem(spacerItem)
        self.gridLayout_6.addLayout(self.hlayoutToolButtons, 0, 0, 1, 4)
        self.next_video_button = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.next_video_button.setMinimumSize(QtCore.QSize(20, 18))
        self.next_video_button.setMaximumSize(QtCore.QSize(20, 18))
        font = QtGui.QFont()
        font.setFamily("SimSun-ExtB")
        self.next_video_button.setFont(font)
        self.next_video_button.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.next_video_button.setText(">>")
        self.next_video_button.setObjectName("next_video_button")
        self.gridLayout_6.addWidget(self.next_video_button, 1, 3, 1, 1)
        self.advanced_layout.addLayout(self.gridLayout_6, 0, 3, 1, 1)
        self.frameQuickChecks = QtWidgets.QFrame(self.frameAdvancedControls)
        self.frameQuickChecks.setObjectName("frameQuickChecks")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frameQuickChecks)
        self.verticalLayout_2.setContentsMargins(-1, 0, -1, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.checkDeleteOriginal = QtWidgets.QCheckBox(self.frameQuickChecks)
        self.checkDeleteOriginal.setMaximumSize(QtCore.QSize(16777215, 13))
        self.checkDeleteOriginal.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.checkDeleteOriginal.setToolTip("Tristate:\n"
"\n"
"Partially checked - videos will be marked\n"
"for deletion after saving an edit.\n"
"\n"
"Fully checked - videos will be immediately\n"
"deleted after successfully saving an edit.\n"
"\n"
"Note: File deletion/recycling\n"
"is dependent on your settings.")
        self.checkDeleteOriginal.setText("Delete originals")
        self.checkDeleteOriginal.setTristate(True)
        self.checkDeleteOriginal.setObjectName("checkDeleteOriginal")
        self.verticalLayout_2.addWidget(self.checkDeleteOriginal)
        self.checkSkipMarked = QtWidgets.QCheckBox(self.frameQuickChecks)
        self.checkSkipMarked.setMinimumSize(QtCore.QSize(103, 0))
        self.checkSkipMarked.setMaximumSize(QtCore.QSize(16777215, 13))
        self.checkSkipMarked.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.checkSkipMarked.setToolTip("If checked, using the next/previous video buttons will\n"
"skip over files that have been marked for deletion.")
        self.checkSkipMarked.setText("Skip marked files")
        self.checkSkipMarked.setObjectName("checkSkipMarked")
        self.verticalLayout_2.addWidget(self.checkSkipMarked)
        self.checkAutoplay = QtWidgets.QCheckBox(self.frameQuickChecks)
        self.checkAutoplay.setMaximumSize(QtCore.QSize(16777215, 13))
        self.checkAutoplay.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.checkAutoplay.setToolTip("If checked, the next valid media file in the current folder will\n"
"automatically play upon completion of the current media.")
        self.checkAutoplay.setText("Autoplay")
        self.checkAutoplay.setObjectName("checkAutoplay")
        self.verticalLayout_2.addWidget(self.checkAutoplay)
        self.advanced_layout.addWidget(self.frameQuickChecks, 0, 5, 1, 2)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setHorizontalSpacing(6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setSpacing(2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.hour_spin = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.hour_spin.setMinimumSize(QtCore.QSize(26, 0))
        self.hour_spin.setMaximumSize(QtCore.QSize(33, 16777215))
        self.hour_spin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.hour_spin.setObjectName("hour_spin")
        self.horizontalLayout_2.addWidget(self.hour_spin)
        self.minute_spin = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.minute_spin.setMinimumSize(QtCore.QSize(33, 0))
        self.minute_spin.setMaximumSize(QtCore.QSize(33, 16777215))
        self.minute_spin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.minute_spin.setMaximum(59)
        self.minute_spin.setObjectName("minute_spin")
        self.horizontalLayout_2.addWidget(self.minute_spin)
        self.second_spin = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.second_spin.setMinimumSize(QtCore.QSize(33, 0))
        self.second_spin.setMaximumSize(QtCore.QSize(33, 16777215))
        self.second_spin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.second_spin.setMaximum(59)
        self.second_spin.setObjectName("second_spin")
        self.horizontalLayout_2.addWidget(self.second_spin)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 1, 0, 1, 1)
        self.frame_spin = QSpinBoxPassthrough(self.frameAdvancedControls)
        self.frame_spin.setMinimumSize(QtCore.QSize(98, 0))
        self.frame_spin.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.frame_spin.setWrapping(True)
        self.frame_spin.setPrefix("Frame: ")
        self.frame_spin.setMaximum(0)
        self.frame_spin.setObjectName("frame_spin")
        self.gridLayout_2.addWidget(self.frame_spin, 2, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 0, 1, 1, 1)
        self.pause_button = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.pause_button.setMinimumSize(QtCore.QSize(28, 0))
        self.pause_button.setMaximumSize(QtCore.QSize(28, 28))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pause_button.setFont(font)
        self.pause_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pause_button.setObjectName("pause_button")
        self.gridLayout_3.addWidget(self.pause_button, 0, 0, 1, 1)
        self.advanced_layout.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        self.advancedControlsLine = QtWidgets.QFrame(self.frameAdvancedControls)
        self.advancedControlsLine.setFrameShape(QtWidgets.QFrame.VLine)
        self.advancedControlsLine.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.advancedControlsLine.setObjectName("advancedControlsLine")
        self.advanced_layout.addWidget(self.advancedControlsLine, 0, 2, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.trim_start_button = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.trim_start_button.setMinimumSize(QtCore.QSize(32, 18))
        self.trim_start_button.setMaximumSize(QtCore.QSize(95, 16777215))
        self.trim_start_button.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.trim_start_button.setText("Start")
        self.trim_start_button.setCheckable(True)
        self.trim_start_button.setObjectName("trim_start_button")
        self.verticalLayout.addWidget(self.trim_start_button)
        self.trim_end_button = QtWidgets.QPushButton(self.frameAdvancedControls)
        self.trim_end_button.setMinimumSize(QtCore.QSize(32, 18))
        self.trim_end_button.setMaximumSize(QtCore.QSize(95, 16777215))
        self.trim_end_button.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.trim_end_button.setText("End")
        self.trim_end_button.setCheckable(True)
        self.trim_end_button.setObjectName("trim_end_button")
        self.verticalLayout.addWidget(self.trim_end_button)
        self.advanced_layout.addLayout(self.verticalLayout, 0, 1, 1, 1)
        self.volume_slider = QtWidgets.QSlider(self.frameAdvancedControls)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.volume_slider.sizePolicy().hasHeightForWidth())
        self.volume_slider.setSizePolicy(sizePolicy)
        self.volume_slider.setMinimumSize(QtCore.QSize(22, 0))
        self.volume_slider.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.volume_slider.setToolTip("100%")
        self.volume_slider.setMaximum(100)
        self.volume_slider.setSingleStep(5)
        self.volume_slider.setProperty("value", 50)
        self.volume_slider.setOrientation(QtCore.Qt.Vertical)
        self.volume_slider.setObjectName("volume_slider")
        self.advanced_layout.addWidget(self.volume_slider, 0, 10, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.advanced_layout.addItem(spacerItem1, 0, 4, 1, 1)
        self.verticalLayout_3.addWidget(self.frameAdvancedControls)
        self.dockControls.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockControls)
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setMenuRole(QtWidgets.QAction.QuitRole)
        self.actionExit.setObjectName("actionExit")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setMenuRole(QtWidgets.QAction.PreferencesRole)
        self.actionSettings.setObjectName("actionSettings")
        self.actionRemoveVideo = QtWidgets.QAction(MainWindow)
        self.actionRemoveVideo.setObjectName("actionRemoveVideo")
        self.actionRemoveAudio = QtWidgets.QAction(MainWindow)
        self.actionRemoveAudio.setObjectName("actionRemoveAudio")
        self.actionReplaceAudio = QtWidgets.QAction(MainWindow)
        self.actionReplaceAudio.setObjectName("actionReplaceAudio")
        self.actionAmplifyVolume = QtWidgets.QAction(MainWindow)
        self.actionAmplifyVolume.setObjectName("actionAmplifyVolume")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setMenuRole(QtWidgets.QAction.AboutRole)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCatAny = QtWidgets.QAction(MainWindow)
        self.actionCatAny.setObjectName("actionCatAny")
        self.actionCatBefore = QtWidgets.QAction(MainWindow)
        self.actionCatBefore.setObjectName("actionCatBefore")
        self.actionCatAfter = QtWidgets.QAction(MainWindow)
        self.actionCatAfter.setObjectName("actionCatAfter")
        self.actionOpenMediaLocation = QtWidgets.QAction(MainWindow)
        self.actionOpenMediaLocation.setObjectName("actionOpenMediaLocation")
        self.actionCatNone = QtWidgets.QAction(MainWindow)
        self.actionCatNone.setObjectName("actionCatNone")
        self.actionAddAudioTrack = QtWidgets.QAction(MainWindow)
        self.actionAddAudioTrack.setObjectName("actionAddAudioTrack")
        self.actionCrop = QtWidgets.QAction(MainWindow)
        self.actionCrop.setCheckable(True)
        self.actionCrop.setObjectName("actionCrop")
        self.actionMarkDeleted = QtWidgets.QAction(MainWindow)
        self.actionMarkDeleted.setCheckable(True)
        self.actionMarkDeleted.setIconText("Mark media for deletion")
        self.actionMarkDeleted.setToolTip("Mark media for future deletion.\n"
"0 files are currently marked for deletion.\n"
"\n"
"Shortcuts:\n"
"Shift + click: Show deletion-confirmation prompt.\n"
"Ctrl + click: Immediately delete current media.\n"
"\n"
"Right-click for more options. Deletion-confirmation\n"
"prompt is shown on exit if any files are marked.")
        self.actionMarkDeleted.setObjectName("actionMarkDeleted")
        self.actionEmptyRecycleBin = QtWidgets.QAction(MainWindow)
        self.actionEmptyRecycleBin.setObjectName("actionEmptyRecycleBin")
        self.actionViewLog = QtWidgets.QAction(MainWindow)
        self.actionViewLog.setObjectName("actionViewLog")
        self.actionShowStatusBar = QtWidgets.QAction(MainWindow)
        self.actionShowStatusBar.setCheckable(True)
        self.actionShowStatusBar.setChecked(True)
        self.actionShowStatusBar.setObjectName("actionShowStatusBar")
        self.actionShowMenuBar = QtWidgets.QAction(MainWindow)
        self.actionShowMenuBar.setCheckable(True)
        self.actionShowMenuBar.setChecked(True)
        self.actionShowMenuBar.setObjectName("actionShowMenuBar")
        self.actionShowAdvancedControls = QtWidgets.QAction(MainWindow)
        self.actionShowAdvancedControls.setCheckable(True)
        self.actionShowAdvancedControls.setChecked(True)
        self.actionShowAdvancedControls.setObjectName("actionShowAdvancedControls")
        self.actionFullscreen = QtWidgets.QAction(MainWindow)
        self.actionFullscreen.setCheckable(True)
        self.actionFullscreen.setObjectName("actionFullscreen")
        self.actionShowProgressBar = QtWidgets.QAction(MainWindow)
        self.actionShowProgressBar.setCheckable(True)
        self.actionShowProgressBar.setChecked(True)
        self.actionShowProgressBar.setObjectName("actionShowProgressBar")
        self.actionSnapshot = QtWidgets.QAction(MainWindow)
        self.actionSnapshot.setObjectName("actionSnapshot")
        self.actionQuickSnapshot = QtWidgets.QAction(MainWindow)
        self.actionQuickSnapshot.setObjectName("actionQuickSnapshot")
        self.actionDeleteImmediately = QtWidgets.QAction(MainWindow)
        self.actionDeleteImmediately.setObjectName("actionDeleteImmediately")
        self.actionLoop = QtWidgets.QAction(MainWindow)
        self.actionLoop.setCheckable(True)
        self.actionLoop.setObjectName("actionLoop")
        self.actionRotate90 = QtWidgets.QAction(MainWindow)
        self.actionRotate90.setObjectName("actionRotate90")
        self.actionRotate180 = QtWidgets.QAction(MainWindow)
        self.actionRotate180.setObjectName("actionRotate180")
        self.actionRotate270 = QtWidgets.QAction(MainWindow)
        self.actionRotate270.setObjectName("actionRotate270")
        self.actionFlipHorizontally = QtWidgets.QAction(MainWindow)
        self.actionFlipHorizontally.setObjectName("actionFlipHorizontally")
        self.actionFlipVertically = QtWidgets.QAction(MainWindow)
        self.actionFlipVertically.setObjectName("actionFlipVertically")
        self.actionAddSubtitleFile = QtWidgets.QAction(MainWindow)
        self.actionAddSubtitleFile.setObjectName("actionAddSubtitleFile")
        self.actionwtf = QtWidgets.QAction(MainWindow)
        self.actionwtf.setEnabled(False)
        self.actionwtf.setObjectName("actionwtf")
        self.actionStop = QtWidgets.QAction(MainWindow)
        self.actionStop.setObjectName("actionStop")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionViewInstallFolder = QtWidgets.QAction(MainWindow)
        self.actionViewInstallFolder.setObjectName("actionViewInstallFolder")
        self.actionFadeVideo = QtWidgets.QAction(MainWindow)
        self.actionFadeVideo.setCheckable(True)
        self.actionFadeVideo.setObjectName("actionFadeVideo")
        self.actionFadeAudio = QtWidgets.QAction(MainWindow)
        self.actionFadeAudio.setCheckable(True)
        self.actionFadeAudio.setObjectName("actionFadeAudio")
        self.actionFadeBoth = QtWidgets.QAction(MainWindow)
        self.actionFadeBoth.setCheckable(True)
        self.actionFadeBoth.setObjectName("actionFadeBoth")
        self.actionFadeDisable = QtWidgets.QAction(MainWindow)
        self.actionFadeDisable.setCheckable(True)
        self.actionFadeDisable.setChecked(True)
        self.actionFadeDisable.setObjectName("actionFadeDisable")
        self.actionResize = QtWidgets.QAction(MainWindow)
        self.actionResize.setObjectName("actionResize")
        self.actionCheckForUpdates = QtWidgets.QAction(MainWindow)
        self.actionCheckForUpdates.setObjectName("actionCheckForUpdates")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.menuRecent.menuAction())
        self.menuFile.addAction(self.actionOpenMediaLocation)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionStop)
        self.menuFile.addAction(self.actionMinimize)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionSettings)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionLoop)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionMarkDeleted)
        self.menuEdit.addAction(self.actionEmptyRecycleBin)
        self.menuEdit.addAction(self.actionDeleteImmediately)
        self.menuHelp.addAction(self.actionCheckForUpdates)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionViewLog)
        self.menuHelp.addAction(self.actionViewInstallFolder)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAboutQt)
        self.menuHelp.addAction(self.actionAbout)
        self.menuAudio.addAction(self.menuAudioTracks.menuAction())
        self.menuAudio.addSeparator()
        self.menuAudio.addAction(self.actionAmplifyVolume)
        self.menuAudio.addAction(self.actionReplaceAudio)
        self.menuAudio.addAction(self.actionAddAudioTrack)
        self.menuAudio.addAction(self.actionRemoveAudio)
        self.menuConcatenate.addAction(self.actionCatBefore)
        self.menuConcatenate.addAction(self.actionCatAfter)
        self.menuConcatenate.addSeparator()
        self.menuConcatenate.addAction(self.actionCatAny)
        self.menuConcatenate.addAction(self.actionCatNone)
        self.menuRotate.addAction(self.actionRotate90)
        self.menuRotate.addAction(self.actionRotate180)
        self.menuRotate.addAction(self.actionRotate270)
        self.menuRotate.addAction(self.actionFlipVertically)
        self.menuRotate.addAction(self.actionFlipHorizontally)
        self.menuSubtitles.addAction(self.actionAddSubtitleFile)
        self.menuFade.addAction(self.actionFadeDisable)
        self.menuFade.addSeparator()
        self.menuFade.addAction(self.actionFadeBoth)
        self.menuFade.addAction(self.actionFadeVideo)
        self.menuFade.addAction(self.actionFadeAudio)
        self.menuVideo.addAction(self.menuSubtitles.menuAction())
        self.menuVideo.addAction(self.menuVideoTracks.menuAction())
        self.menuVideo.addSeparator()
        self.menuVideo.addAction(self.actionSnapshot)
        self.menuVideo.addAction(self.actionQuickSnapshot)
        self.menuVideo.addSeparator()
        self.menuVideo.addAction(self.menuConcatenate.menuAction())
        self.menuVideo.addAction(self.menuRotate.menuAction())
        self.menuVideo.addAction(self.menuFade.menuAction())
        self.menuVideo.addAction(self.actionCrop)
        self.menuVideo.addAction(self.actionRemoveVideo)
        self.menuVideo.addAction(self.actionResize)
        self.menuWindow.addAction(self.actionFullscreen)
        self.menuWindow.addSeparator()
        self.menuWindow.addAction(self.actionShowMenuBar)
        self.menuWindow.addAction(self.actionShowStatusBar)
        self.menuWindow.addAction(self.actionShowProgressBar)
        self.menuWindow.addAction(self.actionShowAdvancedControls)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuVideo.menuAction())
        self.menubar.addAction(self.menuAudio.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.pause_button, self.trim_start_button)
        MainWindow.setTabOrder(self.trim_start_button, self.trim_end_button)
        MainWindow.setTabOrder(self.trim_end_button, self.prev_video_button)
        MainWindow.setTabOrder(self.prev_video_button, self.next_video_button)
        MainWindow.setTabOrder(self.next_video_button, self.output_lineedit)
        MainWindow.setTabOrder(self.output_lineedit, self.hour_spin)
        MainWindow.setTabOrder(self.hour_spin, self.minute_spin)
        MainWindow.setTabOrder(self.minute_spin, self.second_spin)
        MainWindow.setTabOrder(self.second_spin, self.frame_spin)
        MainWindow.setTabOrder(self.frame_spin, self.volume_slider)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PyPlayer"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuRecent.setTitle(_translate("MainWindow", "Recent files..."))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuAudio.setTitle(_translate("MainWindow", "Audio"))
        self.menuAudioTracks.setTitle(_translate("MainWindow", "Audio Tracks"))
        self.menuVideo.setTitle(_translate("MainWindow", "Video"))
        self.menuConcatenate.setTitle(_translate("MainWindow", "Concatenate"))
        self.menuRotate.setTitle(_translate("MainWindow", "Rotate/Flip"))
        self.menuSubtitles.setTitle(_translate("MainWindow", "Subtitle Tracks"))
        self.menuVideoTracks.setTitle(_translate("MainWindow", "Video Tracks"))
        self.menuFade.setTitle(_translate("MainWindow", "Fade"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.max_time_label.setText(_translate("MainWindow", "--:--"))
        self.prev_video_button.setToolTip(_translate("MainWindow", "Plays the previous valid media file in the current folder."))
        self.prev_video_button.setText(_translate("MainWindow", "<<"))
        self.output_lineedit.setToolTip(_translate("MainWindow", "No media is currently playing."))
        self.next_video_button.setToolTip(_translate("MainWindow", "Plays the next valid media file in the current folder."))
        self.pause_button.setText(_translate("MainWindow", "𝗜𝗜"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save as..."))
        self.actionSaveAs.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionOpen.setText(_translate("MainWindow", "Open..."))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionRemoveVideo.setText(_translate("MainWindow", "Remove video"))
        self.actionRemoveAudio.setText(_translate("MainWindow", "Remove audio"))
        self.actionReplaceAudio.setText(_translate("MainWindow", "Replace audio"))
        self.actionAmplifyVolume.setText(_translate("MainWindow", "Amplify audio"))
        self.actionAbout.setText(_translate("MainWindow", "About..."))
        self.actionCatAny.setText(_translate("MainWindow", "Any clips"))
        self.actionCatBefore.setText(_translate("MainWindow", "Before this clip"))
        self.actionCatAfter.setText(_translate("MainWindow", "After this clip"))
        self.actionOpenMediaLocation.setText(_translate("MainWindow", "Media location"))
        self.actionOpenMediaLocation.setToolTip(_translate("MainWindow", "Open media location"))
        self.actionCatNone.setText(_translate("MainWindow", "No clips"))
        self.actionAddAudioTrack.setText(_translate("MainWindow", "Add audio track"))
        self.actionCrop.setText(_translate("MainWindow", "Crop video"))
        self.actionMarkDeleted.setText(_translate("MainWindow", "Mark media for deletion"))
        self.actionEmptyRecycleBin.setText(_translate("MainWindow", "Delete all marked media"))
        self.actionViewLog.setText(_translate("MainWindow", "View log"))
        self.actionShowStatusBar.setText(_translate("MainWindow", "Status Bar"))
        self.actionShowMenuBar.setText(_translate("MainWindow", "Menu Bar"))
        self.actionShowAdvancedControls.setText(_translate("MainWindow", "Advanced Controls"))
        self.actionFullscreen.setText(_translate("MainWindow", "Fullscreen"))
        self.actionShowProgressBar.setText(_translate("MainWindow", "Progress Bar"))
        self.actionSnapshot.setText(_translate("MainWindow", "Snapshot"))
        self.actionQuickSnapshot.setText(_translate("MainWindow", "Quick snapshot"))
        self.actionQuickSnapshot.setToolTip(_translate("MainWindow", "Takes a screenshot of the current media at its current position.\n"
"\n"
"Ctrl + click: Opens size and save-file dialogs for your snapshot.\n"
"Shift + click: Opens the most recent snapshot.\n"
"\n"
"Right-click for more options."))
        self.actionDeleteImmediately.setText(_translate("MainWindow", "Immediately delete current media"))
        self.actionLoop.setText(_translate("MainWindow", "Loop"))
        self.actionLoop.setToolTip(_translate("MainWindow", "If checked, media loops upon completion — even with autoplay enabled."))
        self.actionRotate90.setText(_translate("MainWindow", "90° clockwise"))
        self.actionRotate180.setText(_translate("MainWindow", "180° clockwise"))
        self.actionRotate270.setText(_translate("MainWindow", "270° clockwise"))
        self.actionFlipHorizontally.setText(_translate("MainWindow", "Horizontal flip (mirrored left-to-right)"))
        self.actionFlipVertically.setText(_translate("MainWindow", "Vertical flip (180° + reversed)"))
        self.actionAddSubtitleFile.setText(_translate("MainWindow", "Add subtitle file"))
        self.actionwtf.setText(_translate("MainWindow", "wtf"))
        self.actionStop.setText(_translate("MainWindow", "Stop player"))
        self.actionAboutQt.setText(_translate("MainWindow", "About Qt..."))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize to tray"))
        self.actionViewInstallFolder.setText(_translate("MainWindow", "View install folder"))
        self.actionFadeVideo.setText(_translate("MainWindow", "Fade video only"))
        self.actionFadeAudio.setText(_translate("MainWindow", "Fade audio only"))
        self.actionFadeBoth.setText(_translate("MainWindow", "Fade both"))
        self.actionFadeDisable.setText(_translate("MainWindow", "Disable"))
        self.actionResize.setText(_translate("MainWindow", "Resize"))
        self.actionCheckForUpdates.setText(_translate("MainWindow", "Check for updates"))
from widgets import QDockWidgetPassthrough, QDraggableWindowFrame, QSpinBoxPassthrough, QVideoPlayer, QVideoSlider


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
